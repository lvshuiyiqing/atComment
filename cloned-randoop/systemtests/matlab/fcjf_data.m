fcjf.s = [ 0 50917 77526 106324 114454 110213 99717 92325 85873 81804 79666 78528 78350 78013 79230 80962 81736 83500 84562 85811 87558 89465 91039 92381 93661 94899 96052 97081 98186 100289 102208 103456 105707 107792 109806 112337 114722 117086 119387 121311 122641 124212 126640 128649 129829 131591 134537 137402 140378 290693 ];
fcjf.gt = [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ];
fcjf.et = [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ];
fcjf.n = { 'StatementThrowsNPE/org.jfree.chart.renderer.WaferMapRenderer.getChipColor(java.lang.Number)' 'EqualsHashcode/org.jfree.chart.labels.StandardXYZToolTipGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.CombinedRangeXYPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions(long,long)' 'StatementThrowsNPE/org.jfree.chart.plot.WaferMapPlot.getLegendItems()' 'EqualsHashcode/org.jfree.chart.block.BlockContainer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.category.DefaultIntervalCategoryDataset.<init>([[Ljava.lang.Number;,[[Ljava.lang.Number;)' 'StatementThrowsNPE/org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineException(java.util.Date)' 'EqualsHashcode/org.jfree.data.time.TimeTableXYDataset.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.statistics.MeanAndStandardDeviation.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.ThermometerPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.category.DefaultIntervalCategoryDataset.<init>([Ljava.lang.Comparable;,[Ljava.lang.Comparable;,[[Ljava.lang.Number;,[[Ljava.lang.Number;)' 'EqualsHashcode/org.jfree.chart.axis.TickUnits.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.needle.PointerNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getDomainUpperBound(boolean)' 'EqualsHashcode/org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.block.FlowArrangement.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getStartX(int,int)' 'EqualsHashcode/org.jfree.chart.plot.MultiplePiePlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.CombinedRangeCategoryPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.PiePlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getNewestTime()' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.createCategoryDataset(java.lang.String,java.lang.String,[[Ljava.lang.Number;)' 'EqualsHashcode/org.jfree.chart.labels.StandardXYItemLabelGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.LegendItemCollection.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.indexX(int)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getMaxZValue()' 'EqualsHashcode/org.jfree.chart.labels.HighLowItemLabelGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getMinZValue(double,double,double,double)' 'StatementThrowsNPE/org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineException(long)' 'EqualsHashcode/org.jfree.chart.labels.StandardPieSectionLabelGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getY(int,int)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getX(int,int)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getXValue(int)' 'StatementThrowsNPE/org.jfree.chart.plot.CombinedDomainCategoryPlot.getCategories()' 'EqualsHashcode/org.jfree.chart.urls.StandardPieURLGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getOldestTime()' 'EqualsHashcode/org.jfree.chart.labels.ItemLabelPosition.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.statistics.HistogramBin.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findDomainBounds(org.jfree.data.xy.XYDataset,boolean)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getDomainBounds(boolean)' 'EqualsHashcode/org.jfree.chart.plot.IntervalMarker.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ColorBar.configure(org.jfree.chart.plot.ContourPlot)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.indexX()' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.zoom(double)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.advanceTime()' 'EqualsHashcode/org.jfree.data.gantt.Task.equals(java.lang.Object)' 'EqualsToItself/org.jfree.data.Range.equals(java.lang.Object)' 'StatementThrowsNPE/javax.servlet.GenericServlet.getInitParameterNames()' 'StatementThrowsNPE/javax.servlet.GenericServlet.getServletContext()' 'StatementThrowsNPE/org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.needle.LongNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getZ(int,int)' 'EqualsHashcode/org.jfree.chart.plot.RingPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findRangeBounds(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getVolumeValue(int,int)' 'EqualsHashcode/org.jfree.chart.plot.MeterPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.FastScatterPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.CompassPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.block.LabelBlock.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.ChartRenderingInfo.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.Plot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.block.BlockBorder.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.statistics.HistogramDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getLow(int,int)' 'EqualsHashcode/org.jfree.chart.labels.CustomXYToolTipGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.annotations.XYPolygonAnnotation.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)' 'EqualsHashcode/org.jfree.chart.needle.MiddlePinNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/javax.servlet.GenericServlet.getInitParameter(java.lang.String)' 'EqualsHashcode/org.jfree.chart.title.LegendGraphic.equals(java.lang.Object)' 'EqualsToItself/org.jfree.data.statistics.SimpleHistogramBin.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.needle.LineNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.CategoryPlot.getCategories()' 'StatementThrowsNPE/javax.servlet.GenericServlet.getServletName()' 'StatementThrowsNPE/org.jfree.data.xml.PieDatasetHandler.addItem(java.lang.Comparable,java.lang.Number)' 'EqualsSymmetric/org.jfree.chart.renderer.category.LevelRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractXYZDataset.getZValue(int,int)' 'EqualsHashcode/org.jfree.chart.entity.StandardEntityCollection.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.CategoryPlot.zoom(double)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.createCategoryDataset([Ljava.lang.Comparable;,[Ljava.lang.Comparable;,[[D)' 'EqualsHashcode/org.jfree.chart.plot.ValueMarker.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.statistics.SimpleHistogramDataset.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.labels.StandardXYToolTipGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.urls.StandardXYURLGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.CombinedDomainXYPlot.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.plot.RingPlot.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.category.LineAndShapeRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.FastScatterPlot.<init>([[F,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis)' 'EqualsHashcode/org.jfree.data.xy.IntervalXYDelegate.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.iterateDomainBounds(org.jfree.data.xy.XYDataset)' 'EqualsSymmetric/org.jfree.chart.plot.CombinedDomainXYPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.indexY(int)' 'EqualsHashcode/org.jfree.chart.entity.LegendItemEntity.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getHighValue(int,int)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findMaximumDomainValue(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.plot.CombinedDomainCategoryPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.indexZ(int,int)' 'EqualsHashcode/org.jfree.chart.axis.DateAxis.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.setTimeBase(org.jfree.data.time.RegularTimePeriod)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.category.BarRenderer.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.time.TimeSeriesCollection.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getDomainLowerBound(boolean)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findMaximumRangeValue(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getOpenValue(int,int)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getX(int,int)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getMinZValue()' 'EqualsHashcode/org.jfree.data.KeyToGroupMap.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.chart.ClipPath.clone()' 'EqualsHashcode/org.jfree.chart.entity.ContourEntity.equals(java.lang.Object)' 'StatementThrowsNPE/javax.servlet.GenericServlet.log(java.lang.String)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findMinimumDomainValue(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.getMaxRadius()' 'EqualsHashcode/org.jfree.chart.plot.PolarPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.FastScatterPlot.zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getZValueRange(org.jfree.data.Range,org.jfree.data.Range)' 'StatementThrowsNPE/org.jfree.data.xml.CategorySeriesHandler.endElement(java.lang.String,java.lang.String,java.lang.String)' 'EqualsHashcode/org.jfree.chart.needle.PlumNeedle.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getEndX(int,int)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getItemCount(int)' 'EqualsHashcode/org.jfree.chart.plot.DefaultDrawingSupplier.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getEndX(int,int)' 'EqualsHashcode/org.jfree.chart.plot.PlotRenderingInfo.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getCloseValue(int,int)' 'StatementThrowsNPE/org.jfree.data.xml.CategoryDatasetHandler.addItem(java.lang.Comparable,java.lang.Comparable,java.lang.Number)' 'EqualsHashcode/org.jfree.chart.urls.CustomXYURLGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/javax.servlet.GenericServlet.log(java.lang.String,java.lang.Throwable)' 'EqualsToItself/java.awt.geom.Point2D.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.statistics.SimpleHistogramBin.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.category.DefaultIntervalCategoryDataset.<init>([Ljava.lang.String;,[[Ljava.lang.Number;,[[Ljava.lang.Number;)' 'EqualsHashcode/org.jfree.chart.labels.SymbolicXYItemLabelGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.renderer.xy.XYBarRenderer.findDomainBounds(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.data.time.TimePeriodValuesCollection.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.renderer.WaferMapRenderer.setPlot(org.jfree.chart.plot.WaferMapPlot)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getOpen(int,int)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardContourToolTipGenerator.generateToolTip(org.jfree.data.contour.ContourDataset,int)' 'EqualsHashcode/org.jfree.data.xy.DefaultOHLCDataset.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.plot.CombinedRangeXYPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.setDataset(org.jfree.data.contour.ContourDataset)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setAutoTickUnitSelection(boolean)' 'EqualsHashcode/org.jfree.chart.labels.AbstractPieItemLabelGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractXYDataset.getXValue(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.zoom(double)' 'EqualsHashcode/org.jfree.chart.needle.WindNeedle.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.plot.CombinedDomainCategoryPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.MovingAverage.createMovingAverage(org.jfree.data.xy.XYDataset,java.lang.String,long,long)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findMinimumRangeValue(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.entity.ChartEntity.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getItemCount(int)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getHigh(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getX(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.WaferMapPlot.setRenderer(org.jfree.chart.renderer.WaferMapRenderer)' 'EqualsHashcode/org.jfree.chart.needle.PinNeedle.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.block.AbstractBlock.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultWindDataset.<init>([[[Ljava.lang.Object;)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.createCategoryDataset(java.lang.String,java.lang.String,[[D)' 'EqualsHashcode/org.jfree.chart.block.GridArrangement.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractIntervalXYDataset.getStartYValue(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultWindDataset.<init>(java.util.List,[[[Ljava.lang.Object;)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.isEmptyOrNull(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getXDate(int,int)' 'EqualsSymmetric/org.jfree.chart.plot.CombinedRangeCategoryPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.<init>(org.jfree.data.contour.ContourDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ColorBar)' 'EqualsHashcode/org.jfree.chart.plot.SpiderWebPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getOpenValue(int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.category.StackedBarRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getDomainLowerBound(boolean)' 'EqualsHashcode/org.jfree.chart.needle.ArrowNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findDomainBounds(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.data.general.DatasetGroup.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getDomainUpperBound(boolean)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getY(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractIntervalXYDataset.getEndYValue(int,int)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getY(int,int)' 'EqualsHashcode/org.jfree.chart.block.CenterArrangement.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findRangeBounds(org.jfree.data.xy.XYDataset,boolean)' 'EqualsHashcode/org.jfree.chart.JFreeChart.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.KeyedObjects.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.FastScatterPlot.zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getLowValue(int,int)' 'EqualsHashcode/org.jfree.chart.plot.CategoryMarker.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.FastScatterPlot.clone()' 'EqualsSymmetric/org.jfree.chart.plot.PiePlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.axis.SegmentedTimeline$Segment.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.gantt.TaskSeriesCollection.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.urls.CustomPieURLGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getY(int,int)' 'EqualsHashcode/org.jfree.chart.block.ColumnArrangement.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setUpperBound(double)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.<init>(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.visibleRange(org.jfree.data.contour.ContourDataset,org.jfree.data.Range,org.jfree.data.Range)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYItemLabelGenerator.generateLabel(org.jfree.data.xy.XYDataset,int,int)' 'StatementThrowsNPE/org.jfree.data.general.AbstractSeriesDataset.indexOf(java.lang.Comparable)' 'StatementThrowsNPE/org.jfree.chart.labels.SymbolicXYItemLabelGenerator.generateToolTip(org.jfree.data.xy.XYDataset,int,int)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getDomainBounds(boolean)' 'EqualsHashcode/org.jfree.data.xy.CategoryTableXYDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue(int,int)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getY(int,int)' 'StatementThrowsNPE/org.jfree.chart.labels.AbstractXYItemLabelGenerator.generateLabelString(org.jfree.data.xy.XYDataset,int,int)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getStartY(int,int)' 'EqualsHashcode/org.jfree.chart.block.BorderArrangement.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.datasetChanged(org.jfree.data.general.DatasetChangeEvent)' 'StatementThrowsNPE/org.jfree.data.xml.ItemHandler.endElement(java.lang.String,java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getEndXValue(int,int)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getStartY(int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.XYBarRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getClose(int,int)' 'EqualsHashcode/org.jfree.chart.needle.ShipNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getStartX(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickMarkInsideLength(float)' 'EqualsSymmetric/org.jfree.chart.renderer.category.StatisticalBarRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)' 'EqualsHashcode/org.jfree.data.statistics.DefaultStatisticalCategoryDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.Plot.zoom(double)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getEndY(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.FastScatterPlot.zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractXYDataset.getYValue(int,int)' 'EqualsHashcode/org.jfree.chart.labels.StandardContourToolTipGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.labels.MultipleXYSeriesLabelGenerator.generateLabel(org.jfree.data.xy.XYDataset,int)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getVolume(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.<init>(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)' 'EqualsHashcode/org.jfree.chart.plot.XYPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.time.TimeSeries.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.SpiderWebPlot.getLegendItems()' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getItemCount(int)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getEndX(int,int)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getEndY(int,int)' 'StatementThrowsNPE/org.jfree.chart.ClipPath.generateClipPath(java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis)' 'EqualsHashcode/org.jfree.data.KeyedObject.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickLabelsVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.plot.Plot.getLegendItems()' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getStartX(int,int)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getYValue(int,int)' 'EqualsHashcode/org.jfree.chart.axis.ValueTick.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.iterateXYRangeBounds(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYZToolTipGenerator.generateToolTip(org.jfree.data.xy.XYZDataset,int,int)' 'EqualsHashcode/org.jfree.chart.renderer.xy.StackedXYAreaRenderer.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultWindDataset.<init>([Ljava.lang.String;,[[[Ljava.lang.Object;)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.resizeRange(double,double)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setAxisLineStroke(java.awt.Stroke)' 'EqualsHashcode/org.jfree.chart.annotations.XYPointerAnnotation.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)' 'EqualsSymmetric/org.jfree.data.gantt.Task.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.urls.TimeSeriesURLGenerator.generateURL(org.jfree.data.xy.XYDataset,int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.AbstractRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getClose(int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.category.GroupedStackedBarRenderer.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.plot.SpiderWebPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getEndX(int,int)' 'EqualsHashcode/org.jfree.chart.plot.CategoryPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getX(int,int)' 'EqualsHashcode/org.jfree.chart.plot.MeterInterval.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickMarkInsideLength(float)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setNegativeArrowVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setUpArrow(java.awt.Shape)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setUpperMargin(double)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getStartXValue(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setNumberFormatOverride(java.text.NumberFormat)' 'StatementThrowsNPE/org.jfree.chart.axis.ModuloAxis.resizeRange(double)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultHighLowDataset.getX(int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.HighLowRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.centerRange(double)' 'StatementThrowsNPE/org.jfree.chart.plot.FastScatterPlot.zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)' 'StatementThrowsNPE/org.jfree.chart.plot.ColorPalette.getPaint(double)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYToolTipGenerator.generateToolTip(org.jfree.data.xy.XYDataset,int,int)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.setAutoWidth(boolean)' 'EqualsSymmetric/org.jfree.chart.block.AbstractBlock.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.CyclicNumberAxis.centerRange(double)' 'EqualsHashcode/org.jfree.chart.renderer.xy.XYAreaRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.CategoryAxis.getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getStartX(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getX(int,int)' 'StatementThrowsNPE/org.jfree.data.time.MovingAverage.createMovingAverage(org.jfree.data.xy.XYDataset,java.lang.String,double,double)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setRangeType(org.jfree.data.RangeType)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.formObjectArray([[D)' 'EqualsSymmetric/org.jfree.chart.plot.CategoryPlot.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.category.CategoryStepRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setAxisLineVisible(boolean)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.LegendItem.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.labels.CustomXYToolTipGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getEndX(int,int)' 'StatementThrowsNPE/java.awt.Window.applyResourceBundle(java.util.ResourceBundle)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.getContourDataRange()' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getY(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getStartY(int,int)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.<init>([Lorg.jfree.data.general.SeriesDataset;)' 'EqualsSymmetric/org.jfree.chart.renderer.category.WaterfallBarRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRange(org.jfree.data.Range)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setLabel(java.lang.String)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.zoomRange(double,double)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setFirst(org.jfree.data.time.RegularTimePeriod)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickMarkPaint(java.awt.Paint)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setLabelAngle(double)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getX(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setLast(org.jfree.data.time.RegularTimePeriod)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRightArrow(java.awt.Shape)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.clone()' 'StatementThrowsNPE/org.jfree.chart.plot.ColorPalette.getColorLog(double)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getItemCount(int)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMajorTickTimePeriodClass(java.lang.Class)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getEndY(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getStartX(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.DateAxis.setMaximumDate(java.util.Date)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickMarkOutsideLength(float)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.DateAxis.setTickMarkPosition(org.jfree.chart.axis.DateTickMarkPosition)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.setDataset(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setPositiveArrowVisible(boolean)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getStartY(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.DateAxis.setMinimumDate(java.util.Date)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickMarkPaint(java.awt.Paint)' 'StatementThrowsNPE/org.jfree.data.contour.NonGridContourDataset.<init>(java.lang.String,[Ljava.lang.Object;,[Ljava.lang.Object;,[Ljava.lang.Object;)' 'StatementThrowsNPE/org.jfree.chart.plot.Plot.clone()' 'EqualsSymmetric/org.jfree.chart.plot.XYPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.CategoryAxis3D.getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getHighValue(int,int)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getCloseValue(int,int)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getVolume(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.ColorPalette.getColorLinear(double)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.setDomainAxis(org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.chart.axis.DateAxis.setTimeline(org.jfree.chart.axis.Timeline)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel(org.jfree.data.xy.XYDataset,int)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.setDomainAxis(org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setLowerBound(double)' 'EqualsSymmetric/org.jfree.chart.plot.Plot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getEndY(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.DateAxis.setRange(org.jfree.data.Range)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setLowerMargin(double)' 'StatementThrowsNPE/org.jfree.data.time.MovingAverage.createMovingAverage(org.jfree.data.xy.XYDataset,int,java.lang.String,double,double)' 'EqualsHashcode/org.jfree.data.category.DefaultCategoryDataset.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.data.category.DefaultCategoryDataset.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.entity.XYAnnotationEntity.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.resizeRange(double)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setLabelInsets(org.jfree.ui.RectangleInsets)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickLabelPaint(java.awt.Paint)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setLabelFont(java.awt.Font)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickMarksVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setTickUnit(org.jfree.chart.axis.NumberTickUnit)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.XYDifferenceRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.SymbolAxis.setGridBandPaint(java.awt.Paint)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickMarksVisible(boolean)' 'EqualsSymmetric/org.jfree.data.DefaultKeyedValues.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.CyclicNumberAxis.setFixedAutoRange(double)' 'EqualsHashcode/org.jfree.data.KeyedObjects2D.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getClose(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.datasetChanged(org.jfree.data.general.DatasetChangeEvent)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRange(double,double)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setAutoRangeTimePeriodClass(java.lang.Class)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickLabelInsets(org.jfree.ui.RectangleInsets)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setFixedAutoRange(double)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setAxisLinePaint(java.awt.Paint)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setDownArrow(java.awt.Shape)' 'EqualsHashcode/org.jfree.data.xy.OHLCDataItem.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setVerticalTickLabels(boolean)' 'StatementThrowsNPE/org.xml.sax.helpers.DefaultHandler.endElement(java.lang.String,java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYZToolTipGenerator.generateLabelString(org.jfree.data.xy.XYDataset,int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRangeAboutValue(double,double)' 'StatementThrowsNPE/org.jfree.chart.axis.DateAxis.setTickUnit(org.jfree.chart.axis.DateTickUnit)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.getRange()' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRangeWithMargins(double,double)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickMarkStroke(java.awt.Stroke)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickMarkOutsideLength(float)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.setDataset(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/java.util.Collections$UnmodifiableList.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setAutoRange(boolean)' 'EqualsHashcode/org.jfree.chart.entity.XYItemEntity.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.entity.CategoryItemEntity.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setLeftArrow(java.awt.Shape)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setInverted(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setTimeZone(java.util.TimeZone)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.getDataRange(org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickMarkStroke(java.awt.Stroke)' 'EqualsSymmetric/org.jfree.chart.labels.StandardXYToolTipGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickTimePeriodClass(java.lang.Class)' 'EqualsSymmetric/org.jfree.chart.axis.NumberAxis.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.DateAxis.zoomRange(double,double)' 'StatementThrowsNPE/org.jfree.chart.axis.DateAxis.setTickUnit(org.jfree.chart.axis.DateTickUnit,boolean,boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.configure()' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize(double)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.XYAreaRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.LogarithmicAxis.setRange(org.jfree.data.Range)' 'EqualsHashcode/org.jfree.data.statistics.BoxAndWhiskerItem.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.setAxis(org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.add([Lorg.jfree.data.general.SeriesDataset;)' 'StatementThrowsNPE/org.jfree.chart.axis.DateAxis.setDateFormatOverride(java.text.DateFormat)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getCloseValue(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.getDataRange(org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getHigh(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setAutoRangeStickyZero(boolean)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.axisChanged(org.jfree.chart.event.AxisChangeEvent)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRangeWithMargins(org.jfree.data.Range)' 'EqualsSymmetric/org.jfree.chart.labels.AbstractPieItemLabelGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getOpen(int,int)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getLowValue(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.setDomainAxis(int,org.jfree.chart.axis.ValueAxis)' 'EqualsHashcode/org.jfree.data.time.TimePeriodValues.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.general.DefaultPieDataset.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.data.general.DefaultPieDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRangeWithMargins(org.jfree.data.Range,boolean,boolean)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.setSeriesKeys([Ljava.lang.Comparable;)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setLabelPaint(java.awt.Paint)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getOpenValue(int,int)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getHigh(int,int)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getLow(int,int)' 'EqualsSymmetric/org.jfree.chart.annotations.XYTextAnnotation.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.setDataset(int,org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.chart.plot.ThermometerPlot.setDataset(org.jfree.data.general.ValueDataset)' 'StatementThrowsNPE/org.jfree.data.xml.PieDatasetHandler.endElement(java.lang.String,java.lang.String,java.lang.String)' 'EqualsHashcode/org.jfree.chart.title.TextTitle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.getLegendItems()' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.setDomainAxis(int,org.jfree.chart.axis.ValueAxis,boolean)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel(org.jfree.data.category.CategoryDataset,int)' 'StatementThrowsNPE/org.jfree.chart.labels.HighLowItemLabelGenerator.generateToolTip(org.jfree.data.xy.XYDataset,int,int)' 'StatementThrowsNPE/org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItems()' 'EqualsHashcode/org.jfree.data.xy.XYSeries.equals(java.lang.Object)' };
fcjf.f = [ 0 0 0 4 3 24 15 19 11 14 17 16 14 18 19 27 24 28 23 21 17 29 31 25 32 29 16 30 21 22 31 24 26 24 24 28 37 35 34 34 30 37 35 40 52 39 37 35 34 75 ; 0 0 0 6 14 16 16 15 10 8 9 10 7 6 12 14 13 21 11 8 16 23 17 27 18 34 28 33 35 36 38 50 36 47 46 55 50 64 97 66 72 75 93 94 98 89 95 102 122 265 ; 0 0 0 4 11 17 18 18 15 24 20 27 27 28 28 36 45 39 52 49 69 51 58 85 86 90 78 107 109 110 109 126 130 140 152 168 194 197 201 214 258 253 234 251 294 287 333 299 376 792 ; 0 0 0 2 0 3 3 1 2 0 2 6 4 5 5 4 4 5 7 5 10 11 16 8 12 7 16 17 18 17 19 17 20 25 35 30 31 27 33 36 41 48 44 41 49 35 48 38 43 110 ; 0 0 0 4 12 8 9 16 11 9 10 12 10 10 9 8 15 6 11 14 7 13 10 8 17 12 12 11 9 9 12 8 9 8 13 13 9 6 13 16 14 17 24 9 15 19 15 15 18 32 ; 0 0 95 73 27 17 18 8 16 15 13 20 13 15 16 11 15 16 14 14 14 14 13 19 21 16 20 17 13 14 13 13 14 19 10 14 13 10 9 14 14 21 13 19 19 18 24 24 15 25 ; 0 0 0 45 42 61 53 48 33 34 49 24 26 37 24 25 20 27 21 32 28 34 23 30 33 33 38 40 33 33 35 28 25 42 35 27 28 33 32 30 48 30 36 46 34 42 42 55 56 92 ; 0 0 0 49 0 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 2 1 2 3 9 11 13 6 9 14 12 15 10 13 9 16 15 12 13 10 10 20 7 9 18 12 11 15 18 14 16 19 16 14 18 16 16 9 15 17 18 17 21 19 26 20 ; 0 0 0 9 13 17 18 7 8 17 21 13 17 17 19 15 18 23 19 17 28 31 27 19 30 37 43 27 36 53 69 48 51 67 59 65 74 74 63 89 93 105 100 147 138 153 133 190 159 388 ; 0 0 0 0 0 0 0 3 3 0 1 2 2 3 4 7 2 1 5 6 9 6 6 11 16 13 12 24 13 20 17 18 19 22 36 22 37 40 43 41 31 43 53 55 41 65 72 66 71 166 ; 0 0 0 10 22 20 16 26 25 32 26 25 23 32 26 39 21 44 53 51 62 65 79 75 82 78 100 121 126 127 147 165 186 162 198 178 185 240 260 268 255 282 314 336 321 376 377 380 410 827 ; 0 0 0 0 0 5 0 11 3 5 4 6 4 7 1 2 2 2 2 6 3 1 0 2 1 1 1 1 2 3 2 0 2 0 0 0 0 2 0 0 1 2 3 3 0 0 1 1 0 3 ; 0 0 0 55 60 21 21 10 6 4 3 7 8 9 3 12 14 10 11 16 14 12 12 15 10 10 11 10 17 13 6 13 12 23 24 27 20 30 20 12 26 30 22 20 25 25 28 33 36 77 ; 0 0 0 69 75 43 21 11 5 3 10 5 9 6 4 5 4 4 3 6 2 5 7 4 5 7 9 10 4 6 8 6 7 6 5 8 9 7 4 5 8 7 11 12 13 15 18 11 20 26 ; 0 0 0 0 0 1 2 1 2 2 3 1 3 5 6 10 8 8 8 13 15 15 15 12 20 17 18 26 21 26 33 22 27 27 29 23 30 35 31 31 30 47 38 33 37 40 30 46 33 119 ; 0 0 0 15 12 3 1 5 6 7 11 12 7 10 13 9 17 25 24 18 30 34 36 47 49 58 55 52 72 84 64 73 102 93 119 129 137 133 119 185 180 191 206 187 234 260 290 293 263 662 ; 0 0 0 0 4 1 5 5 2 5 9 4 3 5 5 6 4 7 4 5 13 10 8 12 12 16 8 9 11 13 2 13 13 14 7 11 14 16 14 13 28 19 13 15 19 29 19 30 28 48 ; 0 0 0 0 0 2 1 4 5 2 5 4 3 4 7 7 6 11 5 9 10 12 17 9 11 16 9 20 17 15 16 15 19 11 24 14 16 9 27 21 20 29 27 37 33 26 32 25 20 61 ; 0 0 0 1 7 16 19 30 32 30 39 25 27 27 33 30 26 32 25 25 31 34 25 29 34 38 32 35 41 45 52 47 56 46 56 51 54 60 51 58 62 60 79 74 73 71 90 84 95 183 ; 0 0 0 3 9 11 6 15 19 13 17 28 30 23 21 31 23 31 31 40 34 51 43 56 50 76 48 76 91 84 81 97 113 100 117 144 130 151 143 161 176 184 200 213 203 211 228 243 263 596 ; 0 0 0 7 23 27 25 30 20 28 25 26 14 27 37 29 44 61 53 55 60 70 74 103 122 104 123 152 166 134 144 189 176 205 237 227 240 277 297 279 313 330 386 418 378 407 403 462 466 1065 ; 0 0 0 0 2 11 8 15 6 18 17 11 18 10 15 29 16 22 27 22 27 27 24 29 42 40 32 38 41 39 35 43 35 42 30 47 55 49 46 37 55 49 43 46 46 37 45 47 51 106 ; 0 0 0 0 0 4 3 6 1 5 2 6 3 7 6 2 3 4 2 3 1 3 3 2 0 2 2 4 0 3 1 0 0 1 1 0 1 0 0 1 2 2 1 1 2 1 0 0 3 0 ; 0 0 0 53 29 16 11 11 23 9 14 8 19 16 19 10 14 12 17 21 25 19 30 25 30 32 32 40 37 45 37 42 56 62 69 65 71 56 94 82 78 87 117 98 103 118 115 125 109 269 ; 0 0 0 0 0 2 1 4 1 8 6 8 5 6 11 12 15 13 15 15 13 23 25 21 32 23 24 26 36 38 46 42 55 51 43 53 67 60 68 78 72 90 75 91 106 101 116 127 114 261 ; 0 0 0 47 97 103 98 90 87 83 71 88 72 92 85 88 118 106 97 111 111 116 121 130 145 136 144 158 154 146 159 147 155 160 182 205 249 207 265 220 255 252 286 309 297 319 322 348 348 805 ; 0 0 0 26 20 26 24 35 20 31 25 19 14 21 26 26 20 12 28 17 30 30 29 28 17 35 25 23 17 28 29 31 18 22 27 23 29 34 22 35 41 24 35 35 31 27 38 36 33 87 ; 0 0 143 143 124 101 66 48 48 35 19 23 21 16 26 21 21 23 20 14 19 25 19 15 18 18 24 24 20 26 23 24 15 23 30 18 18 25 23 24 30 23 24 25 31 27 25 28 13 52 ; 0 0 0 37 21 9 6 7 4 15 3 14 9 7 17 7 9 11 9 5 15 11 15 9 17 16 11 13 16 17 17 22 15 26 33 29 22 23 25 26 30 28 41 41 45 45 38 56 47 124 ; 0 0 0 0 0 1 1 4 3 4 2 1 2 5 8 0 2 4 4 4 6 7 9 2 6 10 7 6 9 5 8 3 5 7 10 13 11 8 18 8 9 12 17 12 13 11 10 15 24 30 ; 0 0 0 7 8 9 16 13 16 8 18 14 15 18 21 9 16 12 13 18 13 13 18 16 12 16 9 13 15 17 12 13 17 15 10 28 14 9 17 15 22 15 15 11 11 21 17 21 24 39 ; 0 0 0 59 47 36 18 29 29 28 18 14 29 32 28 29 41 37 27 37 42 41 47 60 59 88 88 60 85 105 119 127 105 110 149 156 181 168 188 217 190 237 265 267 304 253 312 327 317 784 ; 0 0 0 0 0 2 2 8 7 2 9 7 3 2 14 10 6 8 4 6 6 10 7 8 8 3 3 5 8 10 12 8 8 9 9 4 12 10 7 7 9 11 14 10 11 12 16 14 12 36 ; 0 0 0 0 3 4 2 9 10 9 6 6 3 7 9 7 7 5 9 4 5 10 4 7 6 8 10 9 12 5 11 11 10 7 5 5 8 7 13 7 10 8 10 9 15 10 14 11 17 30 ; 0 0 0 28 27 30 28 27 26 23 23 14 23 26 31 21 16 21 17 18 22 19 20 19 18 21 26 27 26 20 28 28 19 33 30 19 25 33 31 41 38 33 23 35 35 47 34 42 30 91 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 1 2 0 1 1 0 1 4 0 2 0 0 1 3 4 2 2 3 2 4 3 1 0 1 0 0 2 3 3 1 4 ; 0 0 0 0 3 1 0 5 5 3 4 7 2 7 6 15 17 24 17 35 35 35 40 42 56 72 59 59 66 92 109 102 94 131 140 159 149 164 191 194 186 226 222 240 281 283 326 298 319 730 ; 0 0 0 0 4 6 14 7 12 14 11 15 10 10 16 16 19 18 21 17 31 26 27 24 22 37 27 42 32 49 36 44 35 46 34 40 39 49 38 46 45 51 41 53 38 42 41 48 50 131 ; 0 0 0 0 2 1 4 5 1 8 6 8 16 16 21 17 20 17 16 27 30 38 35 46 55 61 59 67 79 104 86 98 132 112 132 153 149 163 164 172 184 218 228 240 249 264 268 308 317 688 ; 0 0 0 0 1 0 6 6 6 11 15 6 5 11 7 10 8 3 14 14 12 14 15 17 21 16 15 26 29 21 30 28 27 33 32 34 37 37 47 54 50 53 52 73 55 80 64 69 90 176 ; 0 0 0 0 2 1 5 2 3 3 4 1 3 3 8 3 3 2 1 4 3 1 2 2 3 4 1 3 2 4 8 4 7 6 3 11 6 7 5 5 5 7 3 8 7 8 9 7 6 19 ; 0 0 0 0 0 0 0 1 3 2 3 5 2 2 9 1 11 9 5 10 11 7 12 18 15 21 18 17 32 24 26 36 26 29 30 32 29 34 34 37 41 30 31 33 29 31 30 32 36 115 ; 0 0 0 0 0 0 5 5 7 13 8 4 3 5 8 17 9 11 14 16 9 15 11 28 17 24 21 19 30 18 20 32 32 38 26 44 45 40 39 56 51 45 61 50 54 57 67 76 61 152 ; 0 0 0 0 0 0 0 2 3 8 6 9 9 8 6 7 10 8 7 10 8 10 12 3 7 12 5 12 10 12 9 13 24 20 19 23 22 11 22 15 19 25 15 21 23 16 30 23 31 53 ; 0 0 126 153 131 93 72 38 52 34 26 21 28 25 19 32 25 22 26 17 16 27 25 18 19 19 26 26 20 25 25 17 29 22 33 16 21 19 16 29 27 22 20 37 22 28 14 22 22 52 ; 0 0 0 2 3 5 6 7 6 8 10 8 8 8 7 8 4 8 7 10 8 9 11 9 9 9 7 6 15 15 14 5 16 11 20 12 17 12 21 9 8 19 12 17 19 13 19 16 19 37 ; 0 0 0 0 2 8 11 8 15 9 14 17 11 9 13 17 12 21 22 27 39 22 17 22 35 38 40 42 33 34 37 36 29 47 45 52 48 50 53 49 44 61 46 66 48 44 34 49 48 148 ; 0 0 0 0 0 0 3 3 6 7 4 4 8 15 9 12 13 13 14 11 21 18 23 16 24 29 36 41 45 46 45 52 40 50 53 57 43 50 67 68 78 72 92 73 80 89 92 76 103 190 ; 0 0 0 0 3 3 5 4 6 8 22 7 9 8 9 21 19 17 24 26 30 14 26 27 22 33 33 37 35 35 38 46 38 52 53 49 55 50 61 63 37 46 67 53 63 54 67 72 67 160 ; 0 0 128 137 152 147 108 61 52 21 23 19 16 9 11 5 4 2 5 2 1 3 2 1 1 0 2 3 2 1 0 1 2 0 0 3 2 0 1 0 0 1 0 0 1 1 0 0 0 1 ; 0 0 126 157 168 139 115 69 45 31 14 19 12 6 9 9 6 2 0 1 1 2 2 2 1 4 3 3 0 2 0 0 1 0 3 0 1 1 2 4 0 0 0 1 0 2 1 1 1 1 ; 0 0 0 2 1 0 1 2 0 1 3 2 4 3 0 2 2 2 2 1 2 2 0 4 2 2 1 2 2 4 2 1 0 1 2 3 1 0 1 3 5 2 2 3 1 6 2 3 2 2 ; 0 0 0 68 72 50 14 6 5 3 5 3 4 5 2 4 4 12 4 6 8 6 2 14 6 5 7 6 13 8 5 9 10 9 6 12 7 11 8 13 6 17 17 12 7 9 10 11 18 15 ; 0 0 0 0 3 2 2 7 5 7 9 4 5 7 8 4 6 6 7 6 7 14 6 7 8 8 10 6 8 9 10 11 8 7 11 10 7 14 7 10 10 12 16 10 9 6 19 14 14 18 ; 0 0 0 5 8 9 9 11 10 13 9 10 9 13 17 14 22 26 27 28 32 32 42 24 33 52 46 43 43 56 60 57 54 71 89 74 73 104 105 80 125 144 114 144 154 146 150 156 173 387 ; 0 0 9 7 8 8 3 3 8 2 5 1 4 1 3 0 3 3 3 4 1 1 2 1 6 2 0 3 7 2 1 2 4 4 0 3 2 2 4 2 3 3 2 3 5 5 5 5 2 8 ; 0 0 0 0 0 0 2 1 0 2 2 1 1 6 6 0 1 1 2 2 4 3 4 2 2 3 3 2 3 6 4 4 3 2 6 6 5 5 6 2 6 9 5 10 12 10 11 10 9 18 ; 0 0 0 11 24 29 32 30 34 45 40 41 32 34 36 49 31 38 33 39 44 39 47 61 45 58 87 58 56 67 60 77 71 76 69 84 89 116 88 99 109 95 102 139 131 135 143 123 146 300 ; 0 0 0 4 14 17 19 16 14 10 11 6 8 5 4 6 10 9 12 14 16 8 19 15 8 9 18 16 19 10 18 15 19 21 25 33 24 27 21 27 27 34 28 41 36 35 34 53 62 110 ; 0 0 0 17 22 31 14 11 18 15 7 14 10 18 8 21 12 18 19 17 12 18 17 27 25 17 15 20 20 18 37 31 29 35 31 45 33 50 42 55 49 52 53 38 47 53 56 59 68 133 ; 0 0 0 1 1 7 9 7 7 5 7 10 7 1 9 10 10 15 25 22 29 25 33 48 49 49 58 71 60 68 75 69 64 96 108 117 120 121 132 155 169 123 198 174 190 204 248 223 247 526 ; 0 0 0 62 97 131 139 143 114 98 71 96 86 69 82 67 57 64 70 64 54 55 62 58 57 81 48 67 75 58 81 86 90 72 77 91 91 93 83 107 98 123 108 112 124 144 142 136 145 308 ; 0 0 0 0 0 2 6 6 9 23 28 19 20 20 20 36 39 30 39 38 53 57 42 66 71 62 71 80 77 99 82 90 107 139 124 129 124 126 163 188 183 185 209 216 223 238 242 248 272 555 ; 0 0 0 1 1 0 2 1 0 1 1 2 2 6 4 4 6 10 8 12 3 14 9 13 14 17 17 25 36 46 55 51 63 69 70 84 99 104 103 123 102 148 132 137 155 143 157 181 177 417 ; 0 0 0 45 72 93 118 95 70 62 54 39 25 31 26 15 16 25 16 16 19 21 20 22 15 26 16 15 15 11 20 21 25 18 17 16 16 23 11 39 33 32 18 29 35 26 31 28 41 79 ; 0 0 0 0 0 0 0 1 2 1 3 1 2 1 2 1 2 0 2 0 2 7 2 2 2 5 5 5 3 6 5 3 2 5 6 3 5 10 6 7 4 2 3 8 7 13 7 10 9 12 ; 0 0 0 48 36 26 8 15 10 6 10 9 11 11 9 8 8 7 11 9 8 10 14 15 14 8 10 9 12 11 13 11 11 21 14 16 20 17 20 27 25 21 22 21 22 25 27 29 27 53 ; 0 0 0 0 15 29 27 38 13 7 3 3 2 3 1 6 0 3 4 5 5 10 10 7 3 13 13 3 8 7 4 7 5 8 3 7 4 13 9 4 5 10 7 9 7 14 8 10 11 16 ; 0 0 0 0 0 0 0 0 0 1 2 1 2 0 1 1 0 0 0 0 2 2 1 2 0 2 5 5 2 3 5 1 3 2 2 4 2 8 3 2 7 7 1 8 2 4 10 3 7 14 ; 0 0 0 57 66 43 27 5 6 3 5 3 3 3 7 5 6 5 5 6 6 9 7 11 9 1 7 7 6 8 6 7 11 11 12 9 5 13 24 21 19 13 19 23 27 28 21 29 30 59 ; 0 0 0 21 57 34 52 45 39 28 33 41 23 15 16 19 20 19 14 19 15 15 16 16 16 14 17 23 16 17 17 15 18 20 18 13 12 18 25 19 20 22 18 14 16 16 19 14 10 40 ; 0 0 0 0 0 0 0 0 2 0 1 0 0 0 0 2 4 4 2 2 2 1 5 6 5 3 5 6 5 5 7 4 6 8 9 9 11 10 11 10 8 10 10 13 17 10 14 10 12 25 ; 0 0 0 0 0 1 1 0 0 2 3 3 6 1 0 6 4 2 6 2 5 3 4 3 3 1 3 6 4 6 6 3 3 6 9 7 9 3 8 7 2 9 7 4 5 2 4 15 4 20 ; 0 0 0 70 70 47 21 11 16 7 9 5 9 4 5 3 4 5 3 2 2 5 8 4 4 2 6 7 5 6 6 5 4 6 10 6 10 6 8 8 14 8 12 18 14 12 14 12 25 34 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 2 0 1 0 0 1 0 0 1 0 3 ; 0 0 119 161 170 154 113 77 53 40 25 27 13 8 9 10 4 3 2 3 1 1 1 0 1 1 3 1 1 1 2 1 2 0 0 0 2 0 1 1 1 1 0 1 1 1 1 0 2 3 ; 0 0 0 0 3 3 7 1 8 10 7 8 7 5 12 7 15 11 10 9 13 9 14 12 17 13 17 23 10 15 26 11 20 21 22 18 21 23 31 23 20 20 23 30 24 34 29 33 23 54 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 1 0 0 0 0 0 1 2 3 1 0 1 0 3 0 1 1 1 0 2 0 0 3 ; 0 0 0 0 0 1 2 3 1 1 5 5 5 0 3 4 3 2 7 1 4 2 7 3 4 5 5 5 6 8 4 7 5 5 6 6 4 3 4 8 7 7 6 9 8 14 12 8 9 15 ; 0 0 0 29 50 82 80 93 94 87 57 61 54 54 45 59 44 41 42 48 33 32 44 32 32 50 25 44 42 31 55 54 53 51 46 48 48 46 48 70 60 84 73 78 63 84 81 83 72 192 ; 0 0 0 3 1 2 4 8 8 6 6 6 12 8 6 8 8 10 8 10 11 12 7 12 5 13 14 9 18 22 14 10 15 14 14 12 12 20 17 21 14 19 13 14 21 22 22 24 27 55 ; 0 0 0 0 0 12 2 6 1 1 0 1 2 1 1 1 0 1 0 0 2 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 1 2 9 5 6 7 6 9 5 2 5 7 14 6 9 10 8 19 18 15 13 15 10 17 19 26 19 24 20 29 25 31 38 35 34 24 31 43 39 48 43 48 48 52 131 ; 0 0 0 0 2 4 3 10 10 4 7 5 4 6 7 7 7 4 14 9 10 11 12 14 11 12 16 18 13 26 15 19 18 22 18 25 14 19 16 26 27 32 29 23 23 33 24 33 30 60 ; 0 0 0 26 14 12 4 6 7 7 10 3 7 14 9 9 7 11 16 15 19 18 18 19 31 26 24 32 28 53 41 49 53 48 60 52 68 62 75 78 70 115 91 91 98 109 91 130 111 269 ; 0 0 0 2 1 1 5 1 2 4 4 9 10 11 11 11 13 16 24 20 27 24 29 27 55 42 48 43 61 60 72 76 90 100 94 111 97 126 140 122 147 143 164 186 199 213 189 231 230 498 ; 0 0 0 3 9 10 7 16 13 26 18 23 27 25 19 33 37 57 33 37 48 50 64 58 67 71 94 85 91 96 110 90 136 143 153 138 142 185 178 172 226 210 232 221 270 245 229 288 280 660 ; 0 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 2 1 0 3 1 1 0 2 3 6 4 2 3 2 5 3 5 7 6 7 3 3 3 15 11 3 8 6 9 8 6 19 27 ; 0 0 0 0 0 0 2 0 1 4 2 1 2 5 7 2 6 9 3 3 4 6 8 7 9 11 10 8 18 26 23 15 17 23 15 21 27 39 28 34 45 52 51 38 71 59 57 60 75 140 ; 0 0 0 0 1 3 4 6 8 9 4 8 12 3 6 6 6 7 10 3 2 3 6 8 6 5 5 5 3 4 7 3 2 5 4 6 0 3 2 0 2 1 3 7 4 3 3 4 1 6 ; 0 0 0 0 2 4 3 6 9 6 9 10 8 10 6 12 10 6 19 8 5 6 9 8 5 14 10 5 9 11 8 22 11 10 9 19 15 15 11 17 16 16 21 21 22 26 22 27 26 63 ; 0 0 11 13 8 12 7 6 10 3 5 7 4 4 5 3 1 2 5 1 1 2 5 1 1 3 2 4 6 1 2 5 1 4 1 3 5 1 6 3 3 2 3 9 3 0 0 0 7 5 ; 0 0 0 0 0 0 0 1 1 0 1 1 0 1 1 2 6 7 2 1 5 8 4 9 5 1 7 5 4 5 4 6 12 7 8 9 7 9 9 10 12 13 10 12 9 13 12 18 15 37 ; 0 0 0 16 30 26 37 17 38 23 18 20 20 18 33 13 25 15 21 27 23 26 24 14 27 24 29 26 20 29 22 33 17 24 23 31 34 39 26 33 40 26 24 25 37 34 35 33 34 55 ; 0 0 0 0 1 8 9 8 10 11 4 9 10 8 19 15 14 19 22 18 12 5 8 9 8 12 15 9 9 9 14 9 18 12 18 22 18 19 21 30 22 27 13 9 9 14 16 26 21 25 ; 0 0 0 0 0 1 1 1 1 1 1 5 4 2 5 2 2 10 8 8 3 9 6 12 12 14 13 13 13 15 16 25 11 24 23 22 27 18 27 29 35 34 36 45 32 37 43 50 52 111 ; 0 0 0 0 0 0 0 1 1 0 2 2 1 2 2 2 1 2 1 1 2 2 3 1 3 1 4 3 3 2 7 2 1 1 7 4 10 3 5 5 3 7 6 11 6 9 4 5 5 23 ; 0 0 9 10 7 12 6 9 9 9 8 6 5 4 5 3 5 4 7 5 8 4 6 5 8 5 10 4 8 5 6 13 6 11 6 7 5 3 6 11 9 12 4 5 9 5 9 11 4 13 ; 0 0 0 13 10 17 25 17 23 19 25 21 25 33 43 45 48 49 43 59 56 67 87 80 69 70 70 76 85 95 114 134 127 124 146 138 167 161 188 178 167 210 224 235 231 234 273 283 296 708 ; 0 0 0 8 14 17 12 14 10 13 13 5 14 9 16 21 7 17 10 12 11 15 9 19 20 25 13 14 20 18 20 25 18 17 15 16 21 24 39 34 19 22 30 29 27 32 22 36 35 55 ; 0 0 0 0 0 0 1 1 2 2 2 1 3 6 3 4 9 12 11 15 14 14 9 15 17 25 18 12 17 27 26 26 24 34 34 34 32 41 27 32 49 42 44 41 40 54 62 53 50 131 ; 0 0 0 0 0 0 4 1 6 2 6 7 5 7 9 6 11 11 9 9 10 14 15 23 14 18 15 17 17 12 16 18 28 23 21 32 38 21 24 33 29 29 35 36 34 37 33 26 32 73 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 2 1 0 1 4 3 4 2 12 1 4 3 0 3 3 10 9 5 8 16 3 13 12 12 15 6 26 9 18 16 11 20 23 27 19 31 55 ; 0 0 0 0 0 0 1 0 1 1 1 1 0 1 1 4 3 4 4 1 2 7 6 7 2 4 4 9 15 5 6 8 11 16 15 19 16 16 22 20 23 19 33 17 23 36 38 40 37 85 ; 0 0 0 7 16 2 9 7 5 6 3 1 3 1 1 1 6 12 8 10 7 13 10 17 7 6 12 14 20 14 10 13 15 19 22 19 19 19 21 30 20 32 32 38 29 46 42 50 47 100 ; 0 0 0 0 0 1 0 0 0 3 6 7 8 4 7 2 4 5 14 9 6 15 11 16 25 18 28 27 27 39 40 34 40 32 50 45 41 47 53 45 60 61 75 73 80 66 110 92 96 184 ; 0 0 0 0 0 0 0 1 2 2 5 2 4 8 10 7 8 7 12 10 11 17 18 15 19 20 17 19 27 24 15 26 20 24 29 28 41 36 41 31 24 32 29 32 41 38 39 44 37 106 ; 0 0 0 0 0 0 0 2 4 2 3 8 2 11 8 1 8 7 11 11 10 7 13 11 13 16 13 18 23 20 23 29 29 41 31 31 36 46 43 35 52 71 67 61 85 70 78 87 89 192 ; 0 0 13 10 7 10 9 6 1 7 1 2 4 3 1 0 1 3 3 0 2 3 0 3 3 1 3 2 2 5 2 3 2 2 3 5 1 1 1 1 3 0 2 3 4 3 6 1 3 9 ; 0 0 0 0 0 0 0 0 0 0 0 2 1 1 2 3 2 5 3 1 0 2 4 4 1 1 4 2 1 6 1 1 4 2 4 4 7 4 10 9 6 4 4 6 5 9 11 2 5 15 ; 0 0 0 0 1 1 2 3 3 3 2 2 1 1 7 4 11 3 7 8 8 14 14 7 12 13 12 10 21 20 11 11 13 10 17 17 19 25 29 25 15 17 20 26 26 27 15 31 34 74 ; 0 0 127 165 122 84 55 40 34 46 33 21 16 10 28 19 23 16 16 16 13 20 18 19 14 25 22 22 21 27 14 20 14 22 23 22 27 19 23 24 22 26 24 30 34 27 15 22 26 61 ; 0 0 0 16 16 14 7 14 10 13 7 12 7 7 3 7 14 7 5 16 14 12 13 18 7 9 14 13 17 13 21 25 15 22 18 20 18 35 27 32 45 29 30 30 39 37 34 31 44 87 ; 0 0 0 1 2 2 1 2 2 1 3 5 1 1 2 6 3 5 4 5 2 3 3 0 7 2 7 5 4 4 6 7 10 6 9 6 10 8 3 2 7 3 10 6 6 3 6 6 6 13 ; 0 0 42 40 26 35 19 25 24 13 8 15 15 6 3 10 5 13 10 5 5 7 9 7 9 12 9 11 8 7 10 15 13 4 8 6 7 3 7 4 7 7 9 12 3 4 4 4 4 19 ; 0 0 0 0 0 0 1 1 6 4 2 2 5 9 11 13 11 9 10 11 12 10 15 16 24 13 15 14 14 18 12 16 11 17 14 11 14 23 12 15 16 17 18 23 17 26 31 37 31 62 ; 0 0 0 28 43 59 58 34 39 35 35 28 25 22 19 25 17 17 17 17 24 21 22 15 13 16 18 13 13 14 17 25 14 16 13 17 20 12 16 19 15 19 13 32 16 23 25 12 18 37 ; 0 0 7 7 8 15 8 1 7 8 7 7 3 4 7 4 5 8 5 7 3 2 3 5 3 1 8 5 3 7 8 6 5 6 6 5 12 9 7 6 5 5 4 4 5 10 5 5 6 16 ; 0 0 35 62 74 62 63 59 41 33 29 22 23 30 11 23 23 19 24 23 17 25 15 20 19 31 23 17 18 14 18 28 22 15 26 29 19 30 23 19 26 19 25 18 23 20 22 28 31 51 ; 0 0 0 4 5 11 7 9 12 10 13 16 14 20 13 11 29 29 21 26 37 37 44 42 47 49 53 57 50 65 55 70 80 97 83 102 118 107 127 117 150 148 146 139 162 178 182 233 212 465 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 1 2 2 1 1 1 3 1 2 1 2 1 1 4 3 7 ; 0 0 0 2 1 4 2 6 5 6 4 8 6 3 9 11 5 4 2 6 11 8 10 6 7 6 6 6 5 6 9 8 12 5 9 11 6 7 3 8 12 9 8 13 9 8 17 12 10 31 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 1 0 0 0 0 0 2 3 2 1 0 0 0 ; 0 0 0 67 69 42 27 17 6 6 7 3 5 7 5 9 3 3 2 4 5 6 4 10 8 12 6 3 5 5 3 9 6 8 9 11 5 4 8 8 14 10 14 7 9 9 13 12 12 24 ; 0 0 0 0 0 0 0 1 1 3 5 1 3 6 1 4 5 9 2 5 4 10 8 6 10 6 11 15 5 12 14 8 10 8 13 7 7 17 16 18 17 13 20 25 19 23 28 27 25 58 ; 0 0 0 0 0 3 0 5 3 3 5 0 1 3 4 4 2 9 9 10 7 7 10 11 16 8 15 9 21 14 14 18 11 22 17 17 17 16 33 16 22 18 24 21 25 38 19 25 16 67 ; 0 0 0 2 4 4 5 4 9 5 10 13 5 8 4 10 12 5 9 14 8 12 9 14 11 11 9 13 12 9 13 9 14 10 22 18 14 7 8 17 13 10 18 20 24 10 23 19 17 28 ; 0 0 0 24 30 34 24 11 9 3 3 5 4 2 8 9 8 4 4 6 7 7 11 13 3 7 16 17 11 9 12 10 19 13 16 19 17 19 16 20 10 23 21 18 19 24 22 21 27 48 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 2 0 2 0 2 2 1 1 2 0 3 1 2 2 0 4 1 1 2 2 5 3 3 5 1 7 2 2 6 6 ; 0 0 0 37 105 114 119 103 79 70 59 50 51 35 47 36 45 26 37 40 24 30 37 32 32 32 38 38 50 23 42 42 40 30 37 43 48 56 58 60 59 67 57 61 62 67 73 77 82 165 ; 0 0 0 0 0 0 1 0 0 1 1 1 1 3 3 2 2 0 1 1 3 7 4 1 2 6 5 4 2 5 1 4 4 2 5 5 3 7 8 3 9 11 7 4 5 13 10 7 7 13 ; 0 0 0 0 1 3 3 2 5 2 7 7 5 5 5 5 4 5 12 7 12 11 6 9 15 9 9 10 14 11 8 13 12 12 15 17 15 15 26 13 15 23 25 18 18 18 26 29 25 47 ; 0 0 0 0 0 0 2 0 0 1 2 0 1 1 0 4 1 2 3 4 2 2 3 4 2 4 2 4 10 10 5 10 7 7 10 8 16 7 6 8 9 14 14 16 14 16 16 31 19 45 ; 0 0 0 0 2 0 1 10 16 9 8 9 12 7 13 14 9 15 13 11 7 14 18 16 16 14 7 14 11 15 15 15 15 14 15 10 18 18 19 16 10 12 27 13 18 13 16 13 22 35 ; 0 0 0 0 0 0 0 0 1 2 2 6 2 2 5 5 4 3 9 3 2 2 5 5 8 10 13 6 6 7 20 14 7 13 11 15 9 9 8 7 10 11 6 8 5 3 12 7 16 16 ; 0 0 0 0 0 0 0 2 0 0 2 5 2 9 8 8 12 10 7 9 13 16 11 15 26 11 14 20 17 27 27 28 32 39 46 38 39 56 70 55 75 60 72 79 83 67 85 83 96 231 ; 0 0 0 0 0 11 7 11 6 7 6 9 5 7 3 6 0 2 1 3 3 1 3 3 1 2 1 0 1 2 0 3 0 2 1 0 0 0 1 0 0 1 0 1 1 0 1 0 0 2 ; 0 0 0 68 34 19 5 4 7 5 4 6 11 2 3 6 6 4 8 13 8 7 7 10 2 12 8 6 6 12 10 18 12 11 13 17 15 25 13 26 20 23 16 25 21 21 30 42 26 73 ; 0 0 0 1 4 3 3 2 2 3 1 2 1 2 1 0 2 3 5 3 2 2 2 3 4 2 5 0 10 11 1 4 9 2 5 7 6 7 2 7 7 6 3 10 5 9 5 4 5 10 ; 0 0 0 1 5 6 12 11 11 12 9 6 8 10 15 13 20 11 10 13 15 18 19 11 16 29 20 20 32 27 26 37 29 43 31 42 50 46 48 63 56 43 78 69 69 80 79 86 95 196 ; 0 0 0 20 12 18 6 4 2 3 5 2 3 4 5 7 5 6 7 5 3 9 5 6 5 7 5 7 4 6 4 3 5 4 11 15 10 5 8 6 1 6 9 6 3 5 6 4 7 15 ; 0 0 0 0 0 0 1 0 0 1 0 3 1 0 1 2 1 1 0 1 3 3 2 1 0 6 3 4 3 4 3 5 3 5 14 7 5 3 8 6 5 4 7 7 5 9 8 8 11 17 ; 0 0 0 0 5 11 11 18 8 13 15 13 12 12 10 10 9 14 19 16 9 19 14 12 12 11 24 6 10 20 15 13 25 10 17 20 23 15 20 15 20 18 17 24 26 22 15 29 20 41 ; 0 0 0 0 0 0 0 0 0 1 1 0 0 2 2 2 2 5 1 4 2 2 7 5 4 7 4 3 2 12 11 5 7 6 10 8 9 12 17 9 14 11 17 22 18 18 27 25 33 61 ; 0 0 0 0 0 0 0 1 1 0 0 1 0 2 3 1 3 4 3 4 2 3 9 9 7 12 4 7 11 11 6 11 10 14 11 12 18 13 12 16 19 12 18 16 11 26 19 15 26 53 ; 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1 1 3 0 5 1 2 1 0 2 2 2 3 3 5 2 3 4 3 2 1 0 1 5 2 5 1 5 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 ; 0 0 0 64 59 44 21 22 22 21 15 12 15 13 19 17 31 24 24 31 32 31 36 52 43 42 45 41 57 71 54 76 67 64 74 107 106 123 122 156 117 158 144 177 186 196 194 198 217 414 ; 0 0 0 0 0 2 0 0 2 1 0 2 1 1 1 1 2 2 2 0 0 4 2 1 2 3 1 4 1 3 2 2 2 3 7 1 2 4 3 4 3 5 4 2 1 3 4 4 4 8 ; 0 0 0 1 3 6 9 9 9 7 13 8 11 9 10 14 13 15 20 10 11 10 18 13 16 14 17 21 19 19 20 19 18 20 17 25 25 14 22 27 36 25 29 36 34 23 21 22 31 61 ; 0 0 0 21 23 16 10 2 1 3 5 4 3 2 2 3 1 5 5 4 4 9 6 4 2 3 9 2 3 2 3 2 4 5 3 5 4 9 3 5 3 8 10 6 4 8 12 9 13 5 ; 0 0 0 0 0 0 2 0 1 0 3 2 5 4 2 3 6 7 8 6 6 8 10 9 3 8 6 4 8 8 13 18 16 16 20 13 14 16 19 14 28 32 34 27 30 32 41 30 37 91 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 2 0 1 1 0 0 0 1 3 1 0 1 0 0 1 0 3 0 1 0 0 1 2 1 0 0 0 0 0 1 1 1 4 ; 0 0 15 3 10 11 6 7 4 5 4 2 3 1 4 2 1 6 2 0 6 1 4 0 0 1 4 3 0 1 4 2 5 4 3 2 3 3 2 2 2 1 3 5 0 2 4 0 3 5 ; 0 0 0 0 1 0 4 3 3 2 4 4 0 6 4 6 1 2 4 5 7 4 1 8 9 4 7 8 3 6 9 12 12 6 6 6 3 8 9 10 8 15 14 24 13 23 21 27 17 37 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 1 0 1 0 0 0 0 1 1 0 1 1 0 0 1 0 1 1 0 0 0 0 0 2 ; 0 0 0 0 0 0 0 0 0 2 1 0 1 2 1 2 0 1 2 3 3 2 3 2 4 3 2 5 4 0 1 4 6 2 3 4 7 4 3 4 6 7 1 5 4 9 9 7 6 7 ; 0 0 0 0 0 0 0 1 0 4 2 0 2 2 1 2 2 0 3 3 2 3 4 7 5 2 0 3 1 5 6 5 2 6 8 6 7 10 3 7 4 6 5 4 10 6 9 6 7 5 ; 0 0 0 14 13 12 10 11 3 5 8 3 8 9 4 9 6 6 5 11 10 5 4 10 9 10 9 7 6 6 6 8 5 8 7 10 5 9 5 13 8 4 4 9 5 7 7 6 13 25 ; 0 0 0 67 86 36 15 4 5 8 2 3 3 2 4 3 7 2 6 6 7 9 5 1 5 5 6 10 6 11 7 3 8 7 3 11 12 17 10 13 15 19 15 10 10 15 17 13 21 34 ; 0 0 0 0 0 6 8 10 4 8 4 8 7 8 10 5 10 8 13 12 7 24 21 19 19 19 18 25 25 24 24 28 39 25 31 42 44 48 32 40 48 43 50 64 46 58 66 77 85 182 ; 0 0 0 64 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 6 1 5 2 1 5 2 1 2 0 1 2 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 1 1 1 1 1 1 3 4 4 4 8 7 13 11 9 13 11 19 13 10 22 21 23 21 32 30 27 35 40 33 43 51 54 59 63 75 67 93 86 83 104 90 229 ; 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 2 0 0 1 0 1 0 0 2 0 0 2 0 0 0 0 1 0 0 0 4 2 0 2 1 0 0 1 1 2 0 0 1 ; 0 0 0 0 0 0 0 1 3 1 1 2 0 2 0 0 0 1 2 1 0 1 1 0 2 0 1 2 3 1 2 3 1 1 3 1 1 1 3 3 2 2 4 4 7 1 3 1 4 5 ; 0 0 0 0 0 14 8 4 4 1 3 2 3 1 0 2 2 1 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 ; 0 0 11 10 8 8 4 4 2 2 1 1 3 0 2 2 1 2 2 1 1 1 2 2 1 1 1 0 3 3 0 1 3 1 3 2 1 2 4 4 3 2 1 3 3 2 3 1 3 2 ; 0 0 0 0 0 0 0 1 0 2 2 0 1 2 2 2 3 3 1 1 3 3 2 2 0 1 5 2 3 6 5 4 2 5 5 6 5 4 8 4 5 10 6 9 7 5 3 5 7 14 ; 0 0 0 0 0 0 1 1 2 1 0 4 3 2 1 3 4 2 3 2 5 6 5 7 7 10 7 9 7 11 8 12 12 6 19 7 19 23 13 20 23 28 22 22 32 30 36 26 35 85 ; 0 0 0 0 0 0 1 0 0 1 0 2 1 0 2 1 1 1 3 3 1 2 3 5 2 1 3 2 4 4 6 5 6 3 7 3 8 3 2 8 9 7 11 9 9 8 8 10 11 10 ; 0 0 0 6 2 12 17 12 13 20 28 23 20 13 19 17 20 21 20 29 25 40 39 35 40 60 50 56 57 35 55 53 58 55 59 78 63 67 77 83 103 106 85 92 118 107 122 125 142 303 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 1 1 1 1 0 1 2 1 0 1 1 4 4 5 4 5 1 0 3 3 5 10 6 8 10 11 11 22 23 16 11 32 21 20 30 39 32 26 26 27 40 71 ; 0 0 0 0 1 1 2 5 3 4 1 1 2 4 5 4 3 2 9 1 5 5 7 5 3 4 3 3 6 9 4 6 5 3 9 2 3 6 4 3 4 5 4 3 6 3 5 2 9 11 ; 0 0 0 0 1 5 5 8 5 6 4 3 3 4 5 4 5 1 8 6 5 3 7 0 0 6 2 5 4 5 7 3 7 7 10 7 9 9 4 7 13 9 12 15 10 16 11 24 21 34 ; 0 0 9 14 7 9 10 5 7 6 11 4 8 4 9 10 4 5 5 6 7 4 2 5 2 11 5 4 4 8 6 5 4 8 3 13 8 11 8 3 5 8 6 7 12 6 4 4 9 14 ; 0 0 0 17 22 15 9 13 6 10 7 10 12 13 12 12 10 10 15 11 13 15 12 14 20 20 16 13 24 14 19 20 35 29 27 17 24 33 24 41 28 36 57 43 39 48 55 40 65 137 ; 0 0 0 0 0 0 2 2 1 2 0 2 1 5 5 3 2 2 7 3 0 6 3 8 2 7 6 5 1 8 5 2 2 5 2 6 12 7 4 7 5 9 6 6 10 5 4 2 5 12 ; 0 0 0 0 0 0 1 0 0 1 1 2 1 0 0 1 0 3 7 0 2 3 1 3 5 3 2 6 5 4 2 7 3 7 4 5 3 3 6 8 2 4 5 6 4 5 7 10 2 22 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 1 0 2 0 0 1 0 1 0 0 0 0 0 0 2 1 0 1 4 0 0 2 0 0 1 2 1 2 0 2 ; 0 0 0 0 0 0 0 0 1 1 0 1 1 1 0 0 4 1 3 5 3 3 6 7 4 3 5 5 2 8 3 7 9 4 1 9 14 9 7 11 8 12 3 7 10 6 6 7 6 24 ; 0 0 0 0 1 2 1 1 4 5 5 1 4 4 5 8 6 9 10 5 6 12 6 15 7 8 12 10 4 10 6 8 5 7 8 11 8 12 10 16 11 10 8 9 9 8 13 7 12 24 ; 0 0 0 0 1 1 1 5 1 0 0 1 1 1 2 1 3 0 1 0 2 3 4 4 1 1 1 0 0 3 2 5 1 3 2 4 4 1 5 3 5 2 2 3 3 2 6 2 4 3 ; 0 0 0 0 0 1 0 4 1 2 3 2 3 3 5 5 2 1 5 2 3 5 2 3 6 8 5 4 5 8 3 8 5 6 8 6 9 8 6 3 3 9 11 6 8 11 10 12 7 20 ; 0 0 0 17 12 11 9 13 13 9 2 7 6 3 8 8 4 11 4 8 6 12 5 4 8 6 6 8 7 6 7 9 3 9 10 3 13 4 8 7 5 12 8 16 9 13 11 10 12 22 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 2 0 0 0 1 0 1 0 0 1 1 0 1 1 3 1 2 3 3 3 2 6 6 ; 0 0 0 0 0 0 0 0 3 1 0 4 2 1 2 2 3 0 1 0 1 3 1 3 2 4 2 3 2 1 6 4 1 5 6 2 8 5 5 5 9 8 2 5 8 8 6 3 4 11 ; 0 0 0 0 0 3 4 2 3 10 2 5 4 6 1 7 5 8 8 4 8 14 15 9 5 11 10 10 6 15 20 27 22 18 22 28 23 28 24 30 47 37 42 41 39 42 44 57 61 114 ; 0 0 0 0 0 2 8 7 7 5 4 5 2 4 5 4 1 3 0 0 0 3 1 1 3 3 1 1 1 0 1 1 0 0 3 2 3 1 0 0 0 2 0 0 0 2 1 0 1 0 ; 0 0 0 0 0 0 0 0 0 1 0 0 0 1 4 1 3 2 2 2 2 1 1 6 2 2 4 2 3 3 2 5 6 6 6 5 5 10 8 7 11 12 6 15 10 7 8 9 13 28 ; 0 0 0 0 1 0 0 5 3 5 3 5 3 3 3 9 5 5 6 8 8 11 10 8 8 14 12 10 8 9 8 10 13 16 12 5 17 10 13 17 12 10 13 16 17 13 13 21 20 36 ; 0 0 0 0 0 2 0 2 6 8 9 10 12 19 22 18 24 30 16 26 30 36 21 31 39 43 46 47 47 50 59 78 68 78 74 93 84 106 100 115 103 121 134 144 116 126 164 181 166 386 ; 0 0 0 46 48 16 13 29 27 24 20 14 20 13 18 18 13 14 16 18 11 10 13 8 11 8 14 18 16 8 23 14 14 25 25 18 18 12 22 18 25 32 21 20 21 26 27 20 22 59 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 1 1 0 0 0 1 0 0 0 1 0 1 3 0 1 ; 0 0 0 0 2 1 2 4 3 6 5 3 2 5 3 4 4 6 4 6 3 4 4 2 3 2 6 7 3 3 7 8 4 6 8 4 8 6 3 7 9 3 6 11 10 4 9 9 4 20 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 2 0 0 0 0 1 0 0 0 0 0 1 1 0 1 0 1 2 0 0 0 1 1 0 0 0 1 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 1 1 0 0 0 0 1 0 0 0 0 0 4 2 1 2 2 1 2 1 4 5 ; 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 2 2 0 2 1 0 3 3 0 1 0 2 1 3 1 3 0 1 1 2 3 0 2 2 4 3 0 1 5 3 ; 0 0 0 0 0 0 0 0 1 0 1 0 1 2 0 0 1 2 0 1 1 2 2 1 2 1 3 1 2 1 2 2 5 4 0 1 1 5 3 6 0 4 3 6 10 6 7 10 5 7 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 3 0 0 2 1 0 1 0 1 2 0 2 3 1 0 0 0 0 1 2 0 1 3 ; 0 0 0 3 2 1 0 4 2 3 1 1 1 0 1 0 1 2 4 0 2 1 1 3 1 0 1 2 0 0 2 1 0 0 1 4 1 0 1 0 0 0 2 0 2 2 1 2 2 3 ; 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 2 1 2 0 0 0 0 0 0 0 0 0 1 0 0 1 2 0 1 2 0 2 1 0 1 3 0 4 0 0 1 3 3 0 ; 0 0 0 0 2 0 1 3 5 3 3 4 3 1 0 1 2 5 5 2 1 6 5 3 5 2 2 4 6 5 6 3 5 5 6 5 5 4 8 4 2 5 7 2 2 4 1 4 9 9 ; 0 0 0 0 0 0 0 1 3 1 3 2 6 2 2 9 12 14 7 11 16 16 21 21 21 30 22 38 48 51 55 68 45 58 74 87 62 80 96 94 106 103 122 121 162 172 170 176 182 425 ; 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 1 0 2 2 1 1 1 1 3 2 2 2 3 1 0 1 1 2 1 2 5 1 6 2 0 3 3 2 1 5 3 7 2 1 2 ; 0 0 0 0 0 0 0 0 0 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 2 0 1 0 1 0 0 0 0 2 0 2 1 1 0 1 0 1 3 0 1 1 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 0 1 1 0 0 0 0 1 0 0 1 0 1 0 0 1 0 1 1 2 0 3 0 1 2 1 1 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 2 1 0 0 0 1 0 1 0 0 0 0 0 2 0 3 1 0 2 0 0 1 2 0 2 ; 0 0 0 0 2 2 3 2 2 2 7 2 2 3 1 3 2 3 6 2 0 2 1 2 3 3 0 3 0 5 3 2 0 3 1 8 2 8 1 6 4 4 4 5 4 5 5 9 7 16 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 1 0 0 2 0 0 1 1 1 1 0 1 0 0 4 1 0 0 0 1 6 1 ; 0 0 0 0 0 0 1 1 0 1 1 1 0 1 3 0 0 0 2 2 0 0 0 0 2 0 1 1 1 2 2 4 4 2 2 4 3 1 4 2 4 5 5 1 4 4 3 6 5 15 ; 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 2 1 0 1 0 0 2 2 0 1 1 0 2 0 0 1 3 1 0 2 0 0 1 2 2 2 1 2 3 4 3 7 ; 0 0 0 0 0 0 0 1 0 2 0 0 1 1 2 3 1 1 1 4 4 4 0 3 4 4 6 8 4 6 9 4 11 4 6 6 7 7 13 6 6 6 16 9 11 8 10 9 6 28 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 4 5 2 5 2 2 1 4 3 3 9 9 5 10 12 10 10 15 12 12 18 11 24 32 15 18 26 26 30 33 32 32 45 66 ; 0 0 0 0 0 0 0 1 1 1 0 1 1 2 1 3 1 6 4 2 3 0 0 2 2 1 5 6 6 3 4 3 5 6 7 3 6 5 4 5 4 11 4 6 3 9 5 6 4 20 ; 0 0 0 65 82 43 15 16 18 8 5 1 4 4 2 10 8 3 3 7 4 8 12 6 9 9 4 10 7 8 7 4 12 14 15 10 20 16 19 17 16 16 21 17 21 17 27 21 37 59 ; 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 2 1 2 1 1 0 0 3 3 3 0 1 0 3 0 3 1 2 2 1 2 1 2 1 3 3 1 2 1 1 2 3 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 1 0 1 1 0 0 0 0 2 2 1 0 1 0 2 0 1 1 0 3 2 6 0 5 3 6 5 3 3 6 1 6 4 5 5 3 2 11 14 11 15 19 7 36 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 3 1 4 1 1 1 2 2 2 3 2 2 3 4 3 3 1 1 6 ; 0 0 0 0 0 1 2 1 2 3 3 4 8 6 4 9 11 9 11 21 11 24 26 29 24 33 30 44 46 42 48 55 66 62 58 81 81 68 67 101 81 117 101 137 143 124 126 151 170 319 ; 0 0 0 2 1 3 1 1 1 1 3 4 1 2 3 4 2 7 9 2 5 4 9 5 4 1 4 2 5 4 3 10 6 8 5 5 4 5 4 5 11 4 5 12 4 4 7 4 7 15 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 1 1 0 3 3 0 3 2 0 0 2 1 1 5 4 4 3 5 2 5 2 4 5 7 ; 0 0 0 0 1 1 0 0 0 1 1 0 2 0 0 0 1 1 0 1 1 2 2 0 0 1 1 2 0 4 0 0 2 2 1 0 0 3 2 4 2 5 2 2 1 1 0 1 3 7 ; 0 0 0 0 0 0 0 0 2 1 2 0 0 3 1 0 0 2 1 3 3 5 3 1 7 5 4 7 3 6 5 8 9 7 7 2 6 7 9 15 11 11 16 6 11 17 12 10 16 26 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 1 2 0 0 0 2 0 2 0 ; 0 0 0 0 0 0 0 0 1 1 0 2 0 3 2 1 3 3 0 1 1 4 4 2 1 5 5 3 3 3 3 3 4 0 5 7 4 6 3 5 6 2 9 4 7 10 10 9 5 16 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 1 1 1 1 0 0 1 0 1 0 1 0 3 0 2 1 ; 0 0 0 0 0 3 3 5 6 10 5 11 14 12 15 21 20 30 25 24 25 39 55 42 41 63 54 62 80 83 90 65 97 90 107 116 123 143 140 141 170 157 155 155 167 194 183 198 236 450 ; 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 1 1 1 0 0 0 2 1 1 1 4 2 1 1 1 4 ; 0 0 24 22 45 35 20 29 29 21 20 25 18 13 21 11 15 14 19 18 10 16 20 14 16 17 20 14 18 6 19 13 19 13 10 14 18 17 17 13 11 20 23 19 15 14 19 15 17 43 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 2 1 0 2 2 2 0 3 1 2 0 2 0 0 1 0 5 ; 0 0 0 0 0 0 1 1 0 0 1 3 1 2 2 5 2 3 1 3 4 5 2 2 2 5 5 4 6 8 5 5 9 8 6 13 4 5 6 4 5 6 8 11 4 6 7 8 9 9 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 1 0 2 0 3 1 2 1 1 2 2 1 1 1 1 1 2 5 3 3 2 6 1 6 3 2 5 9 ; 0 0 0 0 0 5 10 7 8 8 9 4 12 5 4 4 6 2 12 6 6 12 11 9 9 7 4 5 6 7 7 8 5 12 17 8 10 14 12 14 16 11 13 15 13 26 17 21 16 41 ; 0 0 0 0 1 0 2 4 2 4 1 1 1 1 4 3 2 3 1 0 1 5 2 3 2 3 1 1 5 3 3 1 1 4 4 5 5 5 7 5 6 2 5 4 7 2 7 2 6 5 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 0 0 2 ; 0 0 0 1 5 3 1 2 1 0 1 1 0 0 2 3 1 0 2 5 1 4 0 1 2 1 0 1 1 0 1 0 0 2 3 0 0 1 1 2 2 1 2 1 2 2 2 0 0 8 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 3 2 0 0 0 0 1 0 2 1 1 2 0 0 0 3 1 3 1 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 1 3 1 4 0 1 3 3 3 5 5 4 5 5 2 6 2 7 8 6 6 6 6 6 8 9 10 7 5 9 8 7 9 5 2 11 14 9 29 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 3 4 0 1 0 1 0 0 1 1 7 0 2 1 2 0 2 3 4 1 0 2 2 2 3 4 4 4 3 3 ; 0 0 14 17 12 5 7 9 3 2 3 3 4 4 2 2 3 3 0 2 2 2 3 2 3 0 2 5 6 1 3 3 3 3 3 1 2 3 3 3 3 4 2 8 3 5 1 3 2 5 ; 0 0 0 0 0 0 0 0 1 1 1 1 0 2 0 0 0 2 2 1 3 2 1 1 2 1 2 3 2 4 0 2 1 5 1 3 2 2 2 4 4 3 3 8 2 4 1 6 6 12 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 2 0 0 0 0 0 2 0 0 0 1 1 0 3 3 0 0 1 1 3 1 0 0 2 1 1 3 5 0 1 0 4 4 ; 0 0 0 0 0 0 0 1 0 1 1 2 2 1 1 4 4 3 4 4 9 7 7 3 15 12 11 8 15 17 16 11 20 27 28 31 23 26 25 23 26 28 31 35 42 45 47 42 37 104 ; 0 0 0 0 0 16 9 9 5 4 5 3 1 3 1 2 2 2 0 0 1 0 1 0 2 1 1 1 0 1 2 2 1 0 0 1 2 0 1 0 0 0 0 1 0 1 1 0 1 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 2 0 0 0 0 0 0 0 1 1 1 1 0 2 0 0 0 1 1 3 ; 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 2 1 0 0 0 0 0 0 0 0 1 0 4 0 0 1 5 0 1 0 2 2 3 1 1 ; 0 0 0 0 0 0 0 0 0 1 0 1 2 0 0 0 0 0 0 0 1 0 1 0 1 2 1 2 2 7 0 1 1 1 1 0 1 3 4 4 4 3 3 5 2 4 3 8 2 11 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 2 0 0 0 1 0 0 1 2 2 3 4 1 1 1 1 7 5 1 0 3 1 1 0 5 1 4 1 3 2 1 5 ; 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 1 2 1 0 1 2 0 1 2 1 0 2 7 4 2 3 4 4 5 4 6 4 2 2 7 7 1 7 3 10 2 5 7 14 ; 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 2 0 0 0 0 1 2 1 0 0 0 1 0 1 1 0 0 0 1 1 0 0 1 0 0 1 1 0 0 1 1 3 ; 0 0 0 1 1 2 1 8 2 1 5 2 10 7 5 5 6 3 4 10 8 12 12 15 18 10 15 14 13 11 22 21 34 33 31 36 40 43 35 41 67 38 61 74 51 77 67 64 74 164 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 2 2 0 0 0 1 1 0 1 1 0 2 0 1 1 0 0 1 0 0 4 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 3 2 1 3 4 2 1 4 4 1 4 4 0 2 5 4 6 5 2 3 4 3 6 8 9 7 2 15 3 9 9 11 27 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 1 1 0 2 0 0 0 1 0 0 0 0 0 1 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 2 1 0 2 0 0 1 1 0 0 0 0 1 1 0 0 3 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 2 1 1 0 0 0 1 0 1 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 1 0 0 2 0 0 0 0 1 0 ; 0 0 0 0 0 0 0 0 0 1 0 0 1 0 3 0 1 2 3 0 1 0 2 2 0 2 2 1 0 2 1 5 0 1 1 4 2 0 2 1 0 3 1 1 3 3 3 2 3 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 2 0 0 0 0 0 0 0 0 1 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 2 1 0 1 1 2 2 0 0 0 2 0 1 0 6 1 0 1 1 1 2 5 4 2 8 3 3 6 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 2 0 0 0 0 0 1 4 1 1 2 1 1 3 4 0 1 1 2 1 3 5 4 13 9 4 12 5 5 12 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 1 0 1 0 1 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2 1 1 1 1 1 0 1 1 3 0 1 3 2 0 0 7 2 2 4 3 1 4 7 4 2 11 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 2 1 0 3 0 0 2 2 2 0 1 1 2 1 1 0 0 1 1 2 0 0 1 0 1 0 0 2 1 2 2 1 1 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 2 1 1 0 0 0 0 0 2 3 1 0 1 0 1 2 0 0 1 2 0 1 ; 0 0 0 0 1 0 1 0 1 0 1 0 2 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 1 2 1 1 0 0 0 0 1 1 0 2 0 0 0 0 0 1 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 3 0 1 1 2 3 4 2 1 2 5 3 4 9 6 5 13 7 7 8 11 11 11 14 15 22 11 19 29 25 25 24 28 72 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 1 2 0 0 0 0 0 1 0 2 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 2 0 0 0 2 0 1 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 1 1 0 0 0 0 1 0 1 1 0 2 0 1 1 1 0 0 2 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 2 0 1 0 2 1 1 0 0 1 0 1 1 2 3 3 2 2 2 2 1 1 0 1 0 2 1 0 1 3 6 1 2 5 3 3 8 4 6 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 2 0 0 1 0 0 0 0 1 1 0 0 0 1 1 1 2 0 0 0 2 2 4 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 1 1 1 0 0 0 0 1 ; 0 0 0 26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 1 0 1 4 2 3 0 1 5 2 1 3 3 0 3 3 5 3 3 2 7 5 1 7 11 2 10 9 9 15 8 10 12 17 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 0 0 0 1 1 0 1 2 1 0 2 1 0 2 2 0 1 5 1 3 7 3 4 2 3 2 2 4 4 9 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 2 0 0 1 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 1 0 3 0 2 6 5 5 3 2 3 3 2 3 5 2 5 4 6 8 12 9 6 12 13 11 9 27 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 2 2 5 3 3 2 6 6 16 ; 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 1 0 0 1 1 1 1 0 0 0 1 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 1 0 1 1 1 ; 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 2 0 0 1 3 1 0 0 2 2 1 1 2 1 1 1 2 2 0 6 1 1 2 1 2 2 1 0 2 4 3 3 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2 0 1 0 1 1 0 0 2 1 0 0 3 2 5 ; 0 0 0 0 0 1 0 0 1 2 1 2 3 0 0 1 0 1 0 0 0 0 1 1 3 1 0 0 2 1 3 1 3 4 1 4 4 3 1 1 3 2 6 1 3 2 2 2 2 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 0 1 0 0 0 3 1 1 1 1 1 0 0 0 0 1 2 1 2 1 1 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 0 1 1 0 0 0 1 1 2 0 1 1 0 0 1 3 2 0 1 0 0 1 2 0 5 5 0 2 0 2 1 4 ; 0 0 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 1 1 0 0 2 0 0 1 3 0 1 4 1 1 1 1 0 5 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 2 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 1 2 0 0 0 0 1 1 0 1 2 1 1 1 1 0 0 1 0 1 1 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 2 0 0 0 1 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 0 2 0 0 0 1 2 2 0 0 0 0 1 0 2 2 2 1 2 1 3 0 0 2 0 2 0 2 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 2 2 1 0 1 2 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 1 1 0 0 0 1 0 1 0 2 1 2 1 1 3 0 1 1 1 1 1 2 1 1 3 1 4 2 0 2 ; 0 0 0 0 0 0 0 0 0 1 0 1 1 0 1 0 0 0 0 0 1 1 1 1 0 1 1 0 2 1 1 2 1 1 2 1 1 2 4 3 1 1 2 1 3 3 4 3 4 6 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 1 2 1 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 ; 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 2 0 0 0 1 0 2 3 1 1 6 3 6 0 6 2 10 2 6 6 6 9 8 5 5 9 7 16 10 15 30 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 2 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 1 1 1 0 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 2 0 0 ; 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 3 1 2 5 2 4 3 3 7 5 2 12 11 7 8 10 7 14 17 16 11 13 9 16 18 16 20 19 24 16 20 28 56 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 2 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 4 2 0 1 1 1 0 2 0 0 0 0 1 1 1 1 1 0 1 1 0 0 0 0 0 1 0 0 1 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 2 0 0 2 1 0 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 1 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 0 0 1 0 0 0 1 1 1 1 0 1 1 1 1 0 1 2 1 0 ; 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 2 0 1 0 0 1 0 0 2 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 1 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 1 0 0 1 0 0 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 1 1 1 0 1 0 1 1 1 0 0 1 2 1 0 2 0 0 0 1 2 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 1 1 1 0 1 0 1 1 1 0 0 1 1 1 0 1 0 0 0 1 2 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 1 2 0 1 0 2 3 2 4 3 6 1 3 6 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 3 0 0 0 5 0 0 1 0 1 1 1 5 4 3 3 4 6 3 4 11 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 ; 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 2 0 0 0 1 0 0 1 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 2 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 1 0 0 ; 0 0 0 0 0 0 0 1 0 0 0 2 0 1 1 1 0 1 1 0 0 0 1 0 2 1 3 2 1 1 7 3 6 6 7 2 5 1 7 9 8 8 2 13 12 9 8 5 9 25 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 2 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 ; 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 2 2 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 1 1 0 0 0 1 3 2 2 0 0 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 0 1 0 1 1 0 1 0 1 0 0 2 0 0 0 1 2 1 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 1 2 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 4 0 0 0 1 3 0 2 5 ; 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 1 0 0 3 1 0 0 0 1 0 0 0 0 0 2 1 2 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 1 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 2 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 1 0 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 1 0 1 2 0 1 0 0 0 0 0 0 0 1 0 0 2 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 1 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 0 0 0 1 1 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 1 0 0 1 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 0 1 0 0 1 0 0 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 2 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 2 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 2 ; ];