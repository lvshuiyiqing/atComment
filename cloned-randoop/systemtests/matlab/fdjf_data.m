fdjf.s = [ 0 49818 115651 182017 199981 214319 199302 192732 185356 173177 165131 157979 151830 145016 139623 133550 127733 121727 117421 112149 108779 104449 100418 96586 93438 90490 87417 84867 82279 80204 78559 75945 74498 72018 70643 69278 67811 66148 64859 64329 62654 61203 60521 60092 58981 57641 56868 56323 56200 111731 ];
fdjf.gt = [ 0 51119290101 43847239125 59846417148 64163903374 65449267221 61948033578 62402403881 61155339688 59861529574 63710917254 62531361578 65582508297 65220134519 66798975297 67515515749 73381187339 73308301083 70419257446 73312965853 73849980364 74256563921 75157651891 76778423516 79574930995 79393911689 80327976559 82800272946 82708104532 86073074490 87017436734 86441320786 92171257996 91603716117 97561507492 96326185929 100693182176 97408575757 98913800491 106326930955 103685131499 104779643623 111802743066 118892604585 114442419029 111524601498 114179911963 115394868775 118007294863 249634333464 ];
fdjf.et = [ 0 38814125212 78808166841 103820489791 129230359434 255961656877 103732877052 111266682798 104419803508 116067633746 111040893793 115554250422 121569601079 122961886972 116374812250 121666007781 122784816094 119603554178 115058688109 117906620544 113791770208 128246860408 130181424873 127137858191 114105800112 120270886132 112985586440 122528186374 110247500348 120848188052 118137534092 122232611111 128283092105 115708146086 124258557379 122795482570 131221077145 125046742349 122609487280 130031267711 120037823097 153547379605 126019769514 141268237346 124831732893 127210048805 136935970126 122056906088 133842398812 266148989693 ];
fdjf.n = { 'EqualsHashcode/org.jfree.chart.plot.Plot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.CombinedRangeXYPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultWindDataset.<init>([Ljava.lang.String;,[[[Ljava.lang.Object;)' 'StatementThrowsNPE/org.jfree.chart.plot.FastScatterPlot.<init>([[F,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineException(java.util.Date)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getCloseValue(int,int)' 'StatementThrowsNPE/javax.servlet.GenericServlet.log(java.lang.String)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.createCategoryDataset(java.lang.String,java.lang.String,[[Ljava.lang.Number;)' 'StatementThrowsNPE/javax.servlet.GenericServlet.log(java.lang.String,java.lang.Throwable)' 'StatementThrowsNPE/org.jfree.data.category.DefaultIntervalCategoryDataset.<init>([Ljava.lang.String;,[[Ljava.lang.Number;,[[Ljava.lang.Number;)' 'EqualsHashcode/org.jfree.chart.plot.FastScatterPlot.equals(java.lang.Object)' 'EqualsToItself/org.jfree.data.Range.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getStartX(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractXYDataset.getXValue(int,int)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getDomainLowerBound(boolean)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.advanceTime()' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.indexZ(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractXYZDataset.getZValue(int,int)' 'StatementThrowsNPE/org.jfree.data.xml.PieDatasetHandler.addItem(java.lang.Comparable,java.lang.Number)' 'StatementThrowsNPE/javax.servlet.GenericServlet.getInitParameter(java.lang.String)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getDomainBounds(boolean)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultWindDataset.<init>([[[Ljava.lang.Object;)' 'EqualsHashcode/org.jfree.data.statistics.DefaultStatisticalCategoryDataset.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.RingPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.indexX(int)' 'EqualsHashcode/org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getItemCount(int)' 'EqualsHashcode/org.jfree.chart.labels.ItemLabelPosition.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getDomainUpperBound(boolean)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getEndX(int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.needle.PointerNeedle.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.labels.StandardPieSectionLabelGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getDomainBounds(boolean)' 'StatementThrowsNPE/org.jfree.data.time.MovingAverage.createMovingAverage(org.jfree.data.xy.XYDataset,java.lang.String,long,long)' 'EqualsHashcode/org.jfree.chart.plot.CategoryPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getMinZValue()' 'StatementThrowsNPE/org.jfree.data.category.DefaultIntervalCategoryDataset.<init>([Ljava.lang.Comparable;,[Ljava.lang.Comparable;,[[Ljava.lang.Number;,[[Ljava.lang.Number;)' 'EqualsHashcode/org.jfree.data.xy.IntervalXYDelegate.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.indexY(int)' 'StatementThrowsNPE/org.jfree.chart.plot.ColorPalette.getPaint(double)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getY(int,int)' 'EqualsHashcode/org.jfree.chart.needle.PlumNeedle.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.LegendItemCollection.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.gantt.Task.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.plot.CategoryPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getDomainLowerBound(boolean)' 'StatementThrowsNPE/org.jfree.chart.labels.MultipleXYSeriesLabelGenerator.generateLabel(org.jfree.data.xy.XYDataset,int)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel(org.jfree.data.xy.XYDataset,int)' 'EqualsHashcode/org.jfree.chart.plot.CategoryMarker.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.ColorPalette.getColorLinear(double)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getY(int,int)' 'EqualsHashcode/org.jfree.chart.needle.LongNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.zoom(double)' 'EqualsHashcode/org.jfree.chart.plot.MultiplePiePlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getX(int,int)' 'EqualsHashcode/org.jfree.chart.plot.ThermometerPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.needle.ArrowNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ColorBar.configure(org.jfree.chart.plot.ContourPlot)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getStartX(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.WaferMapPlot.getLegendItems()' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findMinimumDomainValue(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.annotations.XYPolygonAnnotation.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findRangeBounds(org.jfree.data.xy.XYDataset,boolean)' 'EqualsHashcode/org.jfree.chart.title.LegendGraphic.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xml.CategoryDatasetHandler.addItem(java.lang.Comparable,java.lang.Comparable,java.lang.Number)' 'StatementThrowsNPE/org.jfree.chart.ClipPath.clone()' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getStartY(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.CategoryPlot.zoom(double)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findMaximumDomainValue(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.entity.LegendItemEntity.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getMinZValue(double,double,double,double)' 'EqualsHashcode/org.jfree.chart.labels.StandardXYItemLabelGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.entity.StandardEntityCollection.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.setAutoWidth(boolean)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYZToolTipGenerator.generateToolTip(org.jfree.data.xy.XYZDataset,int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.Plot.zoom(double)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getDomainUpperBound(boolean)' 'EqualsHashcode/org.jfree.chart.needle.ShipNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.iterateDomainBounds(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getMaxZValue()' 'StatementThrowsNPE/javax.servlet.GenericServlet.getInitParameterNames()' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getX(int,int)' 'EqualsHashcode/org.jfree.chart.plot.IntervalMarker.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getXValue(int)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getNewestTime()' 'EqualsHashcode/org.jfree.chart.ChartRenderingInfo.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getOldestTime()' 'StatementThrowsNPE/javax.servlet.GenericServlet.getServletContext()' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.zoom(double)' 'EqualsHashcode/org.jfree.chart.block.LabelBlock.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.urls.CustomPieURLGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.KeyToGroupMap.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.indexX()' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getEndX(int,int)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findDomainBounds(org.jfree.data.xy.XYDataset,boolean)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getZ(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)' 'EqualsHashcode/org.jfree.chart.plot.PlotRenderingInfo.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.urls.StandardXYURLGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.setTimeBase(org.jfree.data.time.RegularTimePeriod)' 'EqualsHashcode/org.jfree.chart.axis.DateAxis.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getZValueRange(org.jfree.data.Range,org.jfree.data.Range)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findMaximumRangeValue(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardContourToolTipGenerator.generateToolTip(org.jfree.data.contour.ContourDataset,int)' 'StatementThrowsNPE/org.jfree.chart.labels.AbstractXYItemLabelGenerator.generateLabelString(org.jfree.data.xy.XYDataset,int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.<init>(org.jfree.data.contour.ContourDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ColorBar)' 'StatementThrowsNPE/org.jfree.chart.plot.FastScatterPlot.zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)' 'StatementThrowsNPE/javax.servlet.GenericServlet.getServletName()' 'StatementThrowsNPE/org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions(long,long)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findMinimumRangeValue(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.chart.plot.ColorPalette.getColorLog(double)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findRangeBounds(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.plot.CombinedRangeCategoryPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.getMaxRadius()' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)' 'EqualsHashcode/org.jfree.data.time.TimeTableXYDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.iterateXYRangeBounds(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.isEmptyOrNull(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.plot.CombinedDomainXYPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getYValue(int,int)' 'EqualsHashcode/org.jfree.chart.axis.TickUnits.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getEndY(int,int)' 'EqualsHashcode/org.jfree.data.statistics.HistogramDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.FastScatterPlot.zoomDomainAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getEndY(int,int)' 'EqualsHashcode/org.jfree.data.KeyedObjects.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.data.time.TimeSeriesCollection.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.needle.PinNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findDomainBounds(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineException(long)' 'EqualsHashcode/org.jfree.chart.plot.DefaultDrawingSupplier.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getX(int,int)' 'EqualsHashcode/org.jfree.chart.needle.MiddlePinNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)' 'EqualsHashcode/org.jfree.chart.entity.ChartEntity.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.KeyedObject.equals(java.lang.Object)' 'StatementThrowsNPE/org.xml.sax.helpers.DefaultHandler.endElement(java.lang.String,java.lang.String,java.lang.String)' 'EqualsHashcode/org.jfree.chart.LegendItem.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.PolarPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.SpiderWebPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xml.ItemHandler.endElement(java.lang.String,java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getStartY(int,int)' 'EqualsHashcode/org.jfree.chart.block.BlockContainer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.formObjectArray([[D)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.createCategoryDataset([Ljava.lang.Comparable;,[Ljava.lang.Comparable;,[[D)' 'StatementThrowsNPE/org.jfree.chart.renderer.WaferMapRenderer.getChipColor(java.lang.Number)' 'EqualsHashcode/org.jfree.chart.plot.CombinedDomainCategoryPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.renderer.WaferMapRenderer.setPlot(org.jfree.chart.plot.WaferMapPlot)' 'EqualsHashcode/org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.labels.HighLowItemLabelGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.category.DefaultIntervalCategoryDataset.<init>([[Ljava.lang.Number;,[[Ljava.lang.Number;)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setVerticalTickLabels(boolean)' 'StatementThrowsNPE/org.jfree.chart.plot.SpiderWebPlot.getLegendItems()' 'StatementThrowsNPE/org.jfree.chart.renderer.xy.XYBarRenderer.findDomainBounds(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.labels.StandardXYZToolTipGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.MovingAverage.createMovingAverage(org.jfree.data.xy.XYDataset,int,java.lang.String,double,double)' 'EqualsSymmetric/org.jfree.chart.renderer.category.LineAndShapeRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.plot.ValueMarker.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.statistics.SimpleHistogramBin.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.AbstractSeriesDataset.indexOf(java.lang.Comparable)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getStartXValue(int,int)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getY(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.FastScatterPlot.zoomDomainAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue(int,int)' 'EqualsHashcode/org.jfree.chart.labels.AbstractPieItemLabelGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultWindDataset.<init>(java.util.List,[[[Ljava.lang.Object;)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractXYDataset.getYValue(int,int)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getEndX(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.visibleRange(org.jfree.data.contour.ContourDataset,org.jfree.data.Range,org.jfree.data.Range)' 'EqualsSymmetric/org.jfree.chart.plot.CombinedDomainXYPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.time.TimePeriodValuesCollection.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.general.DatasetGroup.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.plot.CombinedRangeCategoryPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getStartY(int,int)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getStartX(int,int)' 'StatementThrowsNPE/org.jfree.data.time.MovingAverage.createMovingAverage(org.jfree.data.xy.XYDataset,java.lang.String,double,double)' 'EqualsHashcode/org.jfree.chart.block.FlowArrangement.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getItemCount(int)' 'EqualsHashcode/org.jfree.chart.JFreeChart.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYZToolTipGenerator.generateLabelString(org.jfree.data.xy.XYDataset,int,int)' 'EqualsHashcode/org.jfree.chart.block.BorderArrangement.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYItemLabelGenerator.generateLabel(org.jfree.data.xy.XYDataset,int,int)' 'EqualsHashcode/org.jfree.chart.plot.PiePlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.statistics.HistogramBin.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getY(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getClose(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getVolume(int,int)' 'EqualsSymmetric/org.jfree.chart.plot.PiePlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getVolumeValue(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getOpen(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getHighValue(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getHigh(int,int)' 'EqualsHashcode/org.jfree.chart.block.AbstractBlock.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.MeterPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getOpenValue(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getY(int,int)' 'EqualsHashcode/org.jfree.chart.labels.StandardXYToolTipGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.labels.SymbolicXYItemLabelGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.CategoryAxis.getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)' 'EqualsHashcode/org.jfree.chart.block.GridArrangement.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.plot.CombinedRangeXYPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.ClipPath.generateClipPath(java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.chart.axis.CategoryAxis3D.getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getXDate(int,int)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)' 'EqualsHashcode/org.jfree.data.xy.DefaultOHLCDataset.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.urls.CustomXYURLGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.labels.HighLowItemLabelGenerator.generateToolTip(org.jfree.data.xy.XYDataset,int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.CombinedDomainCategoryPlot.getCategories()' 'StatementThrowsNPE/org.jfree.chart.plot.FastScatterPlot.zoomRangeAxes(double,double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)' 'EqualsHashcode/org.jfree.chart.needle.LineNeedle.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.gantt.TaskSeriesCollection.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.labels.CustomXYToolTipGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getLow(int,int)' 'EqualsHashcode/org.jfree.chart.block.BlockBorder.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.plot.CombinedDomainCategoryPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ColorBar.getPaint(double)' 'EqualsToItself/java.awt.geom.Point2D.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractIntervalXYDataset.getEndYValue(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractIntervalXYDataset.getStartYValue(int,int)' 'EqualsHashcode/org.jfree.chart.entity.ContourEntity.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.axis.ValueTick.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.statistics.SimpleHistogramDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getLowValue(int,int)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYToolTipGenerator.generateToolTip(org.jfree.data.xy.XYDataset,int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setNegativeArrowVisible(boolean)' 'EqualsHashcode/org.jfree.chart.plot.XYPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.labels.SymbolicXYItemLabelGenerator.generateToolTip(org.jfree.data.xy.XYDataset,int,int)' 'EqualsSymmetric/org.jfree.chart.plot.XYPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.KeyedObjects2D.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.xy.OHLCDataItem.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.<init>([Lorg.jfree.data.general.SeriesDataset;)' 'EqualsHashcode/org.jfree.chart.plot.CompassPlot.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.needle.WindNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.getContourDataRange()' 'EqualsSymmetric/org.jfree.chart.plot.SpiderWebPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getStartY(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.Plot.getLegendItems()' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.<init>(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getStartX(int,int)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getY(int,int)' 'EqualsHashcode/org.jfree.chart.urls.StandardPieURLGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getX(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)' 'EqualsHashcode/org.jfree.chart.block.CenterArrangement.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.datasetChanged(org.jfree.data.general.DatasetChangeEvent)' 'EqualsSymmetric/org.jfree.data.gantt.Task.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.XYBarRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue(int,int)' 'EqualsHashcode/org.jfree.data.time.TimeSeries.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setAutoRangeTimePeriodClass(java.lang.Class)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getEndXValue(int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.entity.XYItemEntity.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.WaferMapPlot.setRenderer(org.jfree.chart.renderer.WaferMapRenderer)' 'EqualsSymmetric/org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.JFreeChart.createBufferedImage(int,int)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.createCategoryDataset(java.lang.String,java.lang.String,[[D)' 'EqualsSymmetric/org.jfree.chart.renderer.AbstractRenderer.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.category.WaterfallBarRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.urls.TimeSeriesURLGenerator.generateURL(org.jfree.data.xy.XYDataset,int,int)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultOHLCDataset.getX(int,int)' 'EqualsHashcode/org.jfree.chart.plot.MeterInterval.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getEndY(int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.category.BarRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.setDataset(org.jfree.data.contour.ContourDataset)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.getRange()' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickMarkOutsideLength(float)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickLabelFont(java.awt.Font)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRangeWithMargins(double,double)' 'EqualsHashcode/org.jfree.data.xy.CategoryTableXYDataset.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.DefaultKeyedValues2D.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.CyclicNumberAxis.centerRange(double)' 'EqualsHashcode/org.jfree.chart.block.ColumnArrangement.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getEndX(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.setDataset(int,org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.XYDifferenceRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickMarkInsideLength(float)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setNumberFormatOverride(java.text.NumberFormat)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickMarkInsideLength(float)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.setDataset(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setVisible(boolean)' 'EqualsHashcode/org.jfree.chart.labels.StandardContourToolTipGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.time.TimePeriodValues.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.CyclicNumberAxis.setFixedAutoRange(double)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setMarkerBand(org.jfree.chart.axis.MarkerAxisBand)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.axisChanged(org.jfree.chart.event.AxisChangeEvent)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.zoomRange(double,double)' 'EqualsHashcode/org.jfree.chart.axis.SegmentedTimeline$Segment.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.DefaultHighLowDataset.getX(int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getX(int,int)' 'EqualsHashcode/java.util.Collections$UnmodifiableList.equals(java.lang.Object)' 'EqualsSymmetric/java.util.Collections$UnmodifiableList.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getHighValue(int,int)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getClose(int,int)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getItemCount(int)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getStartX(int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.category.StackedBarRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMajorTickTimePeriodClass(java.lang.Class)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getItemCount(int)' 'EqualsHashcode/org.jfree.data.xy.XYSeries.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xml.CategorySeriesHandler.endElement(java.lang.String,java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRangeWithMargins(org.jfree.data.Range)' 'StatementThrowsNPE/org.jfree.chart.plot.FastScatterPlot.clone()' 'StatementThrowsNPE/org.jfree.chart.axis.SymbolAxis.setGridBandPaint(java.awt.Paint)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setAutoRange(boolean)' 'EqualsSymmetric/org.jfree.chart.block.AbstractBlock.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRange(org.jfree.data.Range)' 'StatementThrowsNPE/org.jfree.chart.axis.ColorBar.setMinimumValue(double)' 'EqualsSymmetric/org.jfree.chart.plot.RingPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setAxisLineVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardCategoryToolTipGenerator.generateToolTip(org.jfree.data.category.CategoryDataset,int,int)' 'EqualsHashcode/org.jfree.data.statistics.BoxAndWhiskerItem.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.MultiplePiePlot.getLegendItems()' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setLowerBound(double)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setDownArrow(java.awt.Shape)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero(boolean)' 'StatementThrowsNPE/org.jfree.chart.JFreeChart.createBufferedImage(int,int,org.jfree.chart.ChartRenderingInfo)' 'EqualsSymmetric/org.jfree.chart.renderer.category.GroupedStackedBarRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setAxisLineStroke(java.awt.Stroke)' 'EqualsSymmetric/org.jfree.chart.renderer.category.LevelRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRange(org.jfree.data.Range,boolean,boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setUpArrow(java.awt.Shape)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setTickUnit(org.jfree.chart.axis.NumberTickUnit)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setAxisLinePaint(java.awt.Paint)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setPositiveArrowVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickMarkStroke(java.awt.Stroke)' 'StatementThrowsNPE/org.jfree.chart.plot.ThermometerPlot.setSubrangeInfo(int,double,double)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickLabelsVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setUpperMargin(double)' 'EqualsHashcode/org.jfree.data.statistics.MeanAndStandardDeviation.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.CyclicNumberAxis.setAutoRangeMinimumSize(double,boolean)' 'EqualsSymmetric/org.jfree.chart.JFreeChart.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setRangeType(org.jfree.data.RangeType)' 'EqualsHashcode/org.jfree.chart.entity.CategoryItemEntity.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setLeftArrow(java.awt.Shape)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setFixedAutoRange(double)' 'StatementThrowsNPE/org.jfree.chart.axis.CyclicNumberAxis.setRange(org.jfree.data.Range,boolean,boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickTimePeriodClass(java.lang.Class)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickMarksVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickLabelPaint(java.awt.Paint)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setAutoRangeStickyZero(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRangeAboutValue(double,double)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setLowerMargin(double)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.resizeRange(double)' 'EqualsHashcode/org.jfree.chart.entity.XYAnnotationEntity.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setStandardTickUnits(org.jfree.chart.axis.TickUnitSource)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRange(double,double)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.add([Lorg.jfree.data.general.SeriesDataset;)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setLabelAngle(double)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getEndX(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setTimeZone(java.util.TimeZone)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.getRange()' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize(double,boolean)' 'EqualsSymmetric/org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getHighValue(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickMarkOutsideLength(float)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.centerRange(double)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setAutoTickUnitSelection(boolean)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getCloseValue(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize(double)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.configure()' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setLast(org.jfree.data.time.RegularTimePeriod)' 'EqualsSymmetric/org.jfree.chart.plot.Plot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.datasetChanged(org.jfree.data.general.DatasetChangeEvent)' 'EqualsSymmetric/org.jfree.chart.renderer.category.CategoryStepRenderer.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.labels.CustomXYToolTipGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.setAxis(org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.chart.plot.CategoryPlot.getCategories()' 'StatementThrowsNPE/org.jfree.chart.JFreeChart.createBufferedImage(int,int,double,double,org.jfree.chart.ChartRenderingInfo)' 'EqualsSymmetric/org.jfree.chart.labels.AbstractPieItemLabelGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setLabel(java.lang.String)' 'StatementThrowsNPE/org.jfree.chart.axis.DateAxis.setMaximumDate(java.util.Date)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setTickUnit(org.jfree.chart.axis.NumberTickUnit,boolean,boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setUpperBound(double)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setAutoTickUnitSelection(boolean,boolean)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getEndY(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.setDataset(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getHigh(int,int)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getVolume(int,int)' 'EqualsHashcode/org.jfree.chart.title.TextTitle.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.axis.CategoryAxis.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickMarkStroke(java.awt.Stroke)' 'StatementThrowsNPE/org.jfree.chart.JFreeChart.createBufferedImage(int,int,int,org.jfree.chart.ChartRenderingInfo)' 'EqualsHashcode/org.jfree.data.general.DefaultKeyedValueDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickMarkPaint(java.awt.Paint)' 'StatementThrowsNPE/org.jfree.data.xml.CategoryDatasetHandler.endElement(java.lang.String,java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setFirst(org.jfree.data.time.RegularTimePeriod)' 'EqualsHashcode/org.jfree.data.category.DefaultCategoryDataset.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.general.DefaultPieDataset.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.data.general.DefaultPieDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.getDataRange(org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.chart.axis.ModuloAxis.resizeRange(double)' 'StatementThrowsNPE/org.jfree.chart.axis.ModuloAxis.resizeRange(double,double)' 'EqualsSymmetric/org.jfree.data.category.DefaultCategoryDataset.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.annotations.XYPointerAnnotation.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.renderer.xy.StackedXYAreaRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.resizeRange(double,double)' 'StatementThrowsNPE/org.jfree.chart.plot.CombinedRangeXYPlot.<init>(org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.chart.plot.Plot.clone()' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getVolumeValue(int,int)' 'StatementThrowsNPE/java.awt.Window.applyResourceBundle(java.util.ResourceBundle)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.lengthToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.ui.RectangleEdge)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickMarkPaint(java.awt.Paint)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getOpenValue(int,int)' 'EqualsHashcode/org.jfree.chart.renderer.xy.XYAreaRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getLow(int,int)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.add(org.jfree.data.general.SeriesDataset)' 'EqualsSymmetric/org.jfree.data.DefaultKeyedValues.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setLabelInsets(org.jfree.ui.RectangleInsets)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getOpen(int,int)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getCloseValue(int,int)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getLowValue(int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.HighLowRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.SymbolAxis.setGridBandsVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.getDataRange(org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickMarksVisible(boolean)' 'EqualsSymmetric/org.jfree.chart.renderer.category.StatisticalBarRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.setDomainAxis(int,org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.data.xml.PieDatasetHandler.endElement(java.lang.String,java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.jfree.chart.plot.CombinedDomainXYPlot.add(org.jfree.chart.plot.XYPlot)' 'StatementThrowsNPE/org.jfree.chart.plot.CombinedRangeCategoryPlot.<init>(org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRangeWithMargins(org.jfree.data.Range,boolean,boolean)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.zoomRangeAxes(double,org.jfree.chart.plot.PlotRenderingInfo,java.awt.geom.Point2D)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setLabelPaint(java.awt.Paint)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRightArrow(java.awt.Shape)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setLabelFont(java.awt.Font)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.axis.MarkerAxisBand.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickLabelInsets(org.jfree.ui.RectangleInsets)' 'StatementThrowsNPE/org.jfree.data.contour.NonGridContourDataset.<init>(java.lang.String,[Ljava.lang.Object;,[Ljava.lang.Object;,[Ljava.lang.Object;,int,int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.ModuloAxis.setDisplayRange(double,double)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.setDomainAxis(org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.chart.axis.SegmentedTimeline.addExceptions(java.util.List)' 'StatementThrowsNPE/org.jfree.chart.axis.SegmentedTimeline.containsDomainValue(long)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getVolumeValue(int,int)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getOpen(int,int)' 'EqualsHashcode/org.jfree.data.DefaultKeyedValues.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.getLegendItems()' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.getDataRange(org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.chart.plot.CombinedRangeXYPlot.add(org.jfree.chart.plot.XYPlot)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.setRangeAxes([Lorg.jfree.chart.axis.ValueAxis;)' 'EqualsSymmetric/org.jfree.chart.entity.ChartEntity.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.CombinedDataset.getHigh(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setInverted(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setPlot(org.jfree.chart.plot.Plot)' 'StatementThrowsNPE/org.jfree.chart.axis.ColorBar.setMaximumValue(double)' 'StatementThrowsNPE/org.jfree.chart.plot.Plot.axisChanged(org.jfree.chart.event.AxisChangeEvent)' 'StatementThrowsNPE/org.jfree.data.contour.NonGridContourDataset.<init>(java.lang.String,[Ljava.lang.Object;,[Ljava.lang.Object;,[Ljava.lang.Object;)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.clone()' };
fdjf.f = [ 0 0 0 0 0 10 11 23 35 32 42 32 32 35 42 34 43 39 49 39 51 52 63 50 54 56 58 66 49 65 72 50 75 68 57 72 88 76 80 62 70 75 68 75 62 63 78 71 68 168 ; 0 0 0 4 7 10 15 16 22 21 38 29 30 39 49 57 71 76 78 72 70 66 84 75 79 105 86 104 93 108 108 89 116 119 108 133 125 129 157 147 128 169 159 155 167 170 153 189 187 367 ; 0 0 0 0 0 73 0 10 0 3 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 7 15 11 21 10 14 12 7 7 8 6 7 4 5 5 7 3 1 3 3 1 3 1 1 1 0 0 1 3 3 0 1 2 1 1 1 0 0 1 2 1 0 0 0 0 0 ; 0 0 0 0 8 10 15 27 37 28 30 24 21 25 22 19 20 32 25 13 18 25 25 23 18 16 10 20 20 22 28 20 9 15 20 16 11 19 15 20 13 15 9 16 16 17 13 10 13 26 ; 0 0 0 0 0 0 0 14 12 11 12 9 1 10 2 2 3 3 6 0 2 0 3 0 0 0 3 2 0 1 2 3 0 0 0 0 2 0 1 1 1 0 1 0 0 0 1 1 0 2 ; 0 0 0 137 187 147 110 72 60 30 42 19 16 9 8 11 9 5 5 5 2 2 3 0 1 1 1 0 4 4 2 1 2 3 4 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 214 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 115 165 178 121 103 70 51 33 29 23 12 13 14 6 4 7 2 7 5 5 1 0 0 1 3 7 2 0 2 5 0 0 2 2 0 0 1 1 0 0 0 1 0 1 2 ; 0 0 0 0 0 98 0 107 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 3 12 11 22 14 18 15 16 13 4 12 8 11 12 6 13 9 16 9 10 12 10 13 22 23 20 15 27 20 27 29 34 20 20 23 34 31 34 34 32 29 32 41 37 44 39 66 ; 0 0 0 0 3 75 60 114 110 116 130 119 112 103 104 87 79 65 67 55 45 54 34 29 42 47 20 32 31 23 40 16 22 21 16 19 19 16 7 19 12 14 15 11 12 4 15 12 11 18 ; 0 0 0 0 0 8 97 65 104 78 90 88 89 65 59 53 51 37 38 39 31 23 27 28 23 16 22 18 18 23 12 12 12 9 9 8 9 3 8 12 4 12 5 8 7 7 4 1 7 10 ; 0 0 0 0 5 6 18 9 13 12 15 7 14 9 7 11 5 3 5 7 4 7 3 3 3 2 4 1 2 2 3 6 1 2 3 1 0 0 1 1 0 2 2 0 0 1 2 1 0 3 ; 0 0 0 0 0 81 40 81 85 75 82 98 63 74 75 59 49 41 46 42 38 32 32 30 20 28 13 18 21 13 18 16 16 13 11 8 7 10 17 11 4 7 6 7 3 2 3 0 4 7 ; 0 0 0 0 56 46 88 78 79 89 88 71 88 54 60 55 46 49 27 42 27 21 23 19 15 18 18 15 10 12 14 11 11 15 6 6 10 5 9 8 3 2 8 5 12 4 4 8 2 12 ; 0 0 0 4 166 100 112 94 85 83 51 47 34 48 37 34 33 33 26 20 29 25 24 23 18 23 23 12 12 12 20 8 6 7 7 5 6 8 4 6 7 3 3 13 8 10 7 2 4 6 ; 0 0 0 0 43 38 38 34 21 31 24 19 13 18 10 8 11 10 6 8 10 7 7 6 4 7 8 9 7 2 8 2 4 4 3 1 1 1 2 0 0 2 2 1 4 4 5 6 3 6 ; 0 0 0 0 34 26 25 29 26 38 26 34 41 31 48 32 31 37 36 33 38 31 29 29 34 21 35 34 31 22 18 21 30 18 23 17 14 22 27 22 18 17 12 16 10 11 14 13 16 23 ; 0 0 0 138 157 140 118 72 69 35 24 19 13 11 8 9 6 6 2 1 5 1 1 0 1 0 2 0 2 1 0 1 0 2 1 0 2 1 1 1 2 0 2 1 1 0 0 0 0 0 ; 0 0 0 0 0 64 42 96 80 86 91 88 77 66 57 48 49 46 36 39 37 30 29 27 24 17 16 19 15 18 12 10 9 5 13 3 15 8 8 5 10 7 2 12 3 1 5 3 7 9 ; 0 0 0 51 0 7 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 1 1 4 1 3 3 6 9 7 15 10 15 19 26 28 23 34 22 26 26 25 25 41 27 43 43 40 42 47 43 28 30 49 36 36 43 38 41 44 48 42 52 44 46 78 ; 0 0 0 1 2 4 2 5 9 11 18 12 13 14 5 15 28 18 20 27 17 29 15 26 23 25 30 32 19 19 27 18 18 15 24 32 26 28 23 43 29 38 28 30 38 41 35 25 27 60 ; 0 0 0 144 113 119 95 79 73 60 41 35 42 33 37 33 24 31 19 20 16 22 23 24 15 11 16 10 16 16 15 9 5 9 7 7 6 9 7 9 7 10 12 7 4 7 6 4 6 14 ; 0 0 0 4 5 3 6 8 4 7 8 11 6 2 7 5 9 7 12 2 11 12 8 5 6 12 5 10 15 6 6 10 5 13 6 8 8 15 6 6 12 9 5 18 10 13 13 11 9 23 ; 0 0 0 50 46 42 35 26 36 21 12 7 16 11 11 12 11 10 12 10 12 2 8 9 10 8 6 10 7 2 6 4 2 3 3 2 4 3 1 2 5 2 0 5 3 5 3 0 2 4 ; 0 0 0 0 0 3 6 5 23 11 17 21 34 20 34 26 24 46 54 35 48 36 67 48 55 52 70 66 67 71 51 65 80 61 66 71 68 68 60 72 82 75 96 75 93 87 87 74 91 169 ; 0 0 0 0 4 13 11 13 13 9 14 11 11 17 12 15 10 16 8 6 7 1 3 4 3 4 8 1 2 2 2 0 3 4 4 3 2 2 4 3 2 2 4 2 1 0 1 1 1 1 ; 0 0 0 0 0 1 5 3 8 5 6 9 9 18 11 8 11 5 4 3 3 1 0 2 2 2 3 4 0 2 0 3 1 2 0 1 1 0 1 0 1 1 1 0 0 0 1 1 1 2 ; 0 0 0 0 0 0 0 0 0 1 0 1 3 1 0 1 3 0 2 0 0 0 2 1 5 4 2 3 5 1 3 1 0 0 1 4 2 1 3 3 4 0 1 2 3 3 5 1 3 5 ; 0 0 0 51 55 27 15 12 10 9 10 6 6 6 8 13 5 9 8 1 5 5 6 4 3 5 4 9 6 6 3 5 6 5 4 8 3 4 5 6 4 5 6 2 9 5 1 5 8 12 ; 0 0 0 19 50 47 53 45 40 34 42 29 47 31 22 37 32 28 27 26 30 19 23 18 31 19 24 27 30 23 13 23 20 17 27 24 23 13 26 21 24 24 14 18 20 27 22 23 9 43 ; 0 0 0 0 2 8 11 18 14 22 17 21 19 12 12 11 17 10 4 4 9 3 5 4 0 5 3 2 4 3 6 3 2 6 2 1 3 3 4 2 0 1 2 1 1 2 0 1 0 2 ; 0 0 0 0 0 3 4 5 5 2 5 5 5 2 2 2 3 3 0 4 1 2 4 2 1 0 1 0 2 3 0 1 2 0 0 1 0 1 2 0 1 0 0 0 1 1 0 0 1 1 ; 0 0 0 0 1 7 9 8 15 14 21 22 20 33 17 35 33 26 32 26 43 35 37 52 45 44 43 41 52 57 57 42 48 55 58 44 52 54 50 60 67 43 56 61 70 62 58 64 64 129 ; 0 0 97 96 95 93 81 71 53 49 35 39 39 39 22 25 30 24 23 18 23 12 19 17 18 21 13 14 13 14 16 8 12 8 10 4 12 5 3 11 9 8 5 5 7 4 5 5 9 8 ; 0 0 0 0 0 26 4 57 7 32 9 12 6 9 8 4 6 3 9 2 1 3 2 2 5 1 4 1 2 3 0 0 1 1 0 0 2 1 0 0 1 0 0 0 0 0 2 0 0 0 ; 0 0 0 1 5 6 17 15 16 12 17 21 15 10 16 14 10 19 19 8 7 10 8 10 2 6 4 9 5 8 7 12 7 5 2 10 6 8 6 5 9 8 7 7 3 12 0 7 13 13 ; 0 0 0 132 120 120 94 98 65 60 49 40 48 50 37 33 21 28 22 24 13 19 26 25 16 15 13 14 18 11 8 12 12 8 7 10 10 5 6 9 7 5 6 6 1 7 6 3 6 9 ; 0 0 0 0 0 25 6 29 9 14 13 7 4 2 2 0 2 0 1 0 1 0 0 0 0 0 0 0 1 0 3 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 59 37 44 36 42 34 19 18 16 17 17 12 9 11 10 10 13 4 3 9 4 8 10 7 5 6 4 4 1 6 2 6 5 3 4 4 1 6 3 3 2 2 3 0 2 4 ; 0 0 0 54 60 35 20 9 10 14 6 10 13 8 5 6 2 6 4 2 3 5 4 2 4 5 2 2 5 2 2 5 3 2 3 6 2 5 4 9 5 6 4 1 8 5 3 4 2 8 ; 0 0 0 34 63 48 79 67 65 92 82 84 80 91 76 91 102 120 88 86 101 105 83 71 70 85 84 94 100 77 92 82 83 99 99 85 110 100 96 100 107 111 99 99 107 101 94 99 110 217 ; 0 0 0 0 0 3 15 16 9 20 14 21 18 26 23 18 15 33 26 31 29 25 20 19 25 31 27 31 30 28 22 16 23 24 23 30 25 29 32 39 22 24 30 25 45 31 40 31 52 41 ; 0 0 0 0 0 0 1 0 1 1 4 2 3 5 2 8 7 3 6 1 8 3 4 2 3 11 8 5 5 6 8 3 7 6 6 4 6 11 11 6 6 2 7 4 6 4 6 13 7 14 ; 0 0 0 0 3 8 12 15 15 12 23 20 12 19 10 12 9 13 7 4 2 4 2 4 2 2 6 0 2 3 2 3 3 4 1 1 2 2 4 5 3 2 3 1 1 2 1 0 0 3 ; 0 0 0 0 0 1 1 0 2 1 0 1 1 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 1 1 0 0 0 0 1 0 1 ; 0 0 0 0 0 2 3 1 0 3 1 0 1 1 1 1 0 0 3 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 1 ; 0 0 0 0 1 0 1 4 7 5 8 4 4 4 6 7 5 9 10 3 8 9 4 14 11 8 7 8 12 10 16 20 18 14 19 19 17 12 19 18 15 18 21 23 20 21 26 18 15 60 ; 0 0 0 0 0 16 8 31 15 15 9 7 7 6 4 1 1 0 2 0 1 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 3 2 6 2 6 2 6 9 5 4 7 2 3 2 1 1 2 0 0 1 2 0 2 2 1 0 1 3 1 2 0 0 3 0 0 1 0 0 0 2 0 2 1 2 ; 0 0 0 41 51 29 14 16 10 13 6 9 8 5 2 9 3 9 1 5 2 1 5 4 2 4 5 2 5 3 2 6 3 4 2 4 3 2 4 4 4 9 10 1 2 4 3 4 6 8 ; 0 0 0 8 13 17 13 16 27 23 21 10 16 12 13 16 16 15 19 18 14 14 9 15 15 14 10 13 8 12 18 9 6 10 7 11 7 10 6 12 5 7 8 11 6 13 6 3 1 11 ; 0 0 0 1 9 15 18 28 28 27 18 29 33 20 29 30 18 23 20 23 21 22 20 21 21 19 20 25 21 16 26 18 21 19 26 38 20 31 30 20 22 26 26 28 38 32 28 37 38 48 ; 0 0 0 0 0 0 5 2 14 6 11 5 14 9 6 8 8 8 9 4 5 6 5 2 5 2 2 1 4 3 5 4 2 3 2 3 4 0 4 3 6 3 1 1 6 0 2 3 2 6 ; 0 0 0 7 4 9 9 11 11 12 7 19 23 18 25 21 24 19 29 29 34 19 32 36 38 26 25 32 24 18 38 30 34 33 25 29 29 42 47 47 37 43 44 52 43 39 52 45 57 104 ; 0 0 0 0 29 15 10 4 6 5 4 2 4 3 2 4 1 1 2 6 1 2 1 5 1 0 3 1 2 2 2 1 2 2 0 2 1 2 2 2 2 3 0 1 1 4 2 3 2 6 ; 0 0 0 0 6 6 6 10 13 10 19 24 25 20 32 27 23 27 24 23 28 20 29 24 22 25 26 20 29 22 28 16 16 28 17 16 20 19 23 16 21 16 24 21 17 14 23 26 15 40 ; 0 0 0 0 0 0 6 0 10 6 11 5 11 13 17 8 8 8 4 7 3 3 4 3 4 2 1 5 2 6 1 4 4 2 2 2 3 4 2 0 6 0 2 4 5 4 1 4 3 7 ; 0 0 109 72 42 49 68 61 74 65 67 56 53 29 31 27 20 26 19 20 17 16 14 16 16 14 18 10 11 7 12 7 8 15 13 13 4 7 6 6 9 5 10 5 6 6 4 8 4 19 ; 0 0 12 13 16 15 21 16 8 19 19 18 19 9 8 18 9 5 14 4 5 6 6 4 4 1 5 4 4 5 3 6 4 2 3 3 0 5 1 0 2 1 1 1 1 2 1 2 2 2 ; 0 0 0 0 6 11 17 21 6 4 5 3 6 6 5 8 4 8 10 3 6 8 5 6 11 10 9 13 10 7 7 15 10 9 11 12 19 15 23 14 11 22 15 25 22 12 16 18 29 31 ; 0 0 0 8 14 7 13 8 9 14 2 5 7 7 3 1 6 1 3 0 3 1 2 2 2 0 3 0 2 3 0 2 0 1 1 1 1 1 0 1 0 0 0 0 1 0 0 0 0 1 ; 0 0 0 0 0 0 0 1 0 1 0 0 2 1 3 2 3 1 5 2 5 1 0 4 1 7 4 3 7 4 5 5 6 7 9 10 4 6 5 12 5 13 5 9 8 10 10 14 15 23 ; 0 0 0 0 2 21 23 19 19 27 24 23 24 25 28 23 35 29 33 19 37 31 22 18 19 28 28 30 17 19 21 22 24 23 21 27 20 18 11 20 15 19 21 12 15 17 21 17 15 31 ; 0 0 29 26 27 30 18 33 27 14 18 15 10 13 7 14 7 4 8 9 7 3 6 1 3 2 6 3 4 1 3 2 2 2 2 2 2 0 2 0 2 0 3 1 0 2 2 1 1 1 ; 0 0 0 0 0 1 34 22 36 26 38 35 27 29 21 33 25 16 11 13 15 9 11 14 11 9 4 8 7 6 7 5 5 4 5 2 3 4 0 3 1 0 2 6 0 3 0 0 1 4 ; 0 0 0 13 17 19 26 40 21 25 34 25 28 23 28 23 24 17 24 21 16 19 18 20 16 13 14 22 10 12 18 14 17 10 9 9 11 11 8 8 12 8 6 9 5 10 6 5 11 13 ; 0 0 11 3 8 19 24 18 20 17 16 6 16 12 12 12 13 12 9 7 14 9 9 3 5 6 4 5 4 1 4 3 0 5 4 2 2 4 0 2 3 0 2 1 0 3 0 1 1 2 ; 0 0 0 0 0 8 12 13 19 16 16 18 10 16 15 8 9 14 6 7 7 14 18 9 9 6 12 9 4 7 6 11 5 4 5 3 10 8 12 10 7 3 6 8 7 2 4 2 5 12 ; 0 0 0 0 0 0 125 118 103 95 70 86 67 39 51 32 39 20 33 33 30 30 27 30 19 11 23 17 14 23 12 15 11 21 9 15 9 10 8 4 6 5 6 6 7 5 4 3 7 19 ; 0 0 0 15 14 19 31 23 24 15 21 15 15 7 7 6 7 5 7 6 5 8 5 3 2 6 4 6 4 1 6 4 5 3 0 4 2 0 5 4 0 6 5 1 1 3 2 5 5 4 ; 0 0 0 25 44 66 45 54 59 67 67 69 62 53 67 53 43 34 47 50 39 46 41 40 34 35 24 40 37 32 32 31 37 22 34 34 27 23 36 27 27 44 38 32 43 35 37 34 31 72 ; 0 0 0 0 0 7 6 6 4 4 3 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 2 6 4 11 12 8 23 15 11 14 15 9 19 11 9 9 19 9 3 10 16 7 12 3 7 12 1 5 9 6 13 6 4 6 2 2 4 5 4 3 1 3 7 11 6 ; 0 0 0 6 8 6 16 16 10 8 8 11 9 6 10 11 7 6 7 5 8 4 5 10 5 5 5 7 3 8 3 6 6 1 5 3 5 2 5 4 4 3 5 0 2 6 4 0 4 0 ; 0 0 0 0 0 68 33 86 92 80 100 74 84 75 87 54 57 48 46 33 37 26 27 37 21 21 19 18 19 9 16 16 13 12 6 8 5 4 7 9 8 10 6 7 5 4 2 3 9 14 ; 0 0 0 62 57 36 9 5 8 11 8 9 2 2 7 7 4 6 12 3 8 6 1 6 3 7 4 6 6 6 1 1 5 6 7 5 3 3 6 5 7 4 10 2 7 4 4 2 4 3 ; 0 0 12 5 16 12 9 12 4 6 6 8 5 2 9 4 4 10 5 3 4 3 2 3 5 0 3 1 4 2 1 0 2 2 2 0 1 2 2 0 1 1 1 2 0 2 0 2 0 1 ; 0 0 98 114 101 100 82 72 54 40 39 37 37 26 22 39 25 23 19 16 16 20 15 22 14 17 16 19 13 9 16 7 10 4 9 5 10 8 7 6 8 9 10 7 4 5 12 3 5 8 ; 0 0 119 138 147 125 87 56 28 26 14 17 10 10 7 9 3 1 4 4 4 5 3 0 1 3 0 2 2 4 3 1 1 3 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 1 107 44 95 65 87 80 77 61 53 54 47 43 36 38 25 27 28 20 28 16 18 22 10 11 18 19 12 10 10 9 13 5 3 10 11 9 8 4 6 4 5 3 9 10 ; 0 0 0 0 0 23 27 24 12 10 12 14 26 11 22 11 20 13 15 16 21 22 13 15 23 21 10 21 19 22 12 19 22 16 13 13 14 22 20 21 24 15 11 17 17 17 17 23 23 48 ; 0 0 0 134 105 113 113 90 73 55 38 41 34 29 35 20 28 19 25 30 29 12 25 14 22 19 16 18 13 17 15 16 10 12 10 5 10 2 4 9 4 4 6 8 4 6 2 7 6 4 ; 0 0 0 0 68 30 81 65 85 75 58 52 63 62 50 48 34 41 38 34 19 27 19 24 23 18 10 14 9 12 10 16 9 10 10 4 6 8 7 4 5 0 6 6 5 4 2 4 5 12 ; 0 0 0 35 51 86 108 102 72 69 72 51 60 63 64 58 62 58 41 56 43 51 54 59 43 45 43 48 53 34 56 54 42 45 54 53 54 47 62 54 42 60 71 71 66 51 60 59 59 119 ; 0 0 0 0 75 41 65 82 80 76 69 58 65 57 53 47 29 35 31 30 27 25 19 12 15 16 17 12 15 12 13 11 9 8 11 9 9 7 4 8 5 5 1 4 8 7 5 7 2 7 ; 0 0 107 138 153 114 84 47 38 28 20 12 11 6 8 9 5 4 4 3 4 3 4 0 2 1 1 3 2 1 2 1 1 1 1 1 0 0 1 2 1 1 2 1 0 0 0 0 1 0 ; 0 0 0 28 59 65 80 67 60 62 57 56 46 43 51 28 23 22 21 13 24 25 26 17 15 17 19 18 15 13 13 10 13 14 14 18 11 15 14 11 14 13 11 10 7 7 10 12 6 12 ; 0 0 0 0 7 3 12 8 10 4 7 11 12 6 8 6 6 7 6 7 3 4 7 11 7 7 6 6 4 5 4 6 3 2 10 4 7 3 2 1 5 3 6 7 9 4 5 9 3 12 ; 0 0 0 29 23 20 25 10 12 11 9 7 5 8 5 7 6 5 5 5 6 8 7 3 4 4 1 2 6 4 4 6 3 8 5 5 3 2 4 4 4 7 5 3 5 3 3 3 4 3 ; 0 0 0 9 13 14 15 18 15 11 18 9 9 9 5 10 16 7 8 11 4 7 5 12 8 17 15 8 4 10 7 19 11 15 9 2 18 11 7 15 14 15 10 24 7 17 10 13 14 22 ; 0 0 110 98 108 84 71 69 44 45 31 50 33 35 28 30 31 21 26 22 19 16 18 22 10 15 12 13 17 9 15 11 11 15 11 3 7 4 7 8 9 7 5 1 10 7 9 4 5 6 ; 0 0 0 0 0 4 93 51 89 94 94 74 75 70 58 89 62 61 33 31 33 30 22 24 20 13 13 21 10 12 9 4 16 8 7 3 15 3 7 9 4 2 9 6 9 4 3 6 9 10 ; 0 0 0 6 8 9 17 20 17 23 21 18 16 11 6 13 13 10 5 4 4 10 3 3 9 3 4 4 5 1 1 5 5 0 3 3 4 3 4 3 2 2 4 3 1 3 4 0 1 2 ; 0 0 0 0 61 44 30 32 32 23 19 19 18 13 12 16 11 8 6 13 15 8 10 6 10 7 5 12 2 8 6 6 8 4 2 3 2 3 1 3 1 6 0 1 1 0 1 1 1 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 5 3 3 1 5 10 6 7 3 8 4 9 12 9 10 10 6 13 8 8 14 17 12 17 16 16 15 17 16 14 10 16 23 33 ; 0 0 0 38 40 63 61 55 46 31 30 20 30 21 28 21 33 19 20 20 16 21 22 28 21 25 21 18 23 17 21 25 23 25 32 29 25 33 27 26 27 28 38 34 43 37 27 27 32 66 ; 0 0 0 0 0 0 1 0 4 5 9 4 6 5 14 6 9 11 16 8 21 16 21 17 21 10 23 19 21 15 15 12 25 20 22 16 20 32 30 31 29 27 24 29 29 28 24 30 30 63 ; 0 0 0 0 0 9 13 20 34 35 39 46 44 49 36 50 56 31 33 37 31 32 32 27 22 19 26 10 12 22 20 15 13 15 15 11 18 24 12 13 14 12 16 17 13 11 8 10 11 22 ; 0 0 0 0 0 56 37 13 23 16 22 5 15 5 7 12 9 6 9 8 4 4 10 11 5 8 8 12 8 8 4 13 8 6 4 12 4 7 7 8 8 6 8 9 12 7 16 3 7 21 ; 0 0 0 4 2 10 17 20 19 16 20 16 19 12 21 21 21 20 20 22 27 18 22 19 17 14 22 14 21 16 12 29 14 16 19 16 24 19 20 19 13 18 21 20 23 15 15 16 31 41 ; 0 0 12 1 8 18 8 13 11 5 7 4 7 3 6 4 2 2 3 3 3 2 1 3 5 0 1 0 1 2 1 0 0 1 1 0 0 1 0 0 0 1 1 1 1 1 0 0 0 1 ; 0 0 0 0 41 49 45 43 34 35 32 32 26 26 27 34 25 24 22 20 22 15 15 28 23 23 21 18 19 16 15 25 14 11 18 18 13 10 13 9 13 9 16 11 12 14 13 15 9 29 ; 0 0 0 0 0 1 0 1 1 5 4 3 2 3 4 3 0 3 6 0 3 4 3 0 3 0 2 1 1 2 2 1 0 0 0 1 1 1 1 0 1 4 1 0 0 2 0 0 1 0 ; 0 0 0 0 0 0 1 1 4 0 5 6 4 6 8 7 14 11 8 8 5 10 13 18 10 13 13 17 16 14 11 15 21 9 9 16 13 23 14 15 8 16 17 14 17 17 15 17 18 31 ; 0 0 0 0 0 0 0 0 0 0 2 0 0 1 4 2 5 3 3 8 5 4 8 8 7 6 2 7 18 8 10 8 14 15 10 18 15 20 10 9 18 16 18 29 14 20 28 22 20 34 ; 0 0 104 122 143 111 74 46 34 20 15 18 7 9 5 6 6 5 7 7 2 1 1 0 1 2 0 1 1 0 0 1 4 2 4 0 0 0 0 1 0 1 0 2 0 0 0 0 1 1 ; 0 0 0 0 100 3 59 275 33 61 36 12 18 11 13 7 10 18 17 10 16 16 10 13 11 10 20 17 9 11 18 13 13 10 13 12 7 8 12 9 6 12 4 4 6 2 5 7 9 12 ; 0 0 4 10 4 10 10 16 6 14 4 8 6 2 3 4 4 2 4 2 0 1 2 2 0 1 2 2 0 2 0 0 1 1 0 0 0 2 1 1 0 0 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 24 14 29 6 13 8 11 5 0 5 2 2 0 2 0 0 1 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 15 8 8 14 5 14 8 4 8 3 3 4 2 1 3 2 4 5 0 1 2 1 0 1 0 0 0 1 0 0 0 2 2 0 1 0 1 1 0 0 1 0 0 0 0 0 0 1 ; 0 0 0 7 8 14 11 21 26 31 32 34 49 55 54 61 52 52 48 55 68 59 56 58 84 84 101 89 101 120 94 118 116 107 109 115 131 131 99 147 133 108 109 130 116 125 103 132 148 271 ; 0 0 43 36 58 75 61 55 61 52 60 55 55 34 31 37 24 24 22 30 22 22 22 26 18 17 18 18 18 23 9 12 10 10 9 6 13 15 16 3 9 9 6 9 7 13 11 9 12 23 ; 0 0 0 0 0 0 5 4 5 13 17 12 10 15 10 9 15 18 9 17 16 15 15 22 15 12 17 24 26 20 19 21 18 15 15 14 19 25 10 21 11 16 24 19 19 16 20 23 23 33 ; 0 0 0 4 4 11 14 12 11 18 18 14 13 16 26 16 22 6 12 17 14 10 19 16 13 11 20 11 20 14 10 18 20 20 14 10 22 15 10 16 13 17 15 19 13 22 17 19 29 33 ; 0 0 7 10 8 14 6 9 8 4 0 12 4 5 4 2 5 3 0 3 2 0 0 0 4 0 2 0 1 2 0 4 0 4 0 0 1 2 1 0 1 0 1 0 0 1 1 0 1 0 ; 0 0 12 7 14 7 7 5 6 8 3 3 4 3 1 1 1 1 0 1 1 0 4 0 1 1 1 0 0 3 1 0 1 0 3 1 0 1 0 1 0 0 0 0 0 0 2 0 0 0 ; 0 0 0 4 9 11 9 14 16 33 35 48 47 54 64 46 64 67 66 74 109 96 87 106 110 106 103 122 122 123 156 141 138 143 164 153 185 182 159 167 165 187 201 184 175 197 209 196 206 413 ; 0 0 0 0 0 1 26 15 33 27 32 27 21 30 21 20 24 19 13 16 16 10 8 9 7 7 10 2 5 6 3 7 4 3 1 1 2 2 2 5 2 1 0 1 1 1 0 3 1 2 ; 0 0 0 49 46 22 7 10 10 16 11 8 15 3 7 8 11 6 4 7 6 4 4 7 9 7 6 6 2 3 3 0 9 2 4 4 5 2 1 9 8 7 7 7 5 2 5 13 11 18 ; 0 0 0 0 0 0 8 0 1 3 4 9 3 6 4 8 3 8 3 2 2 4 1 3 1 0 2 1 0 3 3 3 3 4 1 2 0 0 3 3 0 1 1 0 3 0 2 1 0 5 ; 0 0 0 23 52 84 75 70 39 34 25 19 24 28 25 30 25 30 25 16 19 28 24 23 21 13 19 16 9 10 19 19 25 18 21 16 15 23 16 22 17 24 25 21 25 19 12 23 26 44 ; 0 0 0 0 0 0 0 0 0 0 0 1 1 2 3 3 0 2 6 8 6 1 5 9 6 8 3 6 17 10 8 12 14 13 11 14 13 21 14 9 17 14 17 17 16 18 13 18 21 34 ; 0 0 0 0 0 3 38 26 48 36 26 27 33 28 13 16 21 21 14 20 6 9 8 7 10 4 7 8 7 5 3 6 4 2 1 2 2 3 3 5 5 0 3 1 1 0 4 2 1 2 ; 0 0 0 20 9 31 16 19 11 10 6 8 7 8 3 2 2 1 1 4 5 4 2 7 3 3 2 6 5 9 5 2 4 4 2 3 2 4 5 0 5 4 4 2 3 1 2 0 1 5 ; 0 0 0 1 1 3 3 7 4 8 3 10 8 4 8 5 2 4 4 7 9 5 9 5 8 10 6 9 9 4 5 3 6 2 8 6 4 6 5 6 3 1 3 4 5 3 8 6 6 13 ; 0 0 0 0 0 1 4 7 11 10 22 11 16 10 20 11 9 17 15 13 9 8 10 8 21 18 19 13 17 14 15 8 10 8 16 15 15 9 16 15 19 18 15 11 18 16 10 14 16 28 ; 0 0 0 55 53 29 22 9 12 10 6 9 9 5 8 6 6 9 7 5 7 8 9 9 4 2 5 5 2 4 11 6 5 5 4 6 7 4 4 5 10 6 3 10 2 7 2 9 6 13 ; 0 0 6 7 15 9 23 24 24 17 16 25 14 17 15 17 9 10 10 10 5 4 9 5 5 5 6 3 4 3 2 6 6 4 3 0 0 2 2 1 0 2 1 1 2 1 2 0 2 2 ; 0 0 0 102 5 53 314 24 66 28 22 10 9 7 9 5 12 15 16 8 19 6 5 15 17 11 13 12 7 15 11 13 16 14 12 11 7 13 9 12 9 10 9 9 5 6 13 5 8 18 ; 0 0 0 17 25 18 11 5 10 6 7 17 10 11 9 6 11 17 17 19 16 10 14 13 16 16 16 17 17 15 23 24 21 26 16 25 26 24 18 26 31 30 38 41 32 41 44 44 36 85 ; 0 0 0 0 45 52 29 30 40 26 14 21 15 8 17 14 15 11 12 11 11 7 10 8 14 9 6 10 4 7 4 3 2 1 4 2 2 1 3 3 2 4 1 5 1 1 1 2 3 1 ; 0 0 0 57 45 25 17 9 9 5 8 5 10 6 9 8 9 9 8 14 3 5 4 5 4 4 6 1 2 6 3 1 5 2 4 7 6 9 3 4 2 3 3 1 2 2 8 2 3 10 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 6 0 3 7 6 6 10 6 8 6 7 7 2 11 4 9 12 16 12 12 14 10 13 10 14 12 13 8 20 17 22 15 18 46 ; 0 0 0 0 1 1 3 3 2 7 5 3 6 6 3 5 2 4 1 9 6 6 6 6 7 6 5 6 2 6 8 5 7 12 5 5 4 1 5 4 10 5 3 3 2 7 5 4 4 14 ; 0 0 0 0 0 8 10 15 15 11 8 11 11 4 6 3 5 10 7 9 8 7 7 3 5 3 3 3 8 5 5 3 8 7 2 4 0 2 10 5 4 3 5 2 8 4 6 7 3 11 ; 0 0 0 0 0 0 1 0 1 2 2 4 3 1 5 3 5 6 4 1 3 1 3 6 5 6 5 2 4 1 2 2 3 3 2 3 2 2 1 1 0 0 0 0 0 0 0 1 0 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 3 0 0 1 0 0 3 0 2 0 1 2 5 1 2 1 2 3 3 4 6 4 5 8 17 ; 0 0 0 1 6 5 13 14 12 11 16 16 10 17 14 16 15 21 13 19 23 22 30 25 26 29 18 19 34 30 27 30 29 25 29 39 33 34 33 31 30 33 35 43 38 38 40 57 45 84 ; 0 0 0 3 5 12 16 20 22 19 30 24 30 24 31 24 39 29 31 32 31 33 42 44 41 31 36 26 36 27 43 28 32 20 36 36 41 43 37 22 26 32 37 36 35 32 33 38 42 77 ; 0 0 0 0 0 0 1 1 4 3 5 16 9 15 11 11 13 25 26 29 34 34 35 41 36 34 33 45 48 36 41 43 39 47 60 58 60 54 43 47 51 62 55 55 62 50 59 74 61 145 ; 0 0 0 0 0 0 10 8 4 7 8 13 13 20 28 12 24 18 13 14 9 8 11 14 7 11 10 12 9 15 7 8 11 2 6 12 7 2 5 6 3 7 3 6 7 4 7 5 4 11 ; 0 0 0 0 0 0 4 3 4 3 8 3 2 3 6 9 5 5 5 1 3 1 2 2 1 1 3 6 3 0 1 3 2 2 1 3 1 0 2 1 2 1 3 0 0 3 0 1 0 2 ; 0 0 0 24 50 34 40 32 36 47 27 31 25 20 20 15 23 25 14 19 23 18 24 21 23 17 22 29 16 12 23 21 20 19 25 31 18 28 16 27 40 28 27 16 31 30 33 38 33 64 ; 0 0 0 30 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 13 0 17 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 3 0 15 1 10 4 4 3 13 3 10 6 2 3 0 4 0 2 1 2 0 0 1 0 1 2 0 1 0 0 3 0 1 1 0 0 0 1 1 0 1 0 0 0 0 2 0 ; 0 0 0 7 9 5 16 11 16 27 33 36 50 55 34 51 60 68 56 62 64 76 63 75 91 68 67 90 76 104 82 99 89 123 111 99 103 121 132 118 118 127 118 150 120 127 121 124 128 270 ; 0 0 0 0 0 3 1 1 1 4 3 3 1 3 0 2 0 0 0 0 2 0 1 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 10 6 11 16 10 4 3 6 3 5 5 3 7 12 4 9 4 6 11 10 9 13 5 11 7 14 10 12 12 10 10 8 8 16 10 13 8 16 18 16 17 11 15 17 16 18 40 ; 0 0 0 11 1 4 8 11 10 8 20 9 17 13 17 13 15 13 8 7 7 15 12 12 10 12 11 6 11 11 17 11 16 9 13 8 12 13 9 8 12 16 12 9 13 12 16 13 9 28 ; 0 0 0 77 0 84 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 22 24 34 36 39 30 29 23 29 32 23 30 22 28 24 14 21 17 10 10 11 7 8 13 9 11 3 4 5 5 4 4 8 4 3 2 5 1 3 2 5 3 4 2 1 4 5 7 ; 0 0 0 3 2 5 4 6 7 6 6 3 3 10 5 6 8 8 7 10 10 7 3 4 6 9 3 6 8 5 8 6 4 4 4 3 9 2 4 10 4 5 2 3 7 4 3 4 4 8 ; 0 0 0 6 7 9 17 9 11 6 5 11 13 5 15 13 13 10 14 15 9 17 10 14 8 10 11 19 23 12 15 12 14 12 14 10 15 14 15 10 12 15 19 16 10 19 14 19 16 39 ; 0 0 0 0 0 0 3 4 3 6 10 5 6 7 5 3 6 1 6 3 4 2 1 1 0 3 2 0 2 0 0 1 1 2 0 0 2 3 0 2 1 0 2 1 1 0 1 0 1 0 ; 0 0 0 0 0 1 0 1 2 2 1 1 0 2 0 1 0 1 2 3 3 5 0 2 0 2 2 0 5 2 1 5 4 4 2 3 2 6 2 1 2 1 3 4 5 1 1 1 1 12 ; 0 0 0 3 0 0 0 3 3 4 1 5 4 4 0 5 3 4 2 2 0 1 2 2 3 7 3 5 3 1 4 3 5 0 3 2 4 0 3 4 0 1 2 2 0 3 0 4 2 4 ; 0 0 0 0 1 2 2 5 6 3 7 5 9 2 5 6 3 6 1 5 8 5 5 10 8 9 19 6 6 4 11 13 7 10 14 10 12 10 8 6 9 9 12 16 9 11 9 9 17 27 ; 0 0 0 0 0 7 7 28 23 28 23 19 17 22 18 25 28 23 10 27 19 21 13 10 15 19 19 17 18 23 25 9 16 13 13 16 16 14 20 17 16 15 8 12 17 12 16 15 15 39 ; 0 0 0 3 4 5 3 3 1 2 2 2 2 3 3 1 0 2 3 3 0 1 1 2 0 2 0 1 0 2 0 0 1 1 0 0 0 1 0 0 1 0 0 2 0 0 0 1 1 1 ; 0 0 0 0 0 2 2 3 11 9 19 8 15 12 7 9 7 11 6 5 0 2 3 1 4 2 0 2 1 0 1 0 1 0 0 0 4 1 1 0 1 4 0 0 0 0 1 0 1 0 ; 0 0 0 0 0 2 27 18 49 30 37 29 35 23 22 23 20 16 20 9 10 14 7 7 12 4 3 5 9 4 5 9 6 3 3 3 2 1 3 8 3 1 2 4 2 4 0 0 2 3 ; 0 0 0 0 0 0 0 0 0 0 1 0 2 2 4 1 3 2 5 8 4 12 5 5 7 10 7 8 12 9 16 15 10 11 17 15 12 19 20 14 19 12 15 20 23 14 19 15 25 59 ; 0 0 0 0 0 0 11 4 19 11 15 15 15 8 13 8 4 7 6 5 6 5 3 1 1 2 3 5 3 3 2 6 0 2 4 6 1 0 2 2 1 0 0 1 0 1 0 0 1 0 ; 0 0 0 36 90 50 50 25 23 21 27 11 8 14 24 20 12 8 12 15 14 7 10 6 11 11 5 7 6 3 3 8 5 4 7 7 4 7 10 5 7 6 7 11 7 6 5 2 4 15 ; 0 0 0 0 0 12 4 7 9 3 3 2 4 2 0 2 0 0 0 1 0 2 0 0 0 1 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 4 4 9 10 7 7 6 4 3 4 5 2 0 1 4 3 2 1 3 1 2 1 1 2 0 2 1 0 1 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 1 1 0 0 3 0 1 2 2 0 1 0 0 0 2 2 2 0 0 1 1 0 2 2 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 1 1 5 4 1 3 3 5 5 7 7 7 9 4 11 7 7 10 7 12 13 10 13 8 10 22 16 13 11 20 10 13 13 17 13 18 13 17 7 20 12 17 17 ; 0 0 0 0 0 0 1 0 2 1 0 1 3 4 4 4 3 5 4 6 16 6 7 8 5 10 11 14 10 7 14 16 10 12 15 15 18 13 7 14 14 13 22 17 21 9 18 17 14 42 ; 0 0 0 0 10 4 11 11 16 18 9 16 17 9 19 19 17 16 20 20 12 21 19 12 16 14 16 17 19 15 13 30 13 21 13 13 17 19 16 15 20 15 17 16 12 17 13 15 15 33 ; 0 0 0 14 45 23 14 13 10 7 11 8 11 4 8 7 8 6 11 5 3 6 7 6 4 9 7 3 8 4 8 5 3 5 7 6 7 3 4 6 5 7 7 11 6 1 4 4 4 11 ; 0 0 0 0 0 0 1 0 2 4 2 5 6 10 9 5 11 8 9 6 10 5 4 8 7 9 9 5 17 4 9 8 11 5 12 10 8 8 6 12 11 10 9 10 3 14 7 18 10 24 ; 0 0 0 0 0 0 1 0 1 2 0 0 2 0 0 2 0 2 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 1 0 0 2 0 3 2 3 0 0 2 2 1 0 1 0 1 1 3 1 1 2 0 0 0 0 0 0 0 0 1 1 0 1 1 0 1 1 0 0 0 1 0 0 ; 0 0 0 0 0 3 2 3 5 6 3 2 5 3 2 6 3 2 6 1 1 0 0 2 0 3 0 0 1 3 0 1 1 0 1 2 0 2 0 0 0 1 0 0 1 1 0 1 1 0 ; 0 0 0 1 1 4 0 0 2 2 4 3 4 3 4 6 7 3 12 5 6 4 7 5 12 6 5 8 3 9 10 11 15 6 10 17 9 14 9 17 24 18 17 12 28 16 18 22 27 43 ; 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 1 1 1 3 4 7 4 9 16 18 23 28 32 25 37 26 24 39 31 39 33 41 33 49 35 45 36 57 53 51 47 52 49 63 53 61 52 49 50 81 75 72 59 61 63 72 137 ; 0 0 0 0 0 0 0 0 3 0 1 0 2 3 1 5 1 1 2 1 1 0 0 2 0 2 2 0 0 0 0 1 0 1 0 1 0 2 0 1 0 0 0 0 0 0 2 0 1 0 ; 0 0 0 0 1 0 2 3 1 2 5 1 5 3 7 2 5 0 7 3 2 2 4 7 6 10 6 4 9 3 7 5 7 5 5 2 6 4 8 5 8 4 7 9 3 4 12 6 9 24 ; 0 0 0 0 0 0 3 0 0 1 2 4 3 4 4 2 7 5 5 3 4 3 2 4 3 8 3 3 3 2 0 1 2 4 2 2 4 3 3 2 0 1 2 3 2 0 0 1 1 1 ; 0 0 0 2 5 7 9 20 10 34 28 29 33 37 38 47 59 45 59 65 72 66 66 66 80 78 74 67 83 82 102 99 100 106 89 105 119 108 133 124 128 132 135 160 142 170 157 150 189 356 ; 0 0 0 0 0 25 49 59 38 24 18 3 3 4 1 4 5 2 1 0 1 2 2 3 2 2 2 0 2 2 2 0 2 1 0 2 0 2 1 0 0 0 2 0 1 0 0 2 0 0 ; 0 0 0 0 0 1 0 1 0 0 1 0 1 1 2 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 14 5 15 7 5 4 3 9 2 4 1 1 3 4 1 0 0 0 3 1 1 0 1 2 1 1 0 0 0 2 0 0 1 1 0 1 0 0 1 0 1 0 0 ; 0 0 0 0 0 0 0 21 8 23 15 10 9 9 6 4 3 3 0 3 3 1 1 4 1 0 2 2 1 2 2 1 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 0 ; 0 0 0 0 0 1 1 2 1 1 2 2 2 2 2 5 2 1 3 2 4 5 1 0 2 3 2 1 4 3 5 6 7 3 3 2 0 3 6 3 8 6 0 5 3 3 3 2 5 16 ; 0 0 0 0 0 0 0 12 10 11 11 12 4 4 3 3 2 1 3 1 1 2 1 2 0 0 0 1 0 2 4 1 0 0 1 0 1 0 2 2 1 1 1 1 0 0 0 1 2 1 ; 0 0 0 0 0 0 0 15 12 15 10 9 5 1 3 2 2 1 4 2 0 2 1 3 0 1 2 0 2 2 3 0 1 1 1 0 0 1 1 0 0 0 0 0 0 0 0 1 0 1 ; 0 0 0 0 0 0 0 12 8 19 15 9 9 5 4 6 2 3 2 3 3 1 3 0 1 1 0 3 0 1 2 2 0 0 0 1 0 0 1 0 0 2 0 0 0 1 0 0 1 0 ; 0 0 0 0 0 0 0 13 23 13 6 7 2 4 3 3 3 3 2 1 1 0 0 1 3 2 1 0 2 3 2 4 2 1 3 0 0 0 1 0 0 0 2 0 0 0 0 1 0 0 ; 0 0 0 0 0 145 46 10 11 4 12 12 10 3 3 5 2 0 4 0 2 4 8 6 5 1 2 2 2 0 6 5 4 1 5 2 4 9 3 3 3 4 3 1 9 4 7 12 6 16 ; 0 0 0 1 10 16 19 28 29 35 23 61 40 49 42 30 51 30 43 22 34 42 43 48 45 40 48 48 50 42 51 58 52 75 47 75 56 64 45 51 68 66 63 64 85 85 66 77 96 181 ; 0 0 0 0 0 0 0 16 10 10 17 10 8 5 8 4 1 3 4 0 3 3 0 1 2 2 2 1 0 1 1 1 1 1 0 1 0 0 0 0 0 1 1 0 0 1 0 1 0 0 ; 0 0 0 0 0 0 0 12 9 15 16 10 6 2 7 6 0 2 2 1 6 2 1 1 3 2 3 1 0 0 3 2 1 0 0 0 1 1 0 1 1 0 1 0 1 0 0 0 0 2 ; 0 0 0 15 7 11 25 15 14 19 17 16 21 16 23 14 13 18 19 24 30 26 22 24 25 24 32 28 24 29 23 27 25 28 23 21 32 26 29 31 29 28 27 31 33 30 28 31 38 56 ; 0 0 0 27 17 7 13 3 7 11 10 11 13 15 10 12 12 15 10 10 14 5 8 20 18 12 11 15 11 15 13 7 15 9 13 12 16 13 14 18 13 10 13 10 5 10 15 14 15 24 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 1 3 1 1 0 0 1 4 1 1 5 1 0 6 3 3 4 4 5 3 3 1 5 5 5 5 8 5 7 9 ; 0 0 0 0 0 0 0 0 3 0 1 1 4 0 2 4 3 0 2 1 1 0 2 5 2 5 2 3 5 3 0 3 4 5 5 5 6 2 2 2 3 2 4 3 4 6 8 9 6 18 ; 0 0 0 0 0 0 0 1 1 5 1 2 3 4 4 11 7 18 15 12 8 5 7 10 11 11 9 11 9 11 18 9 15 16 10 13 14 13 13 15 20 20 16 24 18 21 20 20 20 50 ; 0 0 0 0 0 0 0 2 0 2 2 2 2 4 1 3 5 4 3 3 2 1 4 2 5 3 4 2 4 2 6 5 5 8 3 4 5 2 5 3 4 3 4 5 6 4 2 4 6 9 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 0 1 2 6 7 10 5 5 0 7 6 14 7 9 11 13 8 20 5 12 9 17 10 13 10 13 14 20 18 13 19 9 25 ; 0 0 0 0 0 0 0 9 9 9 9 7 6 7 10 5 2 1 1 5 2 2 0 0 2 3 3 1 1 1 3 1 1 1 0 0 1 0 0 1 1 0 2 0 0 1 0 0 1 0 ; 0 0 0 13 7 13 8 18 11 6 10 2 6 8 6 5 9 1 5 3 2 5 1 4 1 3 5 8 2 4 3 2 4 5 1 4 1 2 2 1 2 0 1 2 2 0 0 0 1 0 ; 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 2 0 0 0 2 0 2 3 3 1 2 0 1 2 0 3 0 2 1 3 3 2 1 3 3 2 3 0 3 2 3 5 2 4 2 ; 0 0 0 0 0 0 1 0 1 1 6 1 2 1 2 3 5 5 2 4 2 6 2 1 3 0 7 3 10 6 5 7 7 6 1 8 8 10 7 8 4 3 12 7 5 8 10 8 8 14 ; 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 2 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 2 1 1 3 0 1 1 2 2 2 1 0 4 2 0 2 0 1 0 2 0 0 2 0 3 1 1 3 1 3 1 1 1 1 0 1 1 3 3 3 2 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 4 5 5 5 5 5 6 4 7 11 11 5 9 9 6 10 9 11 10 14 11 12 9 14 10 8 22 17 20 14 11 22 14 25 42 ; 0 0 0 56 45 31 25 14 12 7 7 4 5 6 8 11 6 4 9 2 8 5 4 0 4 2 3 3 2 8 1 4 6 4 4 0 3 1 3 0 1 1 0 2 2 1 3 1 3 5 ; 0 0 0 0 0 1 0 2 6 4 10 13 7 8 20 15 18 16 15 23 24 22 24 31 26 37 35 37 33 32 40 36 40 43 34 41 52 45 41 51 47 49 43 50 42 49 39 38 44 93 ; 0 0 0 27 14 14 19 16 9 15 12 12 9 12 15 10 14 18 10 7 12 10 13 10 11 20 13 22 10 14 16 9 19 22 16 27 20 20 28 25 25 22 29 21 16 31 19 28 24 66 ; 0 0 0 0 0 0 0 5 9 16 13 3 7 2 0 4 3 1 3 2 2 3 0 0 0 2 1 2 0 1 5 1 1 0 0 0 0 1 0 0 1 0 1 1 2 0 1 0 1 0 ; 0 0 0 0 4 1 2 3 2 5 6 10 2 3 3 8 3 1 4 3 5 7 6 4 7 4 9 10 3 4 5 4 2 4 5 3 3 2 4 6 9 6 9 8 5 5 13 9 5 33 ; 0 0 0 0 0 0 0 0 3 3 3 5 8 3 8 8 13 11 9 9 12 9 7 9 19 11 3 11 13 18 8 8 13 6 7 15 16 11 12 7 15 21 11 24 13 16 10 5 15 32 ; 0 0 0 0 0 0 0 0 0 2 6 0 7 0 3 4 1 3 0 0 0 0 1 1 1 0 0 1 0 0 1 2 0 0 0 0 0 0 1 0 1 0 0 0 1 0 1 0 1 0 ; 0 0 0 0 0 0 0 3 2 7 3 9 6 6 9 5 6 5 7 6 7 4 2 2 1 2 3 1 2 2 4 6 1 4 4 3 3 4 0 2 1 3 0 1 2 2 3 1 3 3 ; 0 0 0 0 0 0 5 6 3 8 5 6 3 1 7 2 2 5 0 0 1 1 0 3 0 1 2 0 1 1 0 2 1 0 1 1 0 0 0 0 0 1 0 1 1 0 1 0 0 0 ; 0 0 0 0 0 1 6 1 5 2 7 8 5 7 1 5 5 4 2 3 0 1 1 0 3 2 3 0 0 0 0 0 0 1 0 2 0 0 1 0 0 0 0 0 2 0 0 0 0 3 ; 0 0 0 0 0 0 3 8 10 17 15 14 9 13 12 5 12 9 11 20 12 8 11 9 13 17 7 5 9 3 10 5 10 5 6 5 12 7 4 9 7 11 9 9 6 5 8 7 6 11 ; 0 0 0 0 0 0 0 0 1 4 4 3 6 7 8 3 11 9 10 10 8 7 7 7 3 0 3 5 1 3 3 3 3 1 3 1 1 0 1 1 0 0 1 0 0 0 3 0 1 8 ; 0 0 0 0 10 7 11 7 10 15 17 12 11 7 6 7 7 5 6 5 10 9 8 8 7 5 11 5 5 2 7 7 8 6 7 4 15 3 3 8 6 2 5 6 2 9 10 5 10 14 ; 0 0 0 0 0 0 0 15 3 15 15 5 5 8 4 4 5 3 1 2 4 3 0 0 2 3 0 2 1 0 1 0 3 1 0 0 1 1 0 0 0 0 0 1 0 2 0 0 0 1 ; 0 0 0 0 0 2 2 3 1 1 3 3 1 2 3 1 1 4 0 4 6 3 1 0 3 1 1 4 5 2 1 2 4 3 2 1 1 2 1 0 0 2 0 2 1 0 1 2 0 1 ; 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 1 1 1 0 1 0 1 0 3 1 2 1 0 1 1 1 1 1 1 2 4 7 8 9 1 2 4 2 6 5 24 ; 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 1 ; 0 0 0 1 0 0 3 6 5 7 13 10 8 15 24 20 17 38 23 32 39 45 29 45 39 44 45 64 37 58 56 74 55 58 51 72 61 77 73 89 70 63 81 91 85 69 87 93 90 190 ; 0 0 0 0 0 0 1 0 2 2 2 1 1 1 4 3 0 3 4 1 2 3 2 0 1 2 0 1 0 2 2 0 0 1 1 3 0 4 1 1 1 1 0 2 0 1 0 1 0 0 ; 0 0 0 0 0 0 0 0 1 1 1 0 0 1 0 3 0 3 2 2 0 2 1 4 0 2 2 2 0 2 3 0 1 2 2 6 2 4 3 5 4 4 2 4 2 3 4 6 3 13 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 1 0 2 0 0 1 1 1 0 0 1 0 2 1 0 1 2 0 1 2 1 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 3 3 1 1 0 3 6 10 8 8 12 7 9 12 11 20 14 17 12 11 8 8 12 20 10 8 19 ; 0 0 0 24 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 1 2 13 9 11 6 6 10 5 5 7 7 9 6 5 9 7 8 13 12 7 13 9 13 8 12 11 8 10 7 7 11 18 7 11 14 15 9 9 17 17 12 11 17 15 22 26 ; 0 0 0 0 0 0 1 0 1 0 1 1 0 1 0 1 0 3 1 0 1 2 1 4 3 3 2 0 1 2 2 0 2 4 5 4 4 5 4 2 5 3 3 5 9 8 7 3 4 6 ; 0 0 0 11 22 20 4 2 8 5 4 7 4 3 5 3 6 5 5 3 6 8 6 2 3 3 5 2 3 3 3 2 10 4 6 3 4 8 5 4 8 9 3 12 2 4 4 8 6 23 ; 0 0 0 0 0 1 0 2 1 2 0 5 2 5 0 2 1 3 6 2 5 2 2 4 1 4 0 2 1 1 1 0 1 2 1 1 1 0 3 0 2 0 0 1 2 1 1 0 0 3 ; 0 0 0 0 0 0 0 1 0 0 1 1 2 2 6 2 3 0 4 1 1 1 8 3 4 2 1 2 5 4 3 5 4 1 1 4 1 3 5 0 2 3 2 1 2 2 1 1 3 6 ; 0 0 0 0 0 0 1 0 3 1 1 4 1 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 0 2 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 ; 0 0 4 5 6 2 3 3 2 2 5 5 3 2 2 4 4 0 1 2 0 0 0 1 1 4 2 0 0 0 1 1 0 0 0 1 1 0 0 1 1 0 0 0 0 0 0 1 0 1 ; 0 0 0 0 0 0 0 0 0 2 2 0 2 0 2 1 4 1 1 2 0 3 5 3 4 3 4 2 3 2 2 2 3 4 6 3 2 1 1 1 1 4 3 1 0 3 5 3 3 7 ; 0 0 0 0 0 4 3 3 9 5 12 7 10 9 5 7 8 4 3 3 3 7 3 0 2 7 1 4 5 1 5 2 2 0 1 3 0 1 1 1 2 2 3 1 1 1 0 0 0 4 ; 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 2 1 1 3 1 0 0 0 0 0 1 1 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 3 1 0 0 0 1 1 1 3 1 2 5 3 4 2 3 7 8 2 5 6 5 3 6 7 1 6 8 10 7 6 ; 0 0 0 0 0 0 0 1 1 2 0 1 1 0 1 0 0 1 0 1 0 0 0 0 1 0 1 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 2 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 ; 0 0 0 0 0 3 1 1 1 2 6 2 4 6 6 2 5 10 5 5 7 5 4 6 5 6 3 5 6 4 4 7 7 4 9 3 8 6 9 3 11 9 4 9 3 5 6 4 4 9 ; 0 0 0 0 0 0 0 0 0 1 1 0 0 1 2 1 0 0 0 0 0 0 0 1 1 0 1 3 0 0 2 0 3 0 1 1 1 1 0 2 0 1 2 0 0 0 0 0 0 3 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 1 2 0 1 0 0 0 1 1 0 0 1 1 3 1 3 1 3 0 2 2 2 2 2 3 3 4 2 1 1 0 0 1 3 4 0 3 ; 0 0 0 0 0 0 1 3 0 1 0 1 1 0 1 0 0 2 0 0 0 0 1 1 0 0 0 0 1 2 2 1 2 2 1 1 1 0 2 0 0 0 1 1 1 1 1 0 1 0 ; 0 0 0 0 0 0 14 9 18 9 19 7 8 14 15 9 8 10 7 5 8 5 6 2 0 4 2 3 4 0 1 4 0 0 1 1 1 0 0 1 0 2 1 1 2 2 0 0 1 1 ; 0 0 0 0 0 0 6 2 1 0 2 0 0 0 0 5 1 1 3 0 1 1 0 3 2 1 0 2 3 0 2 2 0 0 1 1 6 2 0 2 1 0 2 2 2 0 1 1 1 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 2 0 ; 0 0 0 0 0 1 1 1 4 7 11 5 13 12 11 9 7 8 4 4 3 3 0 1 4 4 1 1 1 2 0 1 0 2 2 0 0 0 1 1 1 0 2 1 1 0 1 2 0 1 ; 0 0 0 0 0 0 1 0 0 0 0 1 1 2 1 3 1 2 1 4 7 7 2 3 3 8 3 11 5 2 5 4 6 9 6 2 3 11 9 7 9 7 11 12 7 8 6 5 9 22 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 0 0 0 1 1 1 0 1 2 1 0 1 1 0 0 0 1 1 0 0 1 0 1 1 2 0 ; 0 0 0 0 0 1 0 1 4 1 1 1 0 1 2 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 ; 0 0 0 0 0 0 0 2 2 0 1 1 3 3 1 2 2 0 1 0 1 3 1 3 2 2 1 2 5 1 0 4 2 1 2 1 1 0 0 2 1 0 2 3 0 5 2 1 0 1 ; 0 0 0 0 0 0 1 0 0 1 0 1 0 1 0 1 1 0 4 1 1 1 5 0 7 2 3 6 3 3 4 4 5 5 1 2 4 3 5 3 8 10 7 7 4 10 3 7 5 20 ; 0 0 0 0 0 0 3 4 2 2 3 1 0 4 2 2 4 2 3 3 3 4 1 2 5 2 1 1 1 0 4 2 1 3 0 1 2 0 2 4 0 0 1 1 1 1 0 1 0 2 ; 0 0 0 0 0 35 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 1 1 2 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 1 0 0 0 1 0 2 0 1 0 0 1 0 0 1 0 3 2 1 1 0 0 0 0 2 0 1 1 2 2 1 2 2 1 0 3 0 3 0 2 3 2 ; 0 0 0 0 0 0 1 3 1 1 2 3 2 3 0 3 1 3 5 2 2 2 2 4 2 2 3 3 2 3 3 0 0 2 1 2 1 3 2 3 0 3 1 2 0 0 1 0 2 0 ; 0 0 0 0 0 0 0 7 13 12 8 7 7 6 5 3 5 2 1 0 2 0 1 0 1 3 2 0 1 1 1 3 1 0 0 3 0 0 0 1 2 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 3 0 2 2 2 3 1 3 4 6 1 6 4 7 2 5 4 8 6 6 6 7 3 2 1 3 6 4 9 3 2 4 3 5 4 16 ; 0 0 0 0 0 0 0 0 0 2 3 3 0 2 2 1 1 1 2 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 1 1 1 1 1 1 0 1 2 0 0 3 2 2 0 1 1 2 5 2 3 2 5 6 3 2 6 4 3 2 8 5 3 5 2 5 7 4 5 8 4 3 8 ; 0 0 0 0 0 0 0 0 0 1 0 2 0 1 5 5 3 4 5 2 3 6 3 4 0 3 3 1 1 1 4 3 2 2 1 3 4 1 3 2 2 3 3 4 2 4 2 1 1 10 ; 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 0 0 2 0 0 0 0 1 0 0 0 1 0 0 0 0 1 0 1 0 2 0 0 0 0 1 0 0 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 1 0 3 2 0 1 3 3 3 1 2 3 6 6 2 4 2 8 6 8 5 1 6 3 6 6 13 5 11 12 6 13 6 6 5 9 6 6 18 13 13 7 11 13 14 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 0 1 0 1 1 0 1 0 0 0 0 0 2 ; 0 0 0 0 0 0 0 0 0 2 0 1 1 1 1 1 2 0 0 2 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 1 3 1 3 3 3 2 2 2 3 4 0 6 6 2 3 0 6 7 7 4 10 3 8 3 7 11 5 4 6 5 4 1 7 9 9 4 7 9 7 5 5 8 5 4 20 ; 0 0 0 0 0 0 7 3 7 5 6 7 4 9 19 16 5 12 7 2 5 1 3 8 5 1 3 3 1 2 3 4 5 5 3 3 0 0 1 1 3 2 1 1 5 3 3 1 2 2 ; 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 ; 0 0 0 1 2 1 5 2 2 1 2 3 0 0 0 0 0 0 1 1 0 3 2 0 1 6 4 4 1 3 2 2 2 5 1 1 5 4 10 2 3 3 10 4 2 5 5 5 5 5 ; 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 1 0 0 0 2 1 3 0 5 2 4 0 3 5 3 2 1 4 2 5 6 1 2 2 2 4 4 4 3 5 4 4 18 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 ; 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 2 0 0 1 1 1 0 2 0 3 1 1 2 2 2 0 2 2 2 0 3 3 1 2 1 0 2 1 2 3 3 4 2 0 3 3 2 2 2 7 2 2 6 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 1 1 0 1 0 1 1 1 1 0 1 0 0 5 0 3 1 2 0 0 1 2 0 0 0 1 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 1 2 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 0 1 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 2 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 0 0 0 2 1 1 1 1 1 3 1 5 4 4 2 3 3 2 4 1 4 1 4 3 4 4 0 0 1 1 5 ; 0 0 0 0 0 0 0 0 0 0 0 0 3 1 0 4 4 5 4 1 2 3 6 3 1 2 2 2 1 2 1 2 1 0 1 4 1 1 2 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 2 0 0 3 1 1 3 2 0 0 0 0 3 0 2 1 0 3 2 0 0 1 2 1 2 0 1 1 2 0 0 0 2 2 2 1 2 1 4 3 4 ; 0 0 0 0 0 0 0 0 1 0 1 2 2 4 3 2 1 0 3 1 1 2 0 1 0 1 1 0 0 1 0 3 2 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 0 2 0 0 1 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 2 1 2 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 1 2 1 5 1 0 0 2 0 6 3 2 1 2 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 1 0 0 1 0 1 0 0 1 0 1 2 0 0 1 0 0 0 0 1 1 1 0 2 1 1 0 0 1 1 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 ; 0 0 0 0 0 3 0 5 3 3 0 1 0 1 2 1 1 1 0 0 1 2 1 0 0 0 1 0 0 0 1 0 0 1 0 1 0 1 1 1 1 0 0 0 1 1 0 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 2 0 0 0 1 2 1 2 0 0 0 1 0 0 2 1 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 1 0 4 4 2 3 5 3 1 3 6 2 0 5 3 2 5 5 1 3 8 1 0 1 1 1 2 3 0 0 1 2 1 1 0 0 0 1 0 0 1 ; 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 1 1 4 2 4 2 2 4 3 4 5 2 0 1 2 0 0 1 0 1 2 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 2 0 1 ; 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 2 0 2 0 2 1 3 1 3 2 0 1 2 1 0 0 1 0 1 3 1 1 5 1 4 0 0 1 1 0 2 0 1 1 3 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 1 0 0 2 0 1 0 1 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 1 0 0 0 1 0 0 0 0 0 1 0 0 0 1 2 1 1 1 1 2 0 1 1 0 1 2 2 1 1 2 1 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 2 1 2 1 0 1 0 0 0 2 0 1 0 1 1 0 1 1 0 ; 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 1 0 0 1 0 0 1 0 2 1 0 2 0 0 0 0 2 1 0 1 1 3 0 0 0 1 1 1 4 ; 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 1 2 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 ; 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 2 0 0 1 0 0 0 0 1 0 0 1 0 1 0 0 1 2 1 0 0 0 0 1 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 1 0 2 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 1 1 0 1 1 0 ; 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 1 1 0 1 1 0 0 0 0 0 0 1 1 1 1 0 0 0 1 2 3 0 1 1 0 1 2 2 0 0 0 1 1 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 1 0 0 0 0 0 2 2 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 1 0 1 0 1 0 1 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 1 0 2 0 1 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 1 0 1 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 ; 0 0 0 0 0 0 0 1 1 0 0 1 0 2 0 2 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 2 0 0 0 2 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 2 0 0 0 0 0 1 1 1 2 1 0 0 0 2 1 0 1 0 1 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 3 0 0 1 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 1 1 1 3 3 1 1 1 2 0 1 3 3 1 3 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 3 1 0 0 0 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 2 1 0 0 1 2 0 0 1 0 1 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 2 1 2 3 4 0 0 0 2 1 0 2 1 0 2 1 0 3 0 4 0 5 2 4 1 2 1 2 1 4 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 1 3 0 1 0 0 1 0 0 2 0 0 2 3 1 0 0 0 0 1 0 0 1 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 1 1 2 1 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 2 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 1 0 1 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 0 0 1 0 1 2 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 1 0 0 0 0 2 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 2 4 0 1 1 0 1 0 4 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0 0 0 1 0 1 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 0 0 0 0 0 0 1 2 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 1 0 0 0 0 1 0 0 1 1 0 0 3 0 1 0 1 0 2 0 0 0 0 0 1 5 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 1 0 0 0 0 1 0 0 1 1 0 0 3 0 0 0 1 0 1 0 0 0 0 0 1 5 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 1 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 1 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 1 0 3 1 1 0 2 0 0 0 0 1 0 0 0 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1 1 1 3 2 3 1 2 1 3 2 5 3 3 2 2 6 6 3 2 4 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 0 0 0 1 0 3 0 0 0 1 0 3 0 0 0 1 0 1 0 0 0 0 1 1 0 1 1 1 0 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; ];