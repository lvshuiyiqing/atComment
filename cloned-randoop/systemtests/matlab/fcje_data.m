fcje.s = [ 0 14934 15863 22775 27737 30902 31774 31539 29944 28519 27289 26380 26624 26306 25764 25723 26169 26145 26015 26146 25879 26623 27282 28810 28970 29693 30236 30947 31165 31614 32444 33192 33838 34663 35170 36357 37760 39099 40221 40877 41833 42956 44462 45538 47266 48912 50243 51916 54234 109980 ];
fcje.gt = [ 0 32063193036 12806468481 4832159028 4278042733 4763608809 3273057374 4594198133 4925883204 3490525262 6347919799 4355308291 3703143108 18313332056 12221876790 2303709693 13928343307 37443404407 3023417296 4048158672 2231692951 8628960494 2564707749 2431836375 2931260958 2735383124 3074393144 2887845473 2860790979 3740765166 2937295418 3820314199 4204738983 3494311574 3368504250 3595902867 4548787753 4491047700 4108355882 4405469653 4790923328 5524485207 4915771930 5768575774 5514307730 5713001644 12143767576 8455703296 6052520761 12241554218 ];
fcje.et = [ 0 59289129274 83233936853 76930177822 84917332625 71435129182 92173421268 77359703780 95539556608 150082433097 134527524192 175490229445 214779827355 218338359785 220017144515 242112264792 255265410099 274584374336 252567745864 252740621424 322759288003 356588120256 392103708566 355739686404 379835031896 404056970749 507259100731 484068456240 452544184573 570043129075 567397745009 610688594304 667266898955 676505710570 708414352675 701303831777 714951508709 744621599394 767034462136 767994128406 887187130900 852233667111 936959516906 976752279134 1045034910016 1099642968215 1095634751097 1221260356799 1357183374249 3047262996639 ];
fcje.n = { 'StatementThrowsNPE/org.apache.commons.jelly.XMLOutput.startElement(java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.XMLOutput.startDocument()' 'StatementThrowsNPE/org.apache.commons.jelly.XMLOutput.objectData(java.lang.Object)' 'StatementThrowsNPE/org.apache.commons.jelly.impl.DynamicTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.impl.TextScript.trimStartWhitespace()' 'StatementThrowsNPE/org.apache.commons.jelly.TagSupport.invokeBody(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.XMLOutput.writeCDATA(java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.ThreadTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.TagSupport.getBody()' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.ChooseTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.XMLOutput.characters([C,int,int)' 'StatementThrowsNPE/org.apache.commons.jelly.XMLOutput.endPrefixMapping(java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.MuteTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.impl.Embedded.execute()' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.ScopeTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.WhitespaceTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.impl.ExpressionScript.run(org.apache.commons.jelly.JellyContext,org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.NewTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.XMLOutput.ignorableWhitespace([C,int,int)' 'StatementThrowsNPE/org.apache.commons.jelly.XMLOutput.endElement(java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.ExprTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.ForEachTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.XMLOutput.processingInstruction(java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.UseBeanTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.util.SafeContentHandler.skippedEntity(java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.util.SafeContentHandler.startDocument()' 'StatementThrowsNPE/org.apache.commons.jelly.XMLOutput.endDocument()' 'StatementThrowsNPE/org.apache.commons.jelly.util.SafeContentHandler.characters([C,int,int)' 'StatementThrowsNPE/org.apache.commons.jelly.impl.StaticTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.util.SafeContentHandler.ignorableWhitespace([C,int,int)' 'StatementThrowsNPE/org.apache.commons.jelly.XMLOutput.startPrefixMapping(java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.XMLOutput.write(java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.XMLOutput.endElement(java.lang.String,java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.ArgTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.util.SafeContentHandler.endDocument()' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.SwitchTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.SetTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.JellyTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.impl.TextScript.trimEndWhitespace()' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.InvokeStaticTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.util.SafeContentHandler.startPrefixMapping(java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.XMLOutput.skippedEntity(java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.expression.xpath.XPathExpression.getVariableValue(java.lang.String,java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.CatchTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.BreakTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.expression.xpath.XPathExpression.evaluate(org.apache.commons.jelly.JellyContext)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.IncludeTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.RemoveTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.ParseTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.ImportTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.IfTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.impl.TextScript.trimWhitespace()' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.FileTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.impl.TextScript.run(org.apache.commons.jelly.JellyContext,org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.util.SafeContentHandler.endElement(java.lang.String,java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.UseListTag.addItem(java.lang.Object)' 'StatementThrowsNPE/org.apache.commons.jelly.expression.ExpressionSupport.evaluateAsBoolean(org.apache.commons.jelly.JellyContext)' 'StatementThrowsNPE/org.apache.commons.jelly.util.SafeContentHandler.endPrefixMapping(java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.util.TagUtils.trimScript(org.apache.commons.jelly.Script)' 'StatementThrowsNPE/org.apache.commons.jelly.util.SafeContentHandler.processingInstruction(java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.impl.StaticTagScript.run(org.apache.commons.jelly.JellyContext,org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.impl.TagScript.run(org.apache.commons.jelly.JellyContext,org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.InvokeTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.impl.TagScript.getTag(org.apache.commons.jelly.JellyContext)' 'StatementThrowsNPE/org.apache.commons.jelly.expression.CompositeExpression.evaluateAsString(org.apache.commons.jelly.JellyContext)' 'StatementThrowsNPE/org.apache.commons.jelly.expression.ExpressionSupport.evaluateAsIterator(org.apache.commons.jelly.JellyContext)' 'StatementThrowsNPE/org.apache.commons.jelly.expression.ExpressionSupport.evaluateAsString(org.apache.commons.jelly.JellyContext)' 'StatementThrowsNPE/org.apache.commons.jelly.expression.ExpressionSupport.evaluateRecurse(org.apache.commons.jelly.JellyContext)' 'StatementThrowsNPE/org.apache.commons.jelly.expression.CompositeExpression.evaluateAsIterator(org.apache.commons.jelly.JellyContext)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.WhileTag.doTag(org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.apache.commons.jelly.expression.CompositeExpression.evaluate(org.apache.commons.jelly.JellyContext)' 'StatementThrowsNPE/org.xml.sax.helpers.XMLFilterImpl.processingInstruction(java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.xml.sax.helpers.XMLFilterImpl.startDocument()' 'StatementThrowsNPE/org.apache.commons.jelly.impl.ScriptBlock.trimWhitespace()' 'StatementThrowsNPE/org.xml.sax.helpers.XMLFilterImpl.skippedEntity(java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.impl.CompositeTextScriptBlock.trimWhitespace()' 'StatementThrowsNPE/org.xml.sax.helpers.XMLFilterImpl.endPrefixMapping(java.lang.String)' 'StatementThrowsNPE/org.xml.sax.helpers.XMLFilterImpl.characters([C,int,int)' 'StatementThrowsNPE/org.xml.sax.helpers.XMLFilterImpl.endDocument()' 'StatementThrowsNPE/org.apache.commons.jelly.impl.ScriptBlock.run(org.apache.commons.jelly.JellyContext,org.apache.commons.jelly.XMLOutput)' 'StatementThrowsNPE/org.xml.sax.helpers.XMLFilterImpl.parse(java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.parser.DefaultNamespaceFilter.startPrefixMapping(java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.apache.commons.jelly.parser.DefaultNamespaceFilter.endElement(java.lang.String,java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.xml.sax.helpers.XMLFilterImpl.ignorableWhitespace([C,int,int)' 'StatementThrowsNPE/org.apache.commons.jelly.tags.core.OtherwiseTag.doTag(org.apache.commons.jelly.XMLOutput)' };
fcje.f = [ 0 0 0 8 7 19 25 18 19 10 9 13 15 26 17 23 15 16 14 19 20 19 18 24 17 11 27 21 27 30 30 24 18 21 20 28 23 34 23 31 24 26 27 34 30 30 41 43 37 82 ; 0 0 46 51 60 65 56 48 61 50 46 44 45 46 33 22 29 22 30 35 23 30 34 29 27 32 29 29 46 38 28 40 32 26 32 33 28 33 38 39 42 42 35 41 35 42 36 37 47 97 ; 0 0 12 36 24 34 34 41 31 27 26 27 41 20 32 18 22 35 31 26 17 17 37 30 28 36 31 39 27 24 25 41 31 20 40 30 23 32 32 38 39 33 42 34 49 41 47 41 37 100 ; 0 0 0 15 25 31 29 31 31 31 40 54 43 50 45 65 73 69 58 61 76 69 74 84 75 67 63 100 84 77 86 90 85 104 99 104 98 100 110 96 115 111 126 136 114 146 140 131 129 309 ; 0 0 97 93 72 55 33 27 20 14 15 8 8 7 5 7 3 5 3 8 4 2 5 3 5 2 4 2 0 7 6 5 3 5 6 3 5 7 4 8 5 3 2 4 2 3 6 4 4 17 ; 0 0 0 17 27 20 23 39 30 38 32 42 44 54 47 44 45 46 41 57 54 61 77 56 52 58 51 79 64 76 74 76 82 73 105 96 108 95 100 120 123 123 96 124 98 132 126 145 151 293 ; 0 0 0 7 14 10 11 21 11 11 10 11 21 17 24 17 17 21 15 12 17 17 23 11 19 24 21 21 23 29 30 24 29 27 27 22 30 32 33 29 37 38 33 33 29 36 36 39 38 90 ; 0 0 0 23 23 28 30 43 39 40 42 43 34 49 49 57 72 56 51 54 56 65 69 72 69 63 90 78 70 73 94 88 91 87 102 76 101 105 112 104 110 131 119 106 126 133 113 150 156 324 ; 0 0 306 116 168 146 123 121 102 114 120 105 100 101 103 93 106 109 100 91 78 93 98 93 113 94 121 101 95 95 118 102 96 120 110 133 112 121 122 146 143 139 142 129 152 159 154 179 163 286 ; 0 0 0 47 75 104 136 155 123 114 103 89 95 81 95 101 114 101 96 97 88 91 85 101 107 99 70 87 95 99 108 93 130 136 114 121 108 116 112 145 133 166 129 140 142 149 145 165 155 364 ; 0 0 0 0 0 1 2 4 7 6 5 1 11 10 11 5 6 5 4 9 7 14 5 13 15 16 8 13 13 20 7 13 15 15 12 13 13 20 19 19 19 13 24 27 19 23 31 29 25 53 ; 0 0 0 2 9 9 15 19 15 14 17 13 14 16 21 17 20 15 20 20 19 22 16 17 32 22 24 18 19 22 22 22 20 24 15 35 25 24 30 28 29 33 35 29 27 29 30 38 51 80 ; 0 0 0 62 69 116 148 130 142 135 114 112 97 105 109 120 117 100 100 116 97 98 107 109 105 104 102 110 102 123 123 102 115 123 116 139 109 145 138 134 154 143 157 154 155 152 151 183 180 368 ; 0 0 134 116 97 95 69 56 41 39 42 32 28 27 26 19 18 22 30 25 20 38 28 28 33 39 32 45 37 32 44 44 32 36 57 63 49 49 48 52 53 52 61 52 50 51 43 58 61 129 ; 0 0 0 50 87 102 128 157 122 119 98 95 98 115 100 114 100 104 83 100 103 95 104 97 84 101 113 103 98 104 90 122 125 150 126 133 147 154 131 164 133 153 154 149 174 159 183 172 181 365 ; 0 0 0 53 109 119 141 138 140 111 103 85 92 113 86 101 114 77 77 101 97 76 68 95 97 119 101 94 86 100 95 122 108 121 118 112 122 132 143 140 131 165 128 152 155 136 175 184 138 334 ; 0 0 0 0 0 1 0 4 0 2 1 2 2 4 6 4 7 5 9 2 5 4 15 12 1 6 11 6 22 14 13 13 8 16 9 16 23 24 16 18 23 16 22 37 23 35 28 32 25 64 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 2 1 5 1 4 2 7 12 8 8 18 14 10 4 8 5 11 18 8 8 14 12 11 16 18 11 19 16 35 20 29 28 26 34 61 ; 0 0 0 0 0 2 1 7 8 6 6 5 7 13 5 8 7 8 8 7 6 9 14 10 14 11 6 10 7 20 14 13 23 11 11 19 23 11 10 18 11 17 18 23 24 26 15 27 27 44 ; 0 0 0 3 5 12 10 18 18 19 13 13 19 22 21 21 18 16 12 21 22 13 18 27 15 18 33 27 22 24 25 22 24 21 23 32 24 25 31 20 32 23 34 44 25 43 33 36 41 87 ; 0 0 0 0 0 0 3 3 5 5 6 7 9 11 10 11 12 7 10 7 12 10 14 15 12 8 10 12 15 12 8 18 17 17 10 16 14 18 22 34 35 28 13 24 26 21 27 32 18 66 ; 0 0 0 0 0 3 2 0 0 1 4 1 4 2 4 11 6 13 25 14 8 14 21 14 18 17 18 24 26 17 27 22 26 25 39 48 44 29 41 45 57 53 56 52 67 72 52 73 72 150 ; 0 0 0 1 3 1 12 5 4 15 11 6 9 7 5 7 11 5 8 9 12 9 13 19 22 16 16 6 18 5 19 14 23 16 18 14 14 15 22 18 16 22 19 18 33 24 24 23 25 63 ; 0 0 0 6 7 11 14 10 18 18 27 14 27 29 30 31 27 34 35 43 42 31 30 39 42 37 42 40 42 49 47 38 58 60 66 72 83 67 63 73 71 75 69 76 80 77 87 93 95 182 ; 0 0 0 0 1 3 2 7 13 6 6 8 8 2 5 4 1 5 10 6 5 6 10 6 12 9 8 9 9 9 4 7 4 8 11 6 8 8 8 7 8 9 7 14 14 10 9 13 12 17 ; 0 0 0 10 25 22 17 18 14 21 13 10 5 10 8 6 8 7 7 5 4 3 9 8 3 3 5 3 5 8 4 5 4 9 7 6 8 5 3 5 7 14 7 7 5 6 5 9 7 12 ; 0 0 43 49 67 87 65 73 57 49 48 33 41 40 38 32 36 38 32 31 34 34 34 23 34 41 36 38 39 35 28 47 28 42 26 41 33 42 39 36 49 37 31 39 39 44 45 39 39 85 ; 0 0 0 0 0 0 0 2 0 2 2 6 9 3 4 0 4 3 3 5 7 4 2 5 1 12 9 12 9 9 3 11 4 3 7 10 9 8 6 12 10 6 16 11 9 11 8 10 10 31 ; 0 0 0 7 13 13 13 24 23 24 29 33 38 40 22 46 30 37 44 35 43 46 46 49 53 51 58 61 47 66 67 66 79 69 78 83 94 91 91 100 102 113 106 114 103 124 118 135 129 282 ; 0 0 0 0 0 0 3 2 2 2 0 3 2 3 2 6 8 6 4 4 4 7 5 4 8 7 4 5 7 7 4 6 9 6 3 4 3 3 7 5 5 8 11 6 6 13 10 7 5 16 ; 0 0 0 1 3 4 4 5 4 5 10 6 12 12 9 6 7 13 11 6 11 14 15 14 18 15 16 18 13 13 21 15 14 9 16 15 10 15 19 23 22 26 28 24 16 27 19 26 23 40 ; 0 0 0 6 7 9 12 15 19 17 11 20 12 22 16 23 17 23 21 20 17 23 28 14 27 25 21 27 26 37 29 36 37 35 26 32 31 31 31 36 51 42 35 31 41 36 37 44 61 94 ; 0 0 0 2 3 3 1 1 1 3 3 6 1 1 4 5 4 6 7 5 8 7 3 7 11 6 7 16 11 8 17 6 11 12 9 8 13 11 13 10 12 9 13 14 17 14 9 17 12 31 ; 0 0 0 19 20 22 36 36 37 37 45 41 43 36 42 40 52 41 45 41 67 61 41 56 80 70 75 67 60 57 72 81 72 74 90 81 75 97 120 98 93 111 115 87 119 111 111 102 122 275 ; 0 0 0 14 20 15 15 16 11 14 13 10 5 7 8 6 8 8 7 9 5 8 10 5 6 6 7 4 5 7 6 4 2 7 5 6 4 3 5 4 7 8 5 6 3 5 5 9 13 14 ; 0 0 0 0 0 1 2 5 17 12 21 26 19 21 36 24 39 22 31 44 32 40 35 42 36 38 59 52 45 50 53 47 51 55 69 45 56 74 83 80 75 82 97 80 88 95 107 92 107 215 ; 0 0 0 0 0 0 0 0 0 1 2 1 2 2 2 3 2 4 4 3 5 7 8 5 7 11 14 13 2 13 12 6 14 7 13 16 16 10 21 14 20 10 17 12 22 30 26 33 24 57 ; 0 0 0 44 75 115 145 115 133 119 118 109 95 100 103 109 103 87 91 103 99 91 89 111 91 112 97 95 83 100 103 112 131 119 106 131 131 125 151 131 140 176 145 160 159 155 150 175 172 330 ; 0 0 95 92 69 49 44 25 20 18 12 14 11 9 5 9 5 6 7 6 9 4 6 5 9 2 0 1 7 6 3 3 5 4 7 5 9 7 3 3 3 2 0 6 4 3 2 4 6 11 ; 0 0 0 0 0 1 0 1 2 2 5 3 5 6 6 6 10 10 7 16 24 13 17 30 15 13 28 26 17 29 35 39 36 33 32 28 37 27 43 40 46 53 49 55 68 65 57 62 81 134 ; 0 0 0 0 1 1 1 4 0 1 7 5 0 3 3 5 4 5 4 4 5 3 9 9 3 4 4 3 4 4 9 4 5 5 6 5 5 4 7 3 12 8 8 8 12 11 7 9 11 21 ; 0 0 0 7 4 7 12 14 12 21 17 10 19 11 19 16 22 19 14 22 27 18 23 27 20 16 29 20 17 28 28 24 22 23 30 40 22 23 22 28 30 32 25 29 29 31 38 36 44 77 ; 0 0 0 0 2 1 4 4 1 3 5 4 6 8 8 7 8 13 4 8 7 5 12 15 15 10 17 15 13 14 13 21 18 16 18 17 25 25 27 21 26 20 17 16 31 28 32 20 40 81 ; 0 0 0 0 0 1 6 6 5 7 14 12 19 16 15 18 27 26 22 29 25 35 26 37 43 30 43 35 45 36 45 45 56 42 43 43 41 56 52 64 63 45 72 68 75 64 72 76 84 183 ; 0 0 0 0 0 2 2 3 4 3 7 13 10 9 16 22 17 19 16 16 15 25 20 26 30 20 41 31 29 36 36 45 43 42 40 33 49 29 37 58 59 54 66 70 72 57 67 83 72 170 ; 0 0 0 0 2 7 7 8 8 9 7 11 7 13 7 12 7 14 18 22 15 18 14 15 16 30 27 19 22 22 31 29 39 34 32 36 37 41 42 59 53 40 37 54 44 50 72 57 66 159 ; 0 0 0 0 0 1 0 1 1 2 5 2 8 11 7 6 13 16 18 18 15 16 14 18 18 21 15 25 17 22 30 22 31 27 31 33 36 48 47 37 37 48 46 29 40 50 53 58 46 120 ; 0 0 0 0 0 1 1 7 10 14 19 11 26 20 30 24 34 25 27 35 39 52 33 37 46 55 50 56 56 58 60 54 68 62 62 66 62 80 86 67 69 87 88 103 89 89 108 98 113 230 ; 0 0 0 4 23 30 31 28 47 40 35 41 53 51 51 45 50 53 52 53 54 43 51 41 50 42 44 58 33 62 33 48 48 71 60 58 48 54 53 62 83 67 78 61 80 83 85 83 71 170 ; 0 0 0 0 0 0 0 5 9 6 6 9 12 19 20 23 26 39 27 32 35 33 34 32 34 38 38 38 41 47 51 51 54 47 66 65 66 75 66 60 83 62 89 105 92 94 109 110 113 212 ; 0 0 0 0 0 1 0 2 1 2 2 0 2 4 4 7 6 6 6 7 5 4 5 6 4 6 4 5 5 11 3 5 5 6 3 8 7 3 7 8 8 3 10 4 7 3 9 8 7 17 ; 0 0 102 84 77 51 33 33 22 14 19 16 13 6 7 9 5 7 3 4 6 4 2 2 7 8 3 1 3 6 8 3 4 1 4 3 9 2 8 3 1 7 3 2 4 3 3 3 3 16 ; 0 0 0 0 0 0 0 2 0 1 4 7 0 4 4 3 6 4 6 12 9 9 13 10 12 12 20 22 25 14 16 26 20 18 25 26 23 26 39 28 22 35 32 35 29 41 33 46 39 93 ; 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 4 1 1 1 0 1 2 2 8 0 4 6 3 7 2 8 7 4 4 7 16 5 9 8 6 12 13 7 8 13 11 12 32 ; 0 0 0 0 0 1 1 4 3 3 3 2 1 4 1 3 0 1 4 3 0 0 2 5 7 3 4 4 5 5 1 4 6 2 1 4 3 6 4 2 8 1 3 1 5 1 3 7 5 17 ; 0 0 87 108 93 79 79 68 61 67 48 61 60 56 69 56 78 48 62 52 64 65 60 80 86 79 93 86 79 78 92 74 68 92 96 113 107 88 97 101 88 103 118 96 111 122 124 122 117 236 ; 0 0 0 0 2 0 1 4 1 2 1 3 3 1 2 3 2 5 2 0 3 2 4 6 5 4 3 4 4 3 2 6 7 2 3 4 6 4 7 6 6 5 10 7 10 5 10 7 7 25 ; 0 0 0 0 1 5 2 5 8 3 10 9 6 9 11 6 7 5 5 4 8 9 5 12 8 7 9 5 7 8 6 12 12 10 7 3 4 17 9 5 20 15 9 7 15 9 10 7 11 26 ; 0 0 22 22 16 11 12 8 6 4 3 2 3 1 2 0 0 0 2 1 1 3 0 3 1 0 0 0 0 1 2 1 0 0 2 0 1 0 4 1 0 2 1 1 1 0 0 3 1 3 ; 0 0 0 0 0 1 3 3 4 5 4 2 5 5 3 3 6 7 5 2 2 10 8 7 3 5 6 5 6 4 10 9 4 3 5 7 5 6 6 9 7 13 10 7 4 7 8 10 14 16 ; 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 1 1 1 0 1 1 0 1 3 4 0 6 3 4 0 5 7 5 11 14 5 5 9 10 8 10 6 10 10 15 15 23 15 27 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 3 0 1 0 0 1 3 2 2 1 0 2 2 0 0 4 1 1 5 4 0 1 2 5 4 4 6 7 5 7 5 5 8 ; 0 0 0 0 0 0 0 1 1 2 1 0 1 8 3 1 3 5 6 10 6 7 6 14 21 15 10 8 5 18 16 19 17 15 16 19 17 27 27 30 24 36 29 29 28 38 27 32 41 94 ; 0 0 0 0 0 0 0 2 2 2 2 1 5 3 5 6 3 5 4 2 5 5 10 6 1 9 13 7 11 14 9 13 12 9 10 17 20 14 15 22 19 14 14 22 26 23 19 21 22 49 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1 1 2 0 0 0 0 0 0 0 4 0 2 1 0 1 2 1 0 0 1 1 3 ; 0 0 0 0 1 1 1 1 1 3 3 1 4 4 3 1 3 2 2 2 2 1 4 8 2 6 1 3 6 6 8 9 10 6 1 11 4 8 7 7 5 3 11 5 11 5 12 12 7 21 ; 0 0 0 0 1 1 1 2 2 0 1 1 3 3 2 2 2 2 4 0 3 3 4 1 2 3 3 3 4 0 4 7 6 5 10 4 5 6 5 4 4 7 8 2 9 15 7 13 18 21 ; 0 0 0 0 0 2 1 1 1 1 3 1 1 5 1 2 3 4 3 2 2 3 2 1 2 4 6 6 6 1 7 4 7 7 5 6 10 8 8 5 3 4 10 6 6 10 3 10 7 29 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 3 1 1 0 3 0 0 2 0 1 0 0 5 0 0 0 0 1 0 ; 0 0 0 0 0 2 0 2 2 4 1 3 8 5 8 8 11 10 7 8 3 4 10 6 12 9 5 6 10 10 9 4 6 5 6 10 12 13 5 11 12 12 7 10 12 11 12 13 18 29 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 1 4 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 0 5 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 3 3 1 0 0 3 3 4 0 2 2 2 4 3 1 1 0 1 3 1 2 4 0 1 2 7 4 4 7 9 ; 0 0 0 0 1 5 3 3 5 6 3 1 4 1 1 0 1 0 1 0 0 2 3 0 0 1 0 2 1 0 1 0 0 1 1 1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 0 1 1 0 1 1 1 0 0 0 1 0 0 4 ; 0 0 0 0 1 0 0 2 2 1 0 2 4 0 0 3 0 1 3 0 0 0 1 0 0 0 1 0 1 1 0 0 0 0 1 2 3 0 0 0 0 0 0 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 0 1 0 0 1 0 1 0 2 1 0 0 0 1 0 2 1 3 2 2 2 2 0 3 2 2 1 3 8 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 1 2 0 0 0 0 4 1 1 3 0 1 0 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 1 0 3 3 2 1 1 0 1 1 1 0 1 2 2 1 1 0 0 2 2 2 1 1 5 1 1 6 10 4 7 17 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 2 0 0 1 2 2 0 0 2 2 2 1 1 1 1 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 5 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 0 0 0 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 2 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 1 0 1 0 0 1 0 1 ; 0 0 0 0 0 0 2 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 1 2 2 1 0 0 0 ; ];