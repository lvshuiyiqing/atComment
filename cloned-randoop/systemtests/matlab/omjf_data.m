omjf.s = [ 0 32221 185857 257882 249995 278717 251189 242668 237078 214018 200871 188377 175769 164937 155020 146464 137104 129013 121899 114670 107971 101203 96074 91156 85911 81134 76566 72443 68302 64384 60767 57675 54950 51241 48682 45927 43068 41146 38877 36615 34814 32875 31159 29061 27840 26137 24798 23724 22335 383938 ];
omjf.gt = [ 0 0 860284741 5852176937 11346647213 15657993087 19417694274 23051910915 26373690207 26989517194 29026868743 30970198585 31139186059 33017187434 34789032564 32389012222 33922342940 34240424756 32818214700 36302970303 35765786382 34491670876 33628639039 34091396370 32528697073 32342451370 32373763416 30311176367 30348083721 29900000636 28953088032 28629010333 28089219237 28153601719 29445857568 26127878740 26413271221 25206638858 24652097381 24789116687 23586387422 26950463397 24577852168 22338950373 22694708232 21815172723 19674289849 20804867997 20109024679 434204843817 ];
omjf.et = [ 0 0 7977857283 10365794450 10477152107 21669918335 15718656571 16815885505 16573867203 15370614505 17027567052 10218030576 10536697049 14917056637 13281740658 8410905623 11558527788 15224803679 8431400147 12135926525 8879950814 9424545461 8935965743 10890637692 9244434970 8949968879 7808427415 6277442952 8535069363 7377241784 7825800837 10230302220 8773217718 6248173682 8603771835 7689411107 5598049626 6460492459 6029649879 5262692244 5646657202 5608693603 4499766983 4806839977 4689384257 5754012168 4126679678 4327509439 4099784564 83890446338 ];
omjf.n = { 'StatementThrowsNPE/javax.servlet.GenericServlet.getServletName()' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)' 'EqualsHashcode/org.jfree.chart.urls.CustomXYURLGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.LegendItemCollection.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.KeyToGroupMap.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.labels.ItemLabelPosition.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.iterateDomainBounds(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.plot.ThermometerPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.block.BorderArrangement.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.labels.CustomXYToolTipGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.Plot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.CombinedDomainXYPlot.equals(java.lang.Object)' 'StatementThrowsNPE/javax.servlet.GenericServlet.getServletContext()' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getNewestTime()' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getY(int,int)' 'EqualsHashcode/org.jfree.chart.plot.SpiderWebPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.CategoryPlot.zoom(double)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue(int,int)' 'EqualsHashcode/org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.urls.StandardXYURLGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.AbstractSeriesDataset.indexOf(java.lang.Comparable)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractXYDataset.getXValue(int,int)' 'EqualsHashcode/org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.isEmptyOrNull(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.labels.StandardPieSectionLabelGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.PolarPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.MultiplePiePlot.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.AbstractRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.SpiderWebPlot.getLegendItems()' 'EqualsHashcode/org.jfree.chart.block.ColumnArrangement.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.setTimeBase(org.jfree.data.time.RegularTimePeriod)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractXYZDataset.getZValue(int,int)' 'EqualsHashcode/org.jfree.chart.plot.CombinedRangeCategoryPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.gantt.TaskSeriesCollection.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.needle.LineNeedle.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.axis.DateAxis.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findMinimumRangeValue(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getItemCount(int)' 'EqualsHashcode/org.jfree.data.statistics.DefaultStatisticalCategoryDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.iterateXYRangeBounds(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.needle.MiddlePinNeedle.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.needle.ShipNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findDomainBounds(org.jfree.data.xy.XYDataset,boolean)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getMinZValue(double,double,double,double)' 'EqualsHashcode/org.jfree.data.time.TimePeriodValuesCollection.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.labels.SymbolicXYItemLabelGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.Plot.getLegendItems()' 'EqualsHashcode/org.jfree.data.time.TimeSeriesCollection.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findMaximumRangeValue(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.needle.PlumNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractIntervalXYDataset.getEndYValue(int,int)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getX(int,int)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findRangeBounds(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.block.BlockContainer.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.needle.PointerNeedle.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getMinZValue()' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getDomainLowerBound(boolean)' 'EqualsToItself/org.jfree.data.Range.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.PiePlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findMaximumDomainValue(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.data.general.DatasetGroup.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.axis.TickUnits.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.plot.Plot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getOldestTime()' 'StatementThrowsNPE/org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineException(long)' 'EqualsHashcode/org.jfree.chart.labels.HighLowItemLabelGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.block.FlowArrangement.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.indexZ(int,int)' 'StatementThrowsNPE/javax.servlet.GenericServlet.getInitParameter(java.lang.String)' 'EqualsHashcode/org.jfree.chart.labels.AbstractPieItemLabelGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.RingPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.needle.PinNeedle.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.labels.StandardXYZToolTipGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue(int,int)' 'EqualsHashcode/org.jfree.chart.labels.StandardXYToolTipGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.getMaxRadius()' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findMinimumDomainValue(org.jfree.data.xy.XYDataset)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.<init>(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findRangeBounds(org.jfree.data.xy.XYDataset,boolean)' 'EqualsHashcode/org.jfree.chart.needle.WindNeedle.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.labels.StandardXYItemLabelGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.block.CenterArrangement.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.urls.StandardPieURLGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.MovingAverage.createMovingAverage(org.jfree.data.xy.XYDataset,java.lang.String,double,double)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getZ(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineExclusions(long,long)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractXYDataset.getYValue(int,int)' 'EqualsHashcode/org.jfree.chart.urls.CustomPieURLGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.Plot.zoom(double)' 'EqualsHashcode/org.jfree.chart.plot.CombinedDomainCategoryPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.indexX(int)' 'StatementThrowsNPE/org.jfree.data.general.DatasetUtilities.findDomainBounds(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.ChartRenderingInfo.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getYValue(int,int)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getEndX(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.WaferMapPlot.setRenderer(org.jfree.chart.renderer.WaferMapRenderer)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getXValue(int)' 'EqualsHashcode/org.jfree.chart.plot.DefaultDrawingSupplier.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.CategoryPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.statistics.MeanAndStandardDeviation.equals(java.lang.Object)' 'StatementThrowsNPE/javax.servlet.GenericServlet.log(java.lang.String)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getStartX(int,int)' 'StatementThrowsNPE/org.jfree.data.time.MovingAverage.createMovingAverage(org.jfree.data.xy.XYDataset,int,java.lang.String,double,double)' 'StatementThrowsNPE/org.jfree.chart.urls.TimeSeriesURLGenerator.generateURL(org.jfree.data.xy.XYDataset,int,int)' 'EqualsHashcode/org.jfree.chart.entity.StandardEntityCollection.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.XYPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getX(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.WaferMapPlot.getLegendItems()' 'EqualsSymmetric/org.jfree.chart.renderer.category.BarRenderer.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.labels.StandardContourToolTipGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.xy.IntervalXYDelegate.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.MeterPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.ClipPath.clone()' 'EqualsHashcode/org.jfree.chart.plot.CombinedRangeXYPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.indexX()' 'EqualsHashcode/org.jfree.chart.block.LabelBlock.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.indexY(int)' 'EqualsHashcode/org.jfree.chart.plot.FastScatterPlot.equals(java.lang.Object)' 'StatementThrowsNPE/javax.servlet.GenericServlet.getInitParameterNames()' 'EqualsHashcode/org.jfree.chart.needle.LongNeedle.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.ValueMarker.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.plot.CombinedRangeCategoryPlot.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.MovingAverage.createMovingAverage(org.jfree.data.xy.XYDataset,java.lang.String,long,long)' 'StatementThrowsNPE/org.jfree.chart.renderer.xy.XYBarRenderer.findDomainBounds(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.plot.CompassPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.time.TimeTableXYDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds(org.jfree.data.xy.XYDataset)' 'EqualsHashcode/org.jfree.chart.block.BlockBorder.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.advanceTime()' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getMaxZValue()' 'EqualsSymmetric/org.jfree.chart.renderer.category.StackedBarRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel(org.jfree.data.xy.XYDataset,int)' 'EqualsHashcode/org.jfree.data.statistics.HistogramDataset.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.xy.CategoryTableXYDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.zoom(double)' 'EqualsHashcode/org.jfree.data.KeyedObjects.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.gantt.Task.equals(java.lang.Object)' 'StatementThrowsNPE/javax.servlet.GenericServlet.log(java.lang.String,java.lang.Throwable)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.zoom(double)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardContourToolTipGenerator.generateToolTip(org.jfree.data.contour.ContourDataset,int)' 'EqualsSymmetric/org.jfree.chart.renderer.category.CategoryStepRenderer.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.needle.ArrowNeedle.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.block.GridArrangement.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.<init>(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.PolarItemRenderer)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getDomainBounds(boolean)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.CandlestickRenderer.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.statistics.SimpleHistogramDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYToolTipGenerator.generateToolTip(org.jfree.data.xy.XYDataset,int,int)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getDomainUpperBound(boolean)' 'StatementThrowsNPE/org.jfree.chart.labels.AbstractXYItemLabelGenerator.generateLabelString(org.jfree.data.xy.XYDataset,int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setInverted(boolean)' 'EqualsSymmetric/org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.category.LineAndShapeRenderer.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.HighLowRenderer.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.plot.CombinedRangeXYPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getEndY(int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.category.WaterfallBarRenderer.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.annotations.XYPointerAnnotation.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.JFreeChart.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.XYBarRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getDomainLowerBound(boolean)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.setAutoWidth(boolean)' 'StatementThrowsNPE/org.jfree.data.xy.AbstractIntervalXYDataset.getStartYValue(int,int)' 'EqualsHashcode/org.jfree.chart.entity.ContourEntity.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.axis.NumberAxis.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getEndX(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.PolarPlot.translateValueThetaRadiusToJava2D(double,double,java.awt.geom.Rectangle2D)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getStartY(int,int)' 'StatementThrowsNPE/org.jfree.data.contour.DefaultContourDataset.getZValueRange(org.jfree.data.Range,org.jfree.data.Range)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getDomainUpperBound(boolean)' 'EqualsSymmetric/org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.plot.CategoryPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.time.DynamicTimeSeriesCollection.getY(int,int)' 'EqualsHashcode/org.jfree.chart.entity.LegendItemEntity.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.renderer.xy.StackedXYAreaRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getEndX(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.ColorPalette.getPaint(double)' 'EqualsSymmetric/org.jfree.chart.plot.RingPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYZToolTipGenerator.generateToolTip(org.jfree.data.xy.XYZDataset,int,int)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getStartX(int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.category.GroupedStackedBarRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.SegmentedTimeline.addBaseTimelineException(java.util.Date)' 'StatementThrowsNPE/org.jfree.chart.renderer.WaferMapRenderer.setPlot(org.jfree.chart.plot.WaferMapPlot)' 'EqualsHashcode/org.jfree.chart.block.AbstractBlock.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.CategoryMarker.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize(double)' 'EqualsHashcode/org.jfree.data.statistics.HistogramBin.equals(java.lang.Object)' 'StatementThrowsNPE/org.xml.sax.helpers.DefaultHandler.endElement(java.lang.String,java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.jfree.chart.axis.ColorBar.configure(org.jfree.chart.plot.ContourPlot)' 'EqualsSymmetric/org.jfree.chart.plot.CombinedDomainXYPlot.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.category.StatisticalBarRenderer.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.statistics.SimpleHistogramBin.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.axis.SegmentedTimeline$Segment.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.entity.ChartEntity.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.renderer.xy.XYAreaRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xml.ItemHandler.endElement(java.lang.String,java.lang.String,java.lang.String)' 'StatementThrowsNPE/org.jfree.chart.labels.SymbolicXYItemLabelGenerator.generateToolTip(org.jfree.data.xy.XYDataset,int,int)' 'EqualsHashcode/org.jfree.chart.title.LegendGraphic.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.ColorPalette.getColorLog(double)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYZToolTipGenerator.generateLabelString(org.jfree.data.xy.XYDataset,int,int)' 'EqualsSymmetric/org.jfree.chart.plot.PiePlot.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRangeAboutValue(double,double)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setAutoRangeStickyZero(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickMarkInsideLength(float)' 'EqualsSymmetric/org.jfree.chart.plot.CombinedDomainCategoryPlot.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.plot.MeterInterval.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getY(int,int)' 'StatementThrowsNPE/org.jfree.data.xml.CategoryDatasetHandler.addItem(java.lang.Comparable,java.lang.Comparable,java.lang.Number)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getStartX(int,int)' 'EqualsHashcode/org.jfree.chart.plot.IntervalMarker.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setAxisLinePaint(java.awt.Paint)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setAxisLineStroke(java.awt.Stroke)' 'EqualsHashcode/org.jfree.chart.plot.PlotRenderingInfo.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.ColorPalette.getColorLinear(double)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getX(int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.category.LevelRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.resizeRange(double)' 'StatementThrowsNPE/org.jfree.chart.labels.StandardXYItemLabelGenerator.generateLabel(org.jfree.data.xy.XYDataset,int,int)' 'EqualsSymmetric/org.jfree.chart.renderer.xy.XYDifferenceRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.JFreeChart.createBufferedImage(int,int)' 'EqualsHashcode/org.jfree.data.KeyedObject.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.labels.AbstractPieItemLabelGenerator.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.zoomRange(double,double)' 'StatementThrowsNPE/org.jfree.data.xml.PieDatasetHandler.addItem(java.lang.Comparable,java.lang.Number)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getDomainBounds(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickMarkOutsideLength(float)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setLowerMargin(double)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero(boolean)' 'StatementThrowsNPE/org.jfree.chart.renderer.WaferMapRenderer.getChipColor(java.lang.Number)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getStartXValue(int,int)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getStartX(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRightArrow(java.awt.Shape)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getItemCount(int)' 'StatementThrowsNPE/org.jfree.chart.labels.MultipleXYSeriesLabelGenerator.generateLabel(org.jfree.data.xy.XYDataset,int)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getStartY(int,int)' 'EqualsSymmetric/org.jfree.chart.plot.XYPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setPositiveArrowVisible(boolean)' 'EqualsSymmetric/org.jfree.chart.JFreeChart.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.getEndXValue(int,int)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getEndY(int,int)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.<init>(org.jfree.data.contour.ContourDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ColorBar)' 'EqualsSymmetric/org.jfree.data.gantt.Task.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.getRange()' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getEndX(int,int)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getX(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickMarkPaint(java.awt.Paint)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setLabel(java.lang.String)' 'EqualsSymmetric/org.jfree.data.DefaultKeyedValues.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.visibleRange(org.jfree.data.contour.ContourDataset,org.jfree.data.Range,org.jfree.data.Range)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.resizeRange(double,double)' 'EqualsHashcode/org.jfree.data.DefaultKeyedValues2D.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.data.DefaultKeyedValues2D.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setAxisLineVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.ClipPath.generateClipPath(java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis)' 'StatementThrowsNPE/org.jfree.chart.axis.CyclicNumberAxis.setAutoRangeMinimumSize(double,boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.ColorBar.getPaint(double)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setLabelPaint(java.awt.Paint)' 'EqualsSymmetric/org.jfree.chart.plot.SpiderWebPlot.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.CyclicNumberAxis.setFixedAutoRange(double)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setUpperMargin(double)' 'StatementThrowsNPE/org.jfree.data.xy.XYBarDataset.getStartY(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickMarkOutsideLength(float)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setVerticalTickLabels(boolean)' 'StatementThrowsNPE/org.jfree.data.xy.IntervalXYDelegate.datasetChanged(org.jfree.data.general.DatasetChangeEvent)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setFixedAutoRange(double)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickMarksVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRange(double,double)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize(double,boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setAutoRange(boolean)' 'StatementThrowsNPE/org.jfree.chart.plot.CombinedDomainCategoryPlot.getCategories()' 'EqualsSymmetric/org.jfree.data.KeyedObject.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickMarkInsideLength(float)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setLabelAngle(double)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getEndY(int,int)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setLowerBound(double)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setNegativeArrowVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setUpperBound(double)' 'EqualsHashcode/org.jfree.chart.LegendItem.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.chart.axis.CategoryAxis.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setMinorTickMarksVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.plot.XYPlot.getLegendItems()' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRangeWithMargins(double,double)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setRangeWithMargins(org.jfree.data.Range)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setTickLabelsVisible(boolean)' 'StatementThrowsNPE/org.jfree.chart.axis.PeriodAxis.setFirst(org.jfree.data.time.RegularTimePeriod)' 'StatementThrowsNPE/org.jfree.chart.axis.CyclicNumberAxis.centerRange(double)' 'StatementThrowsNPE/org.jfree.chart.axis.DateAxis.setRange(double,double)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.centerRange(double)' 'StatementThrowsNPE/org.jfree.chart.plot.ContourPlot.getContourDataRange()' 'EqualsSymmetric/org.jfree.chart.renderer.xy.XYAreaRenderer.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.DateAxis.setTickMarkPosition(org.jfree.chart.axis.DateTickMarkPosition)' 'StatementThrowsNPE/org.jfree.chart.axis.Axis.setLabelFont(java.awt.Font)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.setLeftArrow(java.awt.Shape)' 'EqualsHashcode/org.jfree.data.time.TimeSeries.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.data.category.DefaultCategoryDataset.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.data.category.DefaultCategoryDataset.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.ValueAxis.getRange()' 'EqualsHashcode/org.jfree.chart.entity.XYItemEntity.equals(java.lang.Object)' 'EqualsHashcode/org.jfree.chart.entity.XYAnnotationEntity.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.chart.axis.NumberAxis.setTickUnit(org.jfree.chart.axis.NumberTickUnit)' 'EqualsHashcode/org.jfree.data.xy.XYSeries.equals(java.lang.Object)' 'EqualsSymmetric/org.jfree.data.xy.XYSeries.equals(java.lang.Object)' 'StatementThrowsNPE/org.jfree.data.general.SubSeriesDataset.getY(int,int)' };
omjf.f = [ 0 0 36 40 33 54 49 54 54 63 49 51 65 56 56 56 45 48 39 44 40 55 47 49 39 36 31 33 38 29 29 20 26 29 32 21 29 24 27 26 21 15 8 9 15 15 17 15 21 23 ; 0 0 0 68 69 79 81 90 95 60 80 75 78 87 73 77 61 77 60 72 64 47 55 47 46 45 44 36 35 32 30 35 33 35 31 25 19 27 30 25 20 27 12 15 20 15 16 12 13 27 ; 0 0 44 37 38 48 36 59 50 63 54 70 48 56 48 60 43 27 44 47 40 42 45 48 42 39 39 24 32 37 17 32 34 29 33 16 22 19 26 23 17 17 24 20 15 12 21 15 14 27 ; 0 0 38 74 81 128 141 144 162 162 197 204 216 250 244 270 239 270 298 278 283 290 275 266 276 257 257 264 270 268 242 230 236 254 235 199 221 212 192 174 183 185 183 172 170 174 158 149 144 276 ; 0 0 43 43 33 55 57 57 58 56 65 68 59 66 63 68 58 58 51 54 53 51 56 48 48 40 52 43 36 47 34 36 34 40 22 27 36 27 19 24 20 26 21 22 17 20 15 17 15 27 ; 0 0 35 54 60 100 117 155 192 186 248 252 303 289 320 305 314 360 326 369 341 373 344 339 351 336 364 335 336 308 303 350 294 284 272 272 251 269 268 217 251 239 221 186 207 198 188 176 144 447 ; 0 0 71 71 82 74 90 102 88 90 90 89 84 65 71 70 63 54 62 54 53 59 41 42 45 45 45 30 28 34 20 25 31 25 27 27 21 25 22 20 24 15 11 16 16 19 8 11 12 19 ; 0 0 31 37 42 38 53 53 68 45 49 48 64 52 56 61 44 49 38 35 51 26 42 40 38 41 42 27 26 33 38 38 25 32 21 23 26 24 14 15 18 19 14 10 11 17 14 12 14 21 ; 0 0 48 43 54 52 46 58 55 48 50 50 60 63 54 46 57 53 43 52 52 47 45 50 38 48 34 41 29 40 37 30 24 20 17 33 26 24 25 22 21 17 14 18 12 19 11 16 11 22 ; 0 0 31 53 57 51 54 44 62 62 52 59 53 71 60 61 53 51 56 54 47 50 47 41 40 38 38 30 40 39 22 23 22 24 25 27 24 20 20 19 18 21 18 23 10 10 11 13 14 27 ; 0 0 54 72 93 96 92 96 142 111 105 106 118 108 100 85 92 98 93 92 78 82 95 82 62 70 75 64 67 53 62 57 44 57 44 45 39 46 38 47 49 41 38 35 39 35 26 29 20 52 ; 0 0 35 26 35 51 47 51 52 60 53 56 46 52 48 47 46 45 55 44 45 45 37 44 41 30 27 34 33 32 31 30 36 29 24 19 20 24 18 27 19 15 14 16 26 12 17 13 15 21 ; 0 0 29 52 51 66 52 49 56 47 47 58 51 62 58 47 44 47 47 39 41 49 42 41 37 37 33 24 38 29 25 26 24 25 23 23 19 14 21 20 13 13 19 18 7 12 13 14 11 24 ; 0 0 0 0 25 25 31 37 36 36 44 36 43 40 48 31 40 30 30 34 26 29 24 28 29 25 30 24 19 18 30 22 19 23 15 14 14 16 18 10 8 8 7 11 10 6 10 10 5 12 ; 0 0 0 0 33 21 29 38 37 31 29 35 37 24 28 29 31 33 38 24 30 28 22 24 25 13 23 20 19 20 23 15 17 8 16 8 14 12 12 11 10 5 3 8 3 10 5 10 4 23 ; 0 0 34 41 50 50 56 67 55 63 56 55 56 71 53 61 67 51 54 58 62 45 43 39 45 42 36 41 41 24 30 29 37 30 37 37 21 24 21 25 22 22 15 18 23 18 12 10 19 28 ; 0 0 0 60 60 91 77 92 79 90 127 77 78 76 109 83 85 91 90 93 71 89 94 73 83 71 77 65 74 68 75 67 46 54 42 53 46 45 41 52 42 36 35 38 31 30 30 37 26 68 ; 0 0 0 0 0 0 28 23 34 32 37 36 50 29 36 27 46 29 30 26 30 31 32 27 24 18 32 15 26 17 22 15 25 20 20 26 14 17 15 10 13 7 8 10 6 5 12 11 3 28 ; 0 0 155 146 209 181 222 234 246 232 213 268 258 239 234 233 193 212 215 221 213 195 187 167 182 152 155 167 139 150 129 144 136 129 133 104 105 118 108 98 89 76 70 80 61 65 77 67 54 130 ; 0 0 76 80 125 143 137 147 138 157 149 147 175 159 163 149 159 139 133 133 113 124 135 98 109 119 103 94 104 95 82 87 82 73 60 86 68 51 74 49 47 45 39 42 32 44 48 37 36 81 ; 0 0 0 5 6 9 12 16 11 21 18 26 26 22 27 30 17 35 15 28 19 17 17 28 23 26 16 21 24 26 13 19 23 16 15 16 16 13 12 15 8 11 9 11 7 10 6 7 7 21 ; 0 0 0 0 31 26 61 71 66 57 58 77 64 68 52 65 57 56 53 61 51 53 58 57 48 36 40 40 33 30 30 36 24 29 23 26 26 23 20 20 21 27 17 17 21 8 9 16 16 43 ; 0 0 30 53 40 56 54 52 45 66 64 78 61 48 69 67 50 51 57 39 54 43 39 48 30 35 43 34 36 33 31 30 30 24 17 22 32 20 18 29 15 13 23 13 23 20 18 14 12 23 ; 0 0 79 59 81 78 84 89 89 56 110 76 90 85 66 75 71 71 64 50 48 68 34 43 48 55 41 36 25 34 34 33 32 33 21 25 19 27 26 18 18 18 10 18 12 8 17 12 11 23 ; 0 0 44 41 69 67 89 82 79 92 93 88 96 102 88 96 88 87 90 76 84 82 69 74 64 71 59 65 58 58 60 58 64 61 52 52 39 45 46 51 37 45 38 42 30 30 23 31 29 44 ; 0 0 43 31 43 40 54 42 57 49 56 54 67 43 57 58 50 40 32 45 44 39 45 38 33 28 39 40 31 28 29 28 17 27 29 23 24 19 26 11 23 18 16 13 12 11 13 14 14 24 ; 0 0 35 24 50 49 60 60 55 59 45 63 43 45 62 58 62 65 50 52 47 54 48 42 47 42 39 34 47 35 42 45 34 36 31 28 29 22 23 28 26 14 19 27 15 30 18 10 19 31 ; 0 0 0 0 0 0 0 1 3 0 2 5 5 2 7 7 3 7 7 4 5 9 9 12 9 10 7 3 14 10 10 16 14 10 9 11 7 11 13 10 8 12 6 11 4 8 3 4 5 23 ; 0 0 47 41 40 47 43 50 44 53 58 47 45 58 60 54 57 54 51 54 44 35 30 37 43 37 30 37 37 28 26 28 24 34 28 26 18 26 21 19 15 13 17 17 16 14 10 15 11 21 ; 0 0 35 50 42 63 48 60 47 64 72 53 78 58 50 59 47 53 44 44 51 33 45 43 38 37 34 32 36 35 26 33 28 35 25 39 30 18 20 14 22 27 19 16 17 13 7 16 10 35 ; 0 0 0 0 0 0 3 1 4 7 2 7 4 9 11 11 10 11 6 9 12 9 13 4 11 14 8 7 5 4 5 6 7 10 4 6 10 9 9 6 4 4 7 6 5 8 5 3 4 9 ; 0 0 0 0 36 35 26 33 43 27 39 39 32 30 38 35 36 34 31 27 28 39 29 23 19 25 26 22 27 21 17 17 15 11 13 15 18 15 8 14 3 13 14 6 3 8 9 2 6 19 ; 0 0 34 39 43 47 53 50 54 44 49 62 43 42 46 56 62 63 43 49 39 44 37 44 34 31 48 42 45 32 33 30 28 31 27 29 28 33 20 15 23 18 28 14 19 6 16 19 22 29 ; 0 0 32 40 53 39 43 52 52 52 59 47 52 35 54 38 44 30 41 37 42 37 35 23 34 48 16 32 23 17 25 21 25 23 23 18 18 16 17 27 18 10 18 10 12 17 15 12 13 13 ; 0 0 36 48 33 48 41 51 54 49 62 62 50 56 48 50 62 62 40 50 52 37 41 39 31 33 38 32 37 30 20 21 27 33 23 28 26 27 19 21 12 26 22 14 18 11 19 9 16 23 ; 0 0 0 27 38 74 71 62 78 69 59 74 80 81 78 82 74 70 74 78 67 59 64 53 59 55 50 48 58 41 38 43 35 40 40 51 36 39 33 35 22 28 19 22 20 27 28 26 15 42 ; 0 0 73 75 70 83 88 95 85 92 87 77 80 79 59 74 64 60 65 62 68 48 47 41 45 44 25 35 42 38 27 23 32 25 27 15 19 19 19 22 15 7 23 13 11 11 13 8 13 16 ; 0 0 0 26 19 32 34 39 41 42 40 40 27 22 36 35 23 18 30 27 29 20 24 16 22 23 24 18 20 16 22 17 18 12 6 14 9 13 17 6 11 5 10 5 10 10 7 8 3 17 ; 0 0 40 44 45 37 51 53 45 44 59 50 43 50 41 49 55 52 41 39 41 32 35 39 27 28 33 33 30 27 24 27 24 25 28 29 27 27 23 26 15 14 17 14 11 12 18 18 12 22 ; 0 0 81 80 65 78 97 86 88 81 77 75 69 78 80 71 70 55 61 49 60 47 47 48 43 44 37 35 27 38 40 37 42 31 25 31 24 25 21 22 16 13 15 17 11 15 5 9 9 17 ; 0 0 45 46 48 43 46 69 52 51 62 41 48 62 51 41 50 57 48 48 40 47 53 45 36 37 38 44 30 24 35 38 27 20 24 24 32 25 17 10 18 24 18 17 22 18 15 17 19 28 ; 0 0 34 38 50 43 50 42 61 55 55 54 72 53 58 48 57 48 53 45 57 41 39 41 41 44 38 31 22 38 45 21 25 28 32 29 16 26 15 27 12 17 20 20 10 19 14 13 22 21 ; 0 0 0 78 83 107 96 125 116 109 112 139 103 112 94 113 87 86 97 85 91 83 67 68 66 82 89 58 62 39 52 46 52 37 54 51 38 30 28 37 32 28 26 28 35 21 20 21 16 48 ; 0 0 0 0 0 0 76 65 86 72 89 81 85 83 94 92 82 92 89 77 75 59 66 58 46 58 58 59 53 51 58 45 38 39 26 26 29 29 20 26 18 26 18 32 21 14 26 17 16 90 ; 0 0 38 42 48 40 45 48 45 69 43 46 53 53 43 42 36 40 45 33 25 32 30 34 32 28 30 27 28 24 17 19 16 20 25 22 29 19 19 17 12 20 16 15 17 14 12 14 12 19 ; 0 0 39 41 43 46 41 62 62 57 45 53 60 62 61 63 49 42 57 57 56 52 40 47 44 38 38 40 41 35 28 31 38 29 33 26 28 24 20 23 15 19 14 21 19 13 20 14 15 22 ; 0 0 75 55 89 85 110 95 101 97 119 92 81 72 99 64 75 72 69 83 70 65 72 58 67 57 50 54 47 50 41 41 45 42 41 30 31 32 25 31 26 31 25 21 23 23 29 25 22 28 ; 0 0 33 37 49 86 74 72 79 64 74 69 93 80 65 73 68 65 72 54 46 58 58 59 56 61 52 37 39 40 37 38 29 29 29 28 25 37 19 19 22 26 20 15 24 17 13 21 12 53 ; 0 0 70 65 73 95 87 80 85 97 77 86 62 83 73 58 59 80 55 55 62 57 49 41 36 33 32 43 26 24 40 24 21 29 24 22 17 25 22 21 19 19 15 16 12 10 15 12 7 17 ; 0 0 37 37 53 49 55 58 56 42 56 44 48 36 47 60 45 53 47 49 42 47 38 36 47 38 39 47 36 42 29 25 25 35 30 19 27 25 24 23 16 21 23 21 16 19 18 11 13 27 ; 0 0 0 0 0 0 4 5 12 10 11 11 11 7 9 7 14 6 7 12 12 13 8 7 9 6 6 3 4 10 7 10 9 5 5 7 0 6 5 4 5 3 6 1 1 2 2 4 6 6 ; 0 0 0 0 25 38 32 38 41 49 33 43 43 29 37 32 38 34 34 32 26 20 26 21 25 15 12 32 19 13 21 17 10 21 17 14 17 11 11 18 8 11 8 12 3 12 3 5 5 20 ; 0 0 57 72 83 77 65 93 84 85 90 74 78 70 54 70 63 60 49 58 40 41 55 41 50 40 38 32 34 43 35 21 27 29 17 22 24 19 22 19 15 16 14 15 10 20 11 17 9 27 ; 0 0 35 39 41 43 55 57 70 53 57 60 46 55 60 58 40 49 50 47 46 48 51 50 38 46 47 44 38 31 36 37 27 38 23 29 20 37 23 23 13 23 19 17 24 16 8 10 13 36 ; 0 0 42 34 37 49 62 48 63 44 58 51 58 59 51 57 51 50 48 38 40 39 43 33 45 32 34 37 31 27 33 26 28 29 33 19 24 17 18 20 21 13 25 10 9 25 14 15 9 20 ; 0 0 80 69 75 91 85 96 104 92 83 91 88 84 77 85 70 70 60 77 59 57 52 45 62 62 43 45 47 27 22 40 32 37 31 28 31 43 19 31 20 24 20 18 22 17 18 12 9 31 ; 0 0 0 0 0 24 30 29 38 40 29 32 39 53 38 35 35 32 24 38 32 41 24 33 30 25 25 28 23 20 24 19 12 13 19 16 17 16 15 16 9 8 12 16 10 15 9 7 15 26 ; 0 0 0 0 26 90 92 100 104 119 136 132 138 130 128 109 125 101 100 97 106 100 90 97 89 80 72 68 72 68 60 51 65 58 55 57 45 45 43 31 46 32 35 39 31 33 34 30 24 47 ; 0 0 59 82 96 77 105 96 113 94 89 101 92 93 93 91 85 93 88 87 88 82 87 77 77 66 55 56 47 57 45 51 54 45 49 40 35 43 40 30 34 31 30 25 24 32 23 23 23 51 ; 0 0 80 73 103 97 98 116 124 128 120 110 118 105 121 117 81 86 92 85 67 70 83 58 71 46 54 49 61 56 51 47 31 47 37 41 32 30 36 34 27 23 31 24 14 23 14 21 13 37 ; 0 0 33 40 65 89 92 106 90 114 100 127 122 117 121 86 102 97 121 103 94 106 96 107 93 101 96 77 87 79 71 77 77 74 63 68 52 64 53 59 60 43 57 41 39 45 44 45 31 76 ; 0 0 46 41 40 43 40 38 53 34 65 51 50 55 49 55 52 51 35 50 43 36 24 23 39 23 25 42 34 20 19 16 25 21 27 17 19 27 17 21 10 13 7 13 14 10 10 9 17 22 ; 0 0 171 159 207 211 192 238 260 239 205 256 230 231 214 229 230 198 199 191 204 184 169 194 172 169 163 166 140 134 130 139 150 113 105 109 112 104 95 96 85 87 75 63 78 85 70 53 64 115 ; 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 2 2 0 0 3 0 0 1 1 0 2 0 0 2 1 0 1 0 1 0 0 1 0 2 0 1 0 1 0 1 1 0 1 ; 0 0 0 0 29 32 38 34 37 28 38 49 45 36 39 34 37 14 29 19 35 36 29 34 20 28 21 32 18 17 20 19 12 27 14 17 16 15 12 12 8 10 10 7 10 10 12 6 9 12 ; 0 0 0 34 41 42 104 100 104 108 110 111 103 106 99 107 89 117 105 98 86 89 90 79 89 65 95 75 58 66 50 67 62 53 43 50 37 43 44 52 32 35 36 33 30 37 31 29 26 68 ; 0 0 37 42 49 59 53 50 54 62 64 50 55 50 51 60 51 44 42 45 50 42 36 39 39 46 32 33 41 39 35 38 31 27 29 29 24 27 23 20 12 21 25 19 13 14 22 19 20 25 ; 0 0 47 42 46 57 58 52 63 56 67 68 56 51 71 56 63 49 46 37 37 59 39 53 34 34 43 30 31 31 37 26 33 23 22 21 24 21 22 19 14 21 15 20 17 11 20 12 12 30 ; 0 0 0 0 69 85 92 83 88 82 85 87 88 89 92 80 81 80 79 53 74 52 63 53 56 71 41 50 42 51 29 32 47 29 34 34 29 28 29 27 17 19 20 32 13 22 15 13 11 69 ; 0 0 0 36 37 53 31 43 70 51 67 53 54 58 53 46 48 54 35 45 54 35 45 38 32 38 22 36 36 33 33 32 25 29 20 13 20 30 14 20 14 24 25 19 11 8 24 15 8 45 ; 0 0 31 40 70 73 74 79 98 97 94 87 77 87 69 100 78 81 66 80 66 75 81 68 81 69 53 67 60 59 54 56 61 41 39 51 41 28 35 43 40 35 39 32 31 30 32 28 23 54 ; 0 0 28 33 48 48 47 57 57 56 48 52 47 49 64 39 45 50 53 52 41 35 32 43 44 27 37 26 23 27 24 27 25 26 21 26 26 16 11 12 12 12 25 14 13 12 12 13 7 17 ; 0 0 0 3 11 18 24 29 37 36 38 36 45 35 51 45 50 48 45 38 37 45 48 54 47 42 32 37 30 22 40 28 24 22 33 29 35 19 32 31 21 18 17 14 24 22 17 12 11 32 ; 0 0 36 40 33 46 64 54 60 50 61 63 51 61 55 63 50 46 55 49 44 49 39 45 25 36 36 24 27 35 18 34 18 26 26 25 18 15 18 14 16 18 15 25 16 14 11 17 10 19 ; 0 0 41 34 42 59 63 51 66 62 46 47 60 58 52 57 40 51 61 60 58 44 43 39 45 44 34 46 36 39 46 36 41 25 34 26 26 32 22 36 20 20 21 20 20 16 12 20 14 30 ; 0 0 0 0 0 0 30 34 22 40 42 35 40 37 39 40 31 38 38 29 31 37 31 26 33 27 28 25 26 27 18 16 16 13 8 15 11 13 12 18 13 15 5 13 11 8 6 7 12 19 ; 0 0 73 97 96 88 129 122 117 113 138 120 110 120 117 120 115 91 100 81 84 82 99 99 70 82 80 84 76 73 60 70 76 53 59 69 53 46 65 52 43 51 30 43 42 45 28 27 30 71 ; 0 0 24 55 40 50 52 42 56 64 49 45 53 46 48 53 41 40 44 51 48 48 39 42 32 40 28 30 25 28 24 32 38 25 30 21 21 16 16 24 20 24 19 15 11 20 16 18 15 27 ; 0 0 85 68 103 97 115 120 115 115 126 116 118 103 96 109 107 91 89 89 82 59 74 77 70 55 54 58 52 57 61 37 42 47 30 38 28 25 42 36 25 28 24 22 22 22 17 16 26 31 ; 0 0 0 0 1 1 2 1 2 6 3 8 5 12 5 7 7 9 1 8 8 18 10 5 13 5 8 13 9 10 6 12 11 11 13 12 11 5 7 8 7 8 6 11 4 8 6 4 7 8 ; 0 0 0 74 80 66 87 77 78 85 81 77 70 72 76 95 71 64 64 62 66 49 52 41 40 45 49 44 37 46 30 30 26 29 22 28 29 34 21 21 18 22 22 11 13 16 12 10 6 26 ; 0 0 29 41 36 45 43 63 61 70 45 56 46 53 48 45 48 44 57 45 47 36 52 43 43 39 42 36 29 29 21 26 21 33 21 26 20 26 19 17 17 26 9 15 17 17 9 17 13 26 ; 0 0 48 32 57 58 52 69 63 52 66 55 63 55 70 65 68 52 54 44 47 61 51 45 43 58 35 38 37 26 39 37 30 26 32 30 24 20 22 24 35 17 23 20 19 21 28 33 11 38 ; 0 0 45 38 32 47 60 49 56 59 54 72 51 66 59 50 70 63 47 48 48 39 36 42 43 26 30 31 25 33 36 36 33 24 37 25 23 18 16 26 21 16 20 14 17 16 10 12 14 21 ; 0 0 34 50 68 76 92 107 134 148 104 163 131 132 141 136 153 124 129 127 127 119 119 108 121 105 104 115 103 85 78 67 82 80 87 69 78 62 56 66 64 50 45 54 54 59 47 39 46 119 ; 0 0 0 0 0 33 34 37 27 41 30 47 50 19 35 42 26 36 33 23 26 24 23 29 19 24 20 13 19 24 13 19 18 18 13 11 17 8 15 11 12 5 5 7 13 7 6 13 6 25 ; 0 0 0 0 35 28 32 41 35 34 38 46 36 41 31 38 29 32 24 27 23 36 15 23 18 19 17 28 21 16 14 17 20 14 15 7 21 8 9 11 9 15 10 6 8 13 8 6 8 20 ; 0 0 0 0 34 40 51 81 93 91 97 103 111 106 113 99 109 108 121 99 76 82 82 78 66 76 67 79 86 69 73 68 68 69 49 50 52 49 40 52 46 42 47 46 46 27 37 41 25 113 ; 0 0 0 0 28 28 44 52 44 39 42 26 39 42 50 39 46 39 41 33 43 29 41 32 29 27 29 16 12 16 19 19 20 22 15 14 9 13 5 15 10 14 8 2 7 10 12 5 7 25 ; 0 0 45 38 49 39 58 64 53 50 61 52 67 58 53 50 51 60 38 47 44 41 42 42 47 38 40 33 36 36 44 28 27 38 36 22 17 24 24 22 24 21 23 18 14 13 12 18 16 17 ; 0 0 0 111 120 115 124 176 179 151 210 164 138 159 139 121 140 159 126 146 109 121 107 126 125 90 94 98 76 86 94 83 64 56 77 61 61 45 68 46 56 48 45 43 47 44 36 39 29 79 ; 0 0 37 35 39 43 39 51 51 57 52 47 52 64 52 47 65 34 52 49 43 38 38 46 36 34 32 32 34 37 26 30 31 23 25 21 25 19 17 19 19 16 17 29 16 12 20 13 11 29 ; 0 0 0 71 90 77 94 93 90 94 102 72 82 82 82 67 72 69 69 53 63 67 55 45 53 65 61 46 41 41 40 43 26 28 35 28 30 46 21 24 20 32 21 28 22 11 17 10 12 56 ; 0 0 70 66 100 109 136 126 112 114 117 112 101 96 110 110 84 106 93 75 82 79 81 73 70 53 49 54 64 50 52 42 40 35 43 39 40 32 27 27 26 20 21 29 22 26 35 14 18 16 ; 0 0 34 52 41 44 50 53 71 75 56 69 65 66 75 57 62 63 52 54 53 50 58 49 50 36 33 38 37 40 34 36 28 38 31 23 34 30 14 15 17 16 28 15 17 20 22 17 10 37 ; 0 0 0 0 0 0 11 11 5 5 6 14 17 15 8 9 8 10 8 8 5 9 12 13 4 11 7 2 6 6 3 9 8 6 5 3 4 5 5 11 1 2 2 5 0 1 5 3 1 13 ; 0 0 0 0 0 0 27 25 32 39 35 35 54 36 38 37 41 49 28 33 42 23 33 22 36 31 28 26 25 24 22 15 19 27 20 25 15 19 15 12 22 11 8 14 13 18 11 12 5 35 ; 0 0 0 0 0 0 0 1 3 1 0 0 3 1 2 3 0 4 3 2 3 2 2 6 2 3 1 3 4 2 4 3 1 5 2 4 0 1 2 1 1 2 0 1 3 0 0 4 1 0 ; 0 0 0 79 81 80 95 102 87 105 95 100 91 91 89 68 73 62 77 87 63 66 68 61 50 48 45 54 48 52 45 31 33 30 27 32 35 28 32 29 18 20 17 18 28 19 15 18 11 32 ; 0 0 49 41 39 56 52 67 60 43 49 58 45 53 50 46 50 47 55 38 42 39 31 37 51 34 30 35 40 25 24 29 30 25 21 27 23 19 30 27 21 19 16 20 17 21 8 14 18 28 ; 0 0 34 42 36 38 46 49 47 39 47 42 51 48 59 41 61 51 49 37 40 39 40 28 34 33 44 26 27 42 29 25 21 22 23 16 25 22 16 17 16 18 12 12 10 16 3 8 8 20 ; 0 0 0 0 0 0 1 0 3 1 3 3 2 3 0 1 4 1 4 3 1 3 2 2 1 0 5 4 2 3 4 2 2 2 2 2 1 5 0 1 1 0 0 2 0 1 0 0 0 3 ; 0 0 0 44 44 34 51 45 57 54 57 42 60 55 66 46 42 35 49 37 46 46 50 38 38 39 40 20 20 25 33 32 31 23 24 20 23 15 17 12 20 14 21 16 23 8 10 11 7 28 ; 0 0 0 0 0 0 24 23 38 39 41 26 42 38 45 35 39 32 36 35 36 35 26 32 26 25 31 25 20 29 23 18 18 16 27 14 17 21 14 17 8 10 17 12 6 17 12 8 8 25 ; 0 0 0 0 0 0 12 18 20 31 28 21 16 32 26 29 27 21 29 34 17 22 16 17 26 15 16 23 16 9 17 13 15 13 10 9 7 6 15 8 8 7 6 3 2 6 11 3 3 33 ; 0 0 0 0 0 0 0 0 2 1 2 1 1 2 0 1 0 0 1 2 2 0 3 1 1 2 3 0 0 0 1 0 2 1 0 0 0 2 1 0 0 0 0 1 0 2 1 1 0 2 ; 0 0 40 39 37 50 44 59 51 73 82 46 42 70 52 52 59 47 51 34 50 41 52 45 36 35 41 44 38 33 35 26 25 27 31 28 19 26 28 27 24 11 17 18 11 12 16 15 8 32 ; 0 0 40 23 44 33 52 42 51 55 39 47 29 43 53 33 42 46 45 49 27 29 40 43 31 36 32 27 28 19 14 28 14 17 17 24 26 11 17 6 12 19 13 14 10 7 12 5 17 15 ; 0 0 0 0 0 0 26 38 32 23 37 37 39 28 45 31 49 36 27 35 25 38 28 33 36 22 25 31 23 22 19 13 17 16 25 22 16 19 17 15 17 16 14 10 8 12 8 12 7 25 ; 0 0 36 34 46 50 56 54 55 54 59 59 49 57 48 53 59 40 64 39 43 49 46 36 39 41 29 36 28 29 33 21 36 25 32 16 25 23 25 19 17 21 23 17 25 16 15 13 13 24 ; 0 0 0 0 0 0 3 4 4 5 7 7 6 14 12 15 11 14 19 21 20 26 28 21 23 19 33 20 18 24 16 19 20 27 16 27 18 31 32 25 23 31 24 15 15 15 21 20 19 50 ; 0 0 51 34 67 55 68 50 56 55 42 58 52 53 64 48 40 47 61 57 46 52 42 46 31 44 32 38 27 30 21 23 31 34 28 29 24 16 31 21 13 24 13 11 11 12 12 16 23 26 ; 0 0 0 1 0 2 8 3 15 11 11 11 11 7 10 12 11 18 13 6 12 17 14 10 13 12 18 12 15 10 11 7 10 10 10 12 12 11 8 8 10 7 7 8 7 7 10 7 8 9 ; 0 0 40 44 43 46 44 46 69 46 57 47 43 66 47 60 46 51 55 56 50 35 43 49 47 41 32 28 33 42 41 32 27 21 30 28 16 23 23 20 16 21 20 23 18 19 19 14 12 24 ; 0 0 34 33 43 50 62 56 57 52 51 67 60 54 59 75 44 62 55 53 30 45 47 43 32 30 24 45 38 33 30 44 29 32 25 20 24 20 22 26 16 21 21 18 12 17 16 12 14 24 ; 0 0 31 38 42 47 41 62 64 48 55 59 57 72 46 61 69 55 51 54 43 49 47 35 41 40 27 30 28 31 32 23 29 34 32 28 29 27 17 20 19 18 17 13 14 15 16 13 10 25 ; 0 0 58 64 62 89 103 81 91 103 84 85 86 74 86 61 80 61 52 61 65 54 52 49 56 47 55 56 42 40 38 38 40 37 34 38 32 22 33 19 21 15 15 19 20 14 19 20 10 26 ; 0 0 0 0 17 20 20 28 24 36 26 36 35 28 33 32 16 26 25 28 22 23 24 16 15 20 24 29 14 21 14 10 18 17 13 17 15 6 15 14 13 10 15 10 12 7 11 9 6 17 ; 0 0 0 74 63 73 79 73 82 105 90 102 86 64 84 83 73 63 73 73 67 62 54 64 69 61 47 42 41 35 48 29 35 43 39 27 24 36 25 18 33 16 19 16 21 23 15 10 9 35 ; 0 0 32 40 52 30 63 60 52 49 54 59 55 61 49 49 54 38 51 46 46 52 38 34 30 40 46 34 40 30 30 33 32 32 34 24 18 31 22 20 19 21 18 10 22 17 13 6 9 23 ; 0 0 33 34 40 40 46 49 52 55 53 58 60 59 53 50 47 49 47 58 49 30 33 38 33 30 33 44 30 23 24 26 14 30 18 20 27 16 16 17 22 24 22 19 15 15 17 8 13 17 ; 0 0 39 37 45 46 59 39 58 61 63 55 53 51 53 60 47 38 52 48 50 40 46 35 42 29 32 29 28 24 32 31 31 32 29 12 25 16 15 21 17 19 13 22 15 12 16 17 16 30 ; 0 0 35 49 50 54 52 53 54 61 63 45 55 57 49 41 51 60 57 52 46 48 54 44 42 37 48 34 35 36 24 34 36 27 28 28 34 19 25 17 28 26 19 22 22 24 19 9 15 26 ; 0 0 0 0 8 12 11 10 4 8 13 15 13 12 15 10 5 11 11 7 15 10 4 10 11 14 15 10 9 4 6 7 4 5 3 7 6 7 10 5 4 1 7 3 2 9 6 2 6 10 ; 0 0 0 0 0 0 0 1 0 1 1 1 2 2 2 0 0 1 1 1 2 1 0 1 0 0 5 4 2 0 0 4 0 1 3 3 4 1 2 1 1 0 3 0 0 1 1 3 0 0 ; 0 0 0 0 0 0 1 3 7 10 12 10 14 22 16 20 27 29 32 37 35 31 35 19 31 35 35 36 36 32 26 32 41 26 35 42 32 31 30 29 29 22 21 27 37 29 30 37 26 84 ; 0 0 0 0 0 31 33 38 43 43 45 47 32 36 37 36 27 38 32 31 29 35 27 26 18 33 23 19 19 20 19 20 17 21 11 14 20 13 13 7 10 4 6 6 9 6 15 11 7 32 ; 0 0 0 0 1 0 8 3 6 9 11 6 9 10 9 6 17 20 10 13 13 13 8 10 8 16 12 15 14 13 9 12 8 2 8 9 7 11 11 11 4 6 5 6 7 3 2 7 4 7 ; 0 0 35 50 42 50 50 60 58 58 44 66 51 59 65 51 52 52 58 46 45 60 49 51 51 32 29 38 37 31 36 36 29 25 26 22 31 24 19 20 21 26 19 10 14 24 18 15 12 30 ; 0 0 30 40 44 41 40 44 50 56 42 46 41 53 29 54 36 49 37 41 39 26 51 32 37 32 33 29 32 29 31 18 29 25 27 20 16 8 13 18 14 15 15 16 13 9 14 12 4 14 ; 0 0 0 8 5 17 20 20 25 16 24 27 30 30 27 35 34 28 33 34 30 20 22 29 25 18 29 18 16 17 23 22 23 17 23 13 13 16 24 14 17 8 9 12 15 8 11 7 8 17 ; 0 0 41 44 44 61 53 61 51 53 66 55 65 68 59 52 62 42 57 45 49 45 54 44 44 45 44 46 44 33 31 32 32 42 19 27 32 28 38 33 35 27 27 25 15 22 21 23 15 30 ; 0 0 0 0 0 3 1 3 5 3 14 8 12 16 12 16 18 14 17 13 17 14 21 35 22 21 18 14 10 15 21 21 12 20 17 15 18 16 11 19 15 14 5 11 8 15 9 12 12 32 ; 0 0 0 0 26 26 38 36 41 49 24 38 41 31 41 38 42 38 34 29 34 25 34 23 20 27 32 23 16 28 25 22 17 14 26 12 14 12 4 16 11 8 10 10 8 8 10 10 13 8 ; 0 0 72 73 61 93 93 94 89 91 91 79 96 86 74 70 64 86 58 70 64 66 58 53 48 49 47 48 56 49 35 36 30 27 27 22 25 33 33 23 13 29 14 14 23 18 17 16 12 28 ; 0 0 0 0 0 0 0 0 1 0 3 0 1 4 3 3 4 3 6 5 2 2 6 9 6 3 2 8 2 2 5 4 4 1 3 6 7 3 6 6 6 5 7 3 2 4 2 2 10 6 ; 0 0 0 0 0 1 0 0 0 2 2 1 2 1 1 0 1 1 1 0 1 2 2 0 1 0 1 1 1 0 1 0 1 0 0 0 2 0 0 1 0 1 1 0 0 0 0 0 0 3 ; 0 0 29 53 47 41 58 54 50 48 51 54 56 45 51 49 33 44 33 52 43 44 38 29 33 32 38 29 28 30 36 28 22 16 18 22 25 21 17 8 17 11 15 18 7 10 15 8 8 19 ; 0 0 34 43 46 48 59 46 42 55 54 48 49 48 48 52 40 44 28 43 31 26 38 27 25 33 39 29 34 29 24 23 13 15 16 17 17 14 15 14 13 12 10 13 12 12 9 6 12 16 ; 0 0 0 19 14 11 16 18 14 16 29 22 16 27 24 16 19 17 14 10 23 14 13 24 17 14 17 19 14 10 15 10 12 7 8 8 13 10 12 9 6 3 6 9 5 5 9 11 7 21 ; 0 0 28 36 44 44 49 73 62 40 65 68 44 55 48 38 51 61 50 51 40 46 54 40 37 42 27 34 32 29 25 28 26 30 23 28 29 25 24 17 22 13 16 16 11 15 9 16 16 23 ; 0 0 0 0 0 3 0 2 1 3 3 2 2 6 1 4 1 5 1 5 0 4 2 2 3 4 0 3 1 2 2 2 5 1 0 4 4 2 2 2 3 3 0 2 1 1 1 1 2 2 ; 0 0 0 0 0 0 2 2 0 2 2 3 4 3 5 5 4 4 7 5 4 3 6 2 2 5 9 1 7 6 2 3 2 1 4 5 7 5 5 6 3 6 2 7 1 4 4 2 2 5 ; 0 0 0 45 41 26 39 57 57 50 53 62 51 47 52 43 32 57 50 59 37 44 39 39 40 49 53 32 44 27 31 23 30 27 23 28 28 17 24 25 14 28 12 13 15 17 11 15 14 33 ; 0 0 0 0 0 0 0 2 2 0 2 0 2 1 2 0 0 3 0 3 2 1 1 2 4 1 0 2 0 1 3 2 1 2 1 1 1 1 2 0 0 2 1 0 2 0 1 0 1 1 ; 0 0 0 0 0 0 1 2 3 2 2 3 2 4 3 5 5 4 2 6 6 7 2 11 9 6 10 7 9 6 6 6 6 2 5 1 3 9 9 8 4 1 3 5 5 8 1 5 3 17 ; 0 0 0 0 16 20 19 25 25 22 19 39 32 23 34 32 27 25 28 31 19 21 27 27 26 10 16 19 18 16 17 19 11 10 14 10 8 16 11 13 9 15 14 10 8 6 11 4 8 29 ; 0 0 0 0 0 0 1 0 2 1 1 4 4 2 2 0 3 0 1 3 2 0 4 4 3 1 0 1 0 2 2 2 1 0 1 1 1 1 2 0 0 1 1 0 0 1 0 0 1 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 1 0 1 0 0 1 0 0 1 1 0 0 1 1 1 1 1 0 0 1 0 ; 0 0 0 0 0 22 34 28 39 35 32 55 37 45 34 34 33 30 32 36 34 31 30 27 34 29 23 28 24 24 26 16 19 24 17 8 22 7 13 13 17 8 15 13 13 14 11 10 14 21 ; 0 0 0 0 0 0 0 1 0 0 1 0 1 2 3 3 0 0 1 1 2 2 5 1 3 4 3 2 7 2 2 6 3 3 4 1 6 2 1 1 1 2 2 3 1 2 1 4 1 7 ; 0 0 0 3 1 4 1 8 4 6 8 4 6 9 2 6 7 3 7 4 4 4 8 4 7 2 5 3 5 2 3 3 3 3 4 3 3 3 7 0 1 2 2 3 1 2 4 0 0 1 ; 0 0 0 0 0 0 0 0 2 0 0 2 2 2 7 2 2 2 2 4 5 2 1 2 6 1 4 3 0 4 2 3 2 2 2 4 1 3 1 3 1 1 0 0 0 2 1 2 3 6 ; 0 0 0 0 0 24 28 27 33 40 42 40 40 40 37 42 39 44 37 27 27 23 30 31 35 17 17 20 14 17 19 22 19 23 18 18 22 15 12 19 15 15 7 18 6 5 11 8 4 30 ; 0 0 0 0 0 0 1 2 2 0 2 3 5 5 9 4 2 0 1 8 2 3 2 7 4 4 5 3 4 2 6 4 3 3 2 2 6 1 4 2 3 4 1 2 2 3 1 1 5 7 ; 0 0 0 0 0 1 0 0 2 1 2 3 1 2 3 5 4 6 5 2 5 6 5 5 3 7 4 4 2 4 5 5 5 8 4 4 3 5 2 1 8 4 3 2 1 4 5 7 6 12 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 1 ; 0 0 0 0 0 0 0 0 0 2 0 2 1 1 3 2 1 2 2 3 2 0 0 3 6 1 0 0 2 1 2 0 2 2 2 1 1 2 2 2 2 4 3 3 3 0 1 0 3 6 ; 0 0 0 0 0 0 0 3 1 3 4 9 13 8 10 13 17 9 10 19 13 17 8 15 19 17 20 10 15 16 18 17 22 13 28 13 14 6 16 11 13 13 15 12 16 13 7 10 6 23 ; 0 0 0 0 0 2 2 3 3 4 6 6 8 13 11 8 12 7 9 17 11 13 16 11 15 11 12 21 14 12 12 15 12 11 16 10 9 11 14 17 16 7 11 6 13 8 9 11 9 29 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 3 1 0 3 0 1 6 2 3 2 4 6 1 1 3 0 1 1 1 2 4 2 2 1 2 2 1 3 3 0 2 1 1 1 3 1 10 ; 0 0 0 0 1 0 0 0 1 0 0 0 0 1 1 1 1 1 2 0 1 0 0 1 2 0 2 1 1 1 2 3 1 2 3 2 3 0 0 0 0 3 1 0 3 0 4 1 0 2 ; 0 0 0 0 0 0 9 6 9 11 13 11 14 14 13 10 11 14 11 9 10 7 8 7 6 5 9 11 9 7 4 8 7 6 5 7 5 4 7 5 4 4 3 7 3 5 1 4 0 4 ; 0 0 0 0 0 0 0 2 2 0 2 1 0 1 1 1 4 0 2 2 0 1 4 0 1 2 1 2 1 1 0 3 1 2 3 5 1 2 2 2 1 2 0 2 2 3 1 1 2 3 ; 0 0 0 0 0 0 0 0 0 0 6 1 4 6 10 4 5 12 6 4 4 5 1 7 7 7 4 5 4 7 5 3 3 3 5 2 1 7 5 2 4 5 5 1 5 4 3 2 1 11 ; 0 0 0 0 1 1 2 1 4 5 1 4 4 5 3 3 2 7 4 6 4 2 4 5 6 3 2 0 5 3 2 1 6 0 3 3 6 1 4 3 2 1 1 2 1 0 2 2 3 3 ; 0 0 0 0 0 0 1 1 1 1 1 2 4 2 7 2 10 3 5 5 4 10 5 10 8 4 9 6 13 10 9 5 4 7 4 5 4 10 5 12 6 4 6 4 3 5 3 4 4 12 ; 0 0 0 0 0 0 2 0 0 0 2 0 2 2 2 2 2 9 0 1 3 1 3 0 1 0 2 2 2 3 3 3 0 1 5 2 0 1 2 0 1 2 1 0 0 0 1 3 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 1 0 0 0 0 0 1 0 0 0 0 2 0 0 0 0 1 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 3 ; 0 0 0 0 0 0 7 9 10 14 13 5 15 8 14 13 11 10 7 8 13 13 10 11 5 5 8 9 3 4 9 9 4 10 7 6 3 10 5 3 8 6 3 6 3 4 3 3 4 11 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 1 0 1 0 4 1 0 1 1 1 0 1 1 0 0 1 2 2 2 1 2 1 0 2 0 1 0 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 2 1 0 0 1 2 0 1 0 1 0 1 0 0 4 3 3 3 0 0 1 0 0 0 0 0 1 1 0 3 0 2 0 0 0 0 0 1 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 8 6 12 11 13 12 7 11 10 9 7 7 11 12 14 7 8 10 12 5 6 7 9 7 12 9 6 10 2 10 4 5 5 6 3 5 4 4 3 4 1 3 1 12 ; 0 0 0 0 0 2 2 1 3 0 3 5 4 6 3 6 5 5 2 6 2 6 5 5 4 3 6 8 5 4 2 2 4 2 5 1 4 4 3 0 1 2 5 4 3 1 4 1 1 6 ; 0 0 0 0 0 1 0 1 3 0 4 1 0 1 1 1 0 1 1 0 0 3 3 1 0 3 1 2 2 1 1 2 0 1 4 2 2 0 1 1 0 3 3 1 1 2 2 2 0 3 ; 0 0 0 0 0 0 3 2 2 3 3 5 2 2 5 3 1 7 8 9 6 4 11 10 11 7 9 9 10 7 4 13 13 10 7 12 7 8 10 4 4 5 4 5 8 3 5 5 4 12 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 2 2 0 1 0 0 2 0 1 1 4 1 0 1 0 1 1 1 2 3 1 1 0 3 0 1 1 2 1 1 0 0 2 1 0 0 1 ; 0 0 0 0 0 0 8 10 5 7 15 11 13 11 3 8 10 12 11 10 10 13 7 8 12 10 8 8 4 8 12 8 8 6 6 10 5 9 1 7 3 2 4 4 4 4 1 3 1 10 ; 0 0 0 0 0 0 0 0 1 1 1 0 0 0 2 0 1 0 0 2 0 1 2 1 0 1 1 3 2 3 2 0 2 3 1 2 0 2 2 2 3 0 0 2 0 1 0 1 0 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 1 2 0 1 0 0 0 0 0 0 0 1 1 2 2 2 0 2 0 1 0 1 0 0 0 0 0 0 1 1 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 2 2 0 0 1 1 0 0 1 0 1 0 2 1 1 0 0 1 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 2 0 0 1 1 1 2 1 0 0 1 1 0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 1 0 1 2 1 0 1 1 0 2 2 0 0 1 0 1 1 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 1 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 1 0 0 1 2 1 3 0 2 0 0 0 0 1 0 0 1 1 0 2 0 1 0 0 1 2 0 0 1 1 2 0 0 2 0 0 1 0 0 0 2 ; 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 2 0 0 1 0 1 0 2 2 1 1 3 1 0 1 2 0 2 3 1 2 0 0 2 2 1 1 0 2 0 2 0 0 3 2 ; 0 0 0 0 0 0 1 0 0 1 0 0 2 1 3 0 1 0 3 0 1 2 0 0 1 2 5 2 0 0 5 1 0 1 3 0 2 2 2 3 0 1 0 2 1 2 0 3 2 2 ; 0 0 0 0 0 0 0 2 0 2 1 3 0 1 4 1 1 1 3 0 0 5 0 0 3 3 0 3 3 1 1 2 3 1 3 3 1 4 1 1 2 0 1 1 4 1 1 1 0 4 ; 0 0 0 0 0 0 1 1 0 2 1 2 4 1 1 4 2 2 3 2 3 3 3 1 1 3 0 6 1 1 0 1 2 2 2 3 4 0 0 1 2 2 0 0 2 2 2 2 1 2 ; 0 0 0 0 0 0 0 3 1 2 4 3 7 3 1 2 1 1 2 2 1 3 2 2 4 6 5 2 4 0 1 3 1 2 3 1 2 2 1 2 1 0 0 3 1 1 0 2 2 5 ; 0 0 0 2 1 4 6 4 6 4 10 4 9 6 10 3 2 8 2 2 7 7 7 6 4 4 6 3 3 3 3 4 1 3 1 1 3 0 5 0 1 2 1 4 1 2 0 4 2 3 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 3 0 0 4 1 0 2 4 0 3 0 2 1 2 2 3 0 1 3 2 1 2 2 0 1 0 3 1 1 1 0 1 0 2 0 0 2 2 0 0 0 0 1 4 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 1 0 2 0 2 1 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 1 0 1 0 0 0 1 0 2 ; 0 0 0 0 1 0 0 1 0 1 3 0 0 1 1 0 4 1 0 0 4 1 1 2 1 1 0 0 1 0 2 1 0 0 1 0 1 1 0 0 0 0 1 1 3 0 0 1 1 2 ; 0 0 0 0 0 0 0 0 0 2 1 2 1 0 1 0 2 1 3 3 4 0 0 1 3 1 2 1 2 2 1 1 1 4 2 0 0 4 0 1 1 1 0 1 1 0 2 2 0 1 ; 0 0 0 0 0 0 0 0 1 0 0 1 0 2 0 4 3 0 2 3 5 3 2 4 2 2 4 2 10 3 5 4 2 1 3 5 5 7 2 4 3 0 1 2 1 1 1 1 2 6 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 1 2 0 1 5 0 3 3 0 3 0 1 5 1 0 2 6 3 0 1 2 0 1 2 0 2 1 1 1 1 0 0 0 4 0 2 3 ; 0 0 0 0 0 0 0 0 1 1 0 0 1 1 1 2 1 7 1 2 3 0 0 5 3 5 2 3 1 1 0 3 1 0 2 1 1 1 2 1 2 1 2 0 1 2 0 2 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 2 ; 0 0 0 0 0 0 0 0 0 1 0 0 2 0 1 1 1 0 0 1 2 2 3 0 1 3 5 1 1 8 3 3 2 3 6 5 1 5 4 2 1 3 4 1 4 1 0 4 1 4 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 2 0 1 1 1 1 0 0 0 1 0 4 0 0 0 0 1 0 0 1 0 3 0 0 2 0 2 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 1 0 0 1 0 1 0 0 0 1 0 1 0 1 0 0 0 0 1 2 1 0 0 1 0 0 0 2 1 1 0 0 0 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 2 0 0 1 3 1 1 0 2 0 0 0 1 1 2 1 1 0 0 0 1 2 2 0 0 0 1 0 1 0 0 1 0 0 0 2 1 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 2 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 2 2 0 0 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 1 0 0 0 2 0 0 0 0 0 2 0 0 1 0 1 1 0 1 1 1 0 0 2 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 1 0 0 1 1 1 1 1 0 0 3 0 0 0 1 1 0 2 1 0 0 0 1 1 0 1 0 0 0 2 0 0 1 1 1 0 1 0 1 1 0 0 0 2 ; 0 0 0 0 0 0 0 0 1 0 0 0 3 0 1 2 0 1 0 1 3 1 1 2 4 1 0 1 0 4 1 1 0 0 2 0 0 2 0 0 1 1 1 0 1 0 1 2 1 4 ; 0 0 0 0 0 0 0 0 3 1 1 0 1 4 2 2 0 2 0 4 3 0 2 2 4 1 5 3 1 4 1 1 1 0 3 2 2 0 3 3 3 3 2 1 0 1 1 2 1 4 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 2 0 2 1 0 1 1 1 1 3 1 0 2 0 3 2 4 2 4 0 1 0 1 1 1 2 0 2 3 1 1 3 1 2 1 1 1 2 1 1 0 0 5 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 1 2 0 0 1 1 1 1 1 1 0 1 0 1 2 1 2 2 1 1 0 0 1 1 0 0 0 0 0 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 2 0 0 1 0 0 0 2 0 1 0 1 1 1 0 0 0 0 0 1 0 0 0 1 0 0 0 2 0 1 1 0 ; 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 1 0 1 0 1 0 0 0 0 1 0 0 0 1 0 1 1 1 1 0 0 1 2 3 ; 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 1 1 0 2 1 0 0 0 1 3 1 0 1 1 0 0 2 2 2 0 0 1 0 0 2 0 1 1 0 1 1 0 0 1 0 ; 0 0 0 0 0 0 4 0 1 5 6 1 6 1 6 5 4 4 6 6 2 1 3 8 3 6 1 5 2 6 6 7 3 5 2 2 0 2 4 2 1 6 3 1 2 2 3 2 0 5 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 ; 0 0 0 2 1 0 0 0 1 1 3 0 1 5 1 4 2 0 0 3 0 2 1 2 2 2 3 2 1 2 6 1 1 1 1 2 3 2 1 0 1 0 2 3 2 2 2 2 4 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 1 2 0 0 0 0 0 0 0 1 2 0 1 0 1 0 0 0 1 0 0 2 0 0 0 1 1 1 0 2 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 1 0 1 1 0 0 1 0 2 0 0 0 1 0 0 0 0 0 1 1 1 0 1 0 0 0 0 0 2 ; 0 0 0 0 0 0 0 0 0 0 2 0 1 2 2 3 5 0 2 2 1 1 2 2 2 1 0 3 0 4 3 2 0 0 2 3 1 1 1 0 0 2 2 3 1 0 1 4 1 6 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 2 ; 0 0 0 0 0 1 0 0 2 2 0 3 0 0 1 0 1 0 1 1 1 1 0 1 0 1 0 1 1 1 2 1 1 1 0 1 0 1 0 0 0 1 1 0 1 0 1 0 1 1 ; 0 0 0 0 0 0 0 1 0 0 0 1 0 1 2 1 0 1 1 0 3 2 2 1 5 1 2 1 0 1 0 2 3 5 1 2 4 2 2 0 1 4 2 1 3 2 1 1 1 5 ; 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 2 0 2 0 1 1 0 1 1 0 0 0 2 1 0 0 2 1 0 1 0 0 1 1 0 0 0 1 0 0 0 0 0 2 ; 0 0 0 0 1 1 2 1 1 0 2 1 2 0 0 1 1 2 0 2 0 1 0 0 1 1 3 1 1 1 1 1 0 0 1 0 0 1 0 0 2 1 0 1 0 0 0 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 2 0 0 0 2 1 0 1 0 0 ; 0 0 0 0 0 2 1 1 2 0 1 1 0 4 0 2 2 3 2 2 3 3 1 0 0 1 1 2 2 3 1 2 0 1 0 0 0 1 1 1 0 0 0 3 0 0 1 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 1 0 2 0 0 0 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 1 1 0 2 3 1 1 1 0 0 2 1 0 1 1 1 1 1 3 1 1 0 0 1 0 0 1 0 1 1 0 ; 0 0 0 0 0 0 0 0 0 0 3 0 1 0 0 2 1 1 0 1 0 1 1 1 0 2 2 0 1 2 2 0 0 0 1 2 1 4 0 0 2 0 1 1 0 2 3 0 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 0 1 0 0 1 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 3 2 0 2 1 1 0 2 1 1 3 1 0 0 3 1 1 0 3 0 0 2 2 2 0 1 0 2 1 2 0 0 0 2 0 1 1 0 2 0 1 1 1 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 2 1 0 0 1 0 0 0 1 0 0 1 0 1 0 0 0 1 1 1 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 1 1 2 1 0 0 0 2 2 1 0 1 1 1 1 5 0 2 2 1 2 0 2 2 0 1 1 1 0 1 1 1 3 0 1 0 3 1 1 1 2 2 1 ; 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 1 0 0 0 0 2 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 1 1 ; 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 2 2 1 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 2 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 1 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 1 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 2 0 0 0 0 0 0 1 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 0 0 3 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 1 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 ; 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ; ];